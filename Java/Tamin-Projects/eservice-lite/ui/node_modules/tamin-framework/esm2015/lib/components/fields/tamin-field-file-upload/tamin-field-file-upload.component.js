/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, forwardRef, Input, Output, ViewChild } from '@angular/core';
import { FieldBaseComponent } from '../../../base/field-base.component';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
export class TaminFieldFileUploadComponent extends FieldBaseComponent {
    constructor() {
        super(...arguments);
        this.maxLength = Number.MAX_SAFE_INTEGER;
        this.focus = new EventEmitter();
        this.blur = new EventEmitter();
    }
    /**
     * @return {?}
     */
    onShowPicker() {
        this.fileInput.nativeElement.click();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    changeFileUpload(event) {
        this.inputElement.nativeElement.value = event.target.files[0].name;
        this.onChange(event.target.files[0]);
    }
}
TaminFieldFileUploadComponent.decorators = [
    { type: Component, args: [{
                selector: 'tamin-field-file-upload',
                template: "<div class=\"input-wrapper\">\n  <input\n    id=\"textbox\"\n    style=\"padding-left: 35px;\"\n    type=\"text\"\n    [disabled]=\"control.disabled\"\n    class=\"tamin-form-control-input\"\n    [class.tamin-form-control-valid]=\"control.touched && control.valid\"\n    [class.tamin-form-control-invalid]=\"control.touched && !control.valid\"\n    #inputElement>\n  <span class=\"icon\" #icon>\n    <i\n      class=\"icon-folder-empty\"\n      style=\"font-size: 1.5em\"\n      (click)=\"onShowPicker()\"\n      [class.tamin-form-control-valid-icon]=\"control.touched && control.valid\"\n      [class.tamin-form-control-invalid-icon]=\"control.touched && !control.valid\"\n      #iconElement></i>\n  </span>\n</div>\n\n<input type=\"file\" #fileInput style=\"display:none\" (change)=\"changeFileUpload($event)\" [attr.accept]=\"accept\"/>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => TaminFieldFileUploadComponent)),
                        multi: true
                    }
                ],
                styles: [".input-wrapper{position:relative}.icon{position:absolute;top:23%;left:5px;height:10px;margin-top:-5px;cursor:pointer}.item{padding:5px;cursor:pointer}.item:hover{background-color:silver}"]
            }] }
];
TaminFieldFileUploadComponent.propDecorators = {
    maxLength: [{ type: Input }],
    accept: [{ type: Input }],
    focus: [{ type: Output }],
    blur: [{ type: Output }],
    fileInput: [{ type: ViewChild, args: ['fileInput',] }]
};
if (false) {
    /** @type {?} */
    TaminFieldFileUploadComponent.prototype.maxLength;
    /** @type {?} */
    TaminFieldFileUploadComponent.prototype.accept;
    /** @type {?} */
    TaminFieldFileUploadComponent.prototype.focus;
    /** @type {?} */
    TaminFieldFileUploadComponent.prototype.blur;
    /** @type {?} */
    TaminFieldFileUploadComponent.prototype.fileInput;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tZmllbGQtZmlsZS11cGxvYWQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vdGFtaW4tZnJhbWV3b3JrLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvZmllbGRzL3RhbWluLWZpZWxkLWZpbGUtdXBsb2FkL3RhbWluLWZpZWxkLWZpbGUtdXBsb2FkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFFLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNoSCxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUN0RSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQWNqRCxNQUFNLE9BQU8sNkJBQThCLFNBQVEsa0JBQWtCO0lBWnJFOztRQWNXLGNBQVMsR0FBRyxNQUFNLENBQUMsZ0JBQWdCLENBQUM7UUFFbkMsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDM0IsU0FBSSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFXdEMsQ0FBQzs7OztJQVJDLFlBQVk7UUFDVixJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN2QyxDQUFDOzs7OztJQUVELGdCQUFnQixDQUFDLEtBQUs7UUFDcEIsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUNuRSxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdkMsQ0FBQzs7O1lBM0JGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUseUJBQXlCO2dCQUNuQyxxMUJBQXVEO2dCQUV2RCxTQUFTLEVBQUU7b0JBQ1Q7d0JBQ0UsT0FBTyxFQUFFLGlCQUFpQjt3QkFDMUIsV0FBVyxFQUFFLFVBQVU7Ozt3QkFBQyxHQUFHLEVBQUUsQ0FBQyw2QkFBNkIsRUFBQzt3QkFDNUQsS0FBSyxFQUFFLElBQUk7cUJBQ1o7aUJBQ0Y7O2FBQ0Y7Ozt3QkFHRSxLQUFLO3FCQUNMLEtBQUs7b0JBQ0wsTUFBTTttQkFDTixNQUFNO3dCQUNOLFNBQVMsU0FBQyxXQUFXOzs7O0lBSnRCLGtEQUE2Qzs7SUFDN0MsK0NBQXdCOztJQUN4Qiw4Q0FBcUM7O0lBQ3JDLDZDQUFvQzs7SUFDcEMsa0RBQThDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgZm9yd2FyZFJlZiwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0LCBWaWV3Q2hpbGR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtGaWVsZEJhc2VDb21wb25lbnR9IGZyb20gJy4uLy4uLy4uL2Jhc2UvZmllbGQtYmFzZS5jb21wb25lbnQnO1xuaW1wb3J0IHtOR19WQUxVRV9BQ0NFU1NPUn0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0YW1pbi1maWVsZC1maWxlLXVwbG9hZCcsXG4gIHRlbXBsYXRlVXJsOiAnLi90YW1pbi1maWVsZC1maWxlLXVwbG9hZC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3RhbWluLWZpZWxkLWZpbGUtdXBsb2FkLmNvbXBvbmVudC5zY3NzJ10sXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVGFtaW5GaWVsZEZpbGVVcGxvYWRDb21wb25lbnQpLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgVGFtaW5GaWVsZEZpbGVVcGxvYWRDb21wb25lbnQgZXh0ZW5kcyBGaWVsZEJhc2VDb21wb25lbnQge1xuXG4gIEBJbnB1dCgpIG1heExlbmd0aCA9IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSO1xuICBASW5wdXQoKSBhY2NlcHQ6IHN0cmluZztcbiAgQE91dHB1dCgpIGZvY3VzID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgYmx1ciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQFZpZXdDaGlsZCgnZmlsZUlucHV0JykgZmlsZUlucHV0OiBFbGVtZW50UmVmO1xuXG4gIG9uU2hvd1BpY2tlcigpIHtcbiAgICB0aGlzLmZpbGVJbnB1dC5uYXRpdmVFbGVtZW50LmNsaWNrKCk7XG4gIH1cblxuICBjaGFuZ2VGaWxlVXBsb2FkKGV2ZW50KSB7XG4gICAgdGhpcy5pbnB1dEVsZW1lbnQubmF0aXZlRWxlbWVudC52YWx1ZSA9IGV2ZW50LnRhcmdldC5maWxlc1swXS5uYW1lO1xuICAgIHRoaXMub25DaGFuZ2UoZXZlbnQudGFyZ2V0LmZpbGVzWzBdKTtcbiAgfVxufVxuIl19