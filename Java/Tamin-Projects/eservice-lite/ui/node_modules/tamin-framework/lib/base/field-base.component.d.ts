import { AbstractControl, ControlContainer, ControlValueAccessor, FormBuilder } from '@angular/forms';
import { AfterViewInit, ElementRef, Injector, OnDestroy, OnInit } from '@angular/core';
import { Subscription } from 'rxjs';
import { OverlayService } from '../services/overlay/overlay.service';
import { PersianNumberPipe } from '../pipes/persian-number.pipe';
import { TaminRestService } from '../services/tamin-rest-service/tamin-rest.service';
export declare class FieldBaseComponent implements OnInit, ControlValueAccessor, OnDestroy, AfterViewInit {
    protected overlayService: OverlayService;
    protected restService: TaminRestService;
    protected controlContainer: ControlContainer;
    protected persianNumberPipe: PersianNumberPipe;
    protected injector: Injector;
    protected formBuilder: FormBuilder;
    inputElement: ElementRef;
    formControlName: string;
    placeHolder: string;
    hint: string;
    control: AbstractControl;
    protected maskRef: any;
    protected subscription: Subscription;
    protected onTouched: any;
    protected onChange: any;
    protected overlay: any;
    constructor(overlayService: OverlayService, restService: TaminRestService, controlContainer: ControlContainer, persianNumberPipe: PersianNumberPipe, injector: Injector, formBuilder: FormBuilder);
    getInputElementRef(): ElementRef;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    registerOnChange(fn: (_: any) => void): void;
    registerOnTouched(fn: any): void;
    writeValue(value: any): void;
    ngOnDestroy(): void;
    protected getValue(val: any): any;
    protected initValueAccessor(): void;
    startWaiting(): void;
    stopWaiting(): void;
    protected initializeComponent(): void;
    protected deepFind(obj: any, path: any): any;
}
