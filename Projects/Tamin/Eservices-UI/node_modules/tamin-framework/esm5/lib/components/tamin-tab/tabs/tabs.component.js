/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChildren, ElementRef, HostListener, Input, QueryList, ViewChild } from '@angular/core';
import { TaminTabItemComponent } from '../tab-item/tab-item.component';
import { delay, map, startWith } from 'rxjs/operators';
var TaminTabsComponent = /** @class */ (function () {
    function TaminTabsComponent() {
        this.layout = 'horizontal';
        this.tabPosition = 'top';
    }
    /**
     * @return {?}
     */
    TaminTabsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    TaminTabsComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.tabItems = this.tabs.changes
            .pipe(startWith(''))
            .pipe(delay(0))
            .pipe(map((/**
         * @return {?}
         */
        function () { return _this.tabs.toArray(); })));
    };
    /**
     * @return {?}
     */
    TaminTabsComponent.prototype.ngAfterContentChecked = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this.activeTab) {
            Promise.resolve().then((/**
             * @return {?}
             */
            function () {
                _this.activeTab = _this.tabs.first;
            }));
        }
    };
    /**
     * @param {?} tabItem
     * @return {?}
     */
    TaminTabsComponent.prototype.selectTab = /**
     * @param {?} tabItem
     * @return {?}
     */
    function (tabItem) {
        if (this.activeTab === tabItem) {
            return;
        }
        if (this.activeTab) {
            this.activeTab.isActive = false;
        }
        this.activeTab = tabItem;
        tabItem.isActive = true;
    };
    /**
     * @return {?}
     */
    TaminTabsComponent.prototype.getBorderClass = /**
     * @return {?}
     */
    function () {
        return this.tabPosition === 'top' ? 'border-bottom' : 'border-top';
    };
    /**
     * @return {?}
     */
    TaminTabsComponent.prototype.onResize = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var hasScroll = this.hasScroll(this.tabHeader.nativeElement, 'horizontal');
        this.scroll = hasScroll;
    };
    /**
     * @private
     * @param {?} el
     * @param {?} direction
     * @return {?}
     */
    TaminTabsComponent.prototype.hasScroll = /**
     * @private
     * @param {?} el
     * @param {?} direction
     * @return {?}
     */
    function (el, direction) {
        direction = (direction === 'vertical') ? 'scrollTop' : 'scrollLeft';
        /** @type {?} */
        var result = !!el[direction];
        if (!result) {
            el[direction] = 1;
            result = !!el[direction];
            el[direction] = 0;
        }
        return result;
    };
    /**
     * @param {?} direction
     * @return {?}
     */
    TaminTabsComponent.prototype.scrollTo = /**
     * @param {?} direction
     * @return {?}
     */
    function (direction) {
        this.tabHeader.nativeElement.scrollLeft += direction === 'left' ? -100 : 100;
    };
    /**
     * @return {?}
     */
    TaminTabsComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.onResize();
        }));
    };
    TaminTabsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tamin-tabs',
                    template: "<div class=\"tabs\">\n  <div *ngIf=\"tabPosition==='top'\" class=\"tab-header\" [ngClass]=\"getBorderClass()\">\n    <div class=\"flex-container\">\n      <div class=\"paddle\" *ngIf=\"scroll\" (click)=\"scrollTo('right')\"><i class=\"icon-right-open\"></i></div>\n      <ul #tabHeader>\n        <li\n          *ngFor=\"let item of tabItems | async\" (click)=\"selectTab(item)\"\n          [ngClass]=\"{'tab-header-item-active' : activeTab == item}\" class=\"tab-header\">\n          <ng-container *ngIf=\"item.labelComponent\">\n            <ng-container *ngTemplateOutlet=\"item.labelComponent.labelContent\">\n            </ng-container>\n          </ng-container>\n        </li>\n      </ul>\n      <div class=\"paddle\" *ngIf=\"scroll\" (click)=\"scrollTo('left')\">\n        <i class=\"icon-left-open\" style=\"margin-right: 5px;margin-left: 0;\"></i>\n      </div>\n    </div>\n  </div>\n  <div class=\"tab-content\" *ngFor=\"let item of tabItems | async\" [hidden]=\"activeTab !== item\">\n    <ng-container *ngTemplateOutlet=\"item.bodyComponent.bodyContent\">\n    </ng-container>\n  </div>\n</div>\n",
                    styles: [".flex-container{display:flex;align-items:stretch;background-color:#f1f1f1}ul{list-style-type:none;margin:auto;padding:0;overflow-x:hidden;white-space:nowrap;flex-grow:10;background-color:#fff}li{display:inline-block;padding:10px;cursor:pointer}.tabs{border:1px solid #e0e0e0;margin:3px;background-color:#fff}.tab-header-item{padding:15px;float:right}.tab-header-item-active{border-bottom:3px solid #00f;cursor:auto}.tab-content{padding:10px}li:hover:not(.tab-header-item-active){background-color:#dee2e6;border-bottom:3px solid #dee2e6}.border-top{border-top:1px solid #e0e0e0}.border-bottom{border-bottom:1px solid #e0e0e0}.vertical-item{border:1px solid #e0e0e0;margin:3px}i{margin-left:5px}.vertical-item-header{padding:10px;cursor:pointer}.vertical-item-header:hover{background-color:#dee2e6}.vertical-item-body{padding:10px}.paddle{display:flex;align-items:center;justify-content:center}"]
                }] }
    ];
    TaminTabsComponent.propDecorators = {
        tabs: [{ type: ContentChildren, args: [TaminTabItemComponent,] }],
        tabPosition: [{ type: Input }],
        tabHeader: [{ type: ViewChild, args: ['tabHeader',] }],
        onResize: [{ type: HostListener, args: ['window:resize',] }]
    };
    return TaminTabsComponent;
}());
export { TaminTabsComponent };
if (false) {
    /** @type {?} */
    TaminTabsComponent.prototype.tabs;
    /** @type {?} */
    TaminTabsComponent.prototype.tabItems;
    /** @type {?} */
    TaminTabsComponent.prototype.activeTab;
    /** @type {?} */
    TaminTabsComponent.prototype.layout;
    /** @type {?} */
    TaminTabsComponent.prototype.tabPosition;
    /** @type {?} */
    TaminTabsComponent.prototype.tabHeader;
    /** @type {?} */
    TaminTabsComponent.prototype.scroll;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90YW1pbi1mcmFtZXdvcmsvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90YW1pbi10YWIvdGFicy90YWJzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUdMLFNBQVMsRUFDVCxlQUFlLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFDekMsS0FBSyxFQUVMLFNBQVMsRUFDVCxTQUFTLEVBQ1YsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sZ0NBQWdDLENBQUM7QUFFckUsT0FBTyxFQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFckQ7SUFBQTtRQVVFLFdBQU0sR0FBOEIsWUFBWSxDQUFDO1FBQ3hDLGdCQUFXLEdBQXFCLEtBQUssQ0FBQztJQW9FakQsQ0FBQzs7OztJQWhFQyxxQ0FBUTs7O0lBQVI7SUFDQSxDQUFDOzs7O0lBRUQsK0NBQWtCOzs7SUFBbEI7UUFBQSxpQkFLQztRQUpDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPO2FBQzlCLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUM7YUFDbkIsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNkLElBQUksQ0FBQyxHQUFHOzs7UUFBQyxjQUFNLE9BQUEsS0FBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsRUFBbkIsQ0FBbUIsRUFBQyxDQUFDLENBQUM7SUFDMUMsQ0FBQzs7OztJQUVELGtEQUFxQjs7O0lBQXJCO1FBQUEsaUJBTUM7UUFMQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNuQixPQUFPLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSTs7O1lBQUM7Z0JBQ3JCLEtBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7WUFDbkMsQ0FBQyxFQUFDLENBQUM7U0FDSjtJQUNILENBQUM7Ozs7O0lBRUQsc0NBQVM7Ozs7SUFBVCxVQUFVLE9BQThCO1FBQ3RDLElBQUksSUFBSSxDQUFDLFNBQVMsS0FBSyxPQUFPLEVBQUU7WUFDOUIsT0FBTztTQUNSO1FBRUQsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2xCLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztTQUNqQztRQUVELElBQUksQ0FBQyxTQUFTLEdBQUcsT0FBTyxDQUFDO1FBRXpCLE9BQU8sQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO0lBQzFCLENBQUM7Ozs7SUFHRCwyQ0FBYzs7O0lBQWQ7UUFDRSxPQUFPLElBQUksQ0FBQyxXQUFXLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQztJQUNyRSxDQUFDOzs7O0lBR0QscUNBQVE7OztJQURSOztZQUVRLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxFQUFFLFlBQVksQ0FBQztRQUM1RSxJQUFJLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQztJQUMxQixDQUFDOzs7Ozs7O0lBRU8sc0NBQVM7Ozs7OztJQUFqQixVQUFrQixFQUFFLEVBQUUsU0FBUztRQUM3QixTQUFTLEdBQUcsQ0FBQyxTQUFTLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDOztZQUNoRSxNQUFNLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUM7UUFFNUIsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNYLEVBQUUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDbEIsTUFBTSxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDekIsRUFBRSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNuQjtRQUNELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Ozs7O0lBRUQscUNBQVE7Ozs7SUFBUixVQUFTLFNBQTJCO1FBQ2xDLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLFVBQVUsSUFBSSxTQUFTLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO0lBQy9FLENBQUM7Ozs7SUFFRCw0Q0FBZTs7O0lBQWY7UUFBQSxpQkFJQztRQUhDLFVBQVU7OztRQUFDO1lBQ1QsS0FBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2xCLENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Z0JBOUVGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsWUFBWTtvQkFDdEIsa21DQUFvQzs7aUJBRXJDOzs7dUJBRUUsZUFBZSxTQUFDLHFCQUFxQjs4QkFLckMsS0FBSzs0QkFDTCxTQUFTLFNBQUMsV0FBVzsyQkF3Q3JCLFlBQVksU0FBQyxlQUFlOztJQTJCL0IseUJBQUM7Q0FBQSxBQS9FRCxJQStFQztTQTFFWSxrQkFBa0I7OztJQUM3QixrQ0FDdUM7O0lBQ3ZDLHNDQUE4Qzs7SUFDOUMsdUNBQWlDOztJQUNqQyxvQ0FBaUQ7O0lBQ2pELHlDQUErQzs7SUFDL0MsdUNBQThDOztJQUM5QyxvQ0FBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBZnRlckNvbnRlbnRDaGVja2VkLFxuICBBZnRlckNvbnRlbnRJbml0LCBBZnRlclZpZXdJbml0LFxuICBDb21wb25lbnQsXG4gIENvbnRlbnRDaGlsZHJlbiwgRWxlbWVudFJlZiwgSG9zdExpc3RlbmVyLFxuICBJbnB1dCxcbiAgT25Jbml0LFxuICBRdWVyeUxpc3QsXG4gIFZpZXdDaGlsZFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VGFtaW5UYWJJdGVtQ29tcG9uZW50fSBmcm9tICcuLi90YWItaXRlbS90YWItaXRlbS5jb21wb25lbnQnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7ZGVsYXksIG1hcCwgc3RhcnRXaXRofSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhbWluLXRhYnMnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGFicy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3RhYnMuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBUYW1pblRhYnNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyQ29udGVudEluaXQsIEFmdGVyQ29udGVudENoZWNrZWQsIEFmdGVyVmlld0luaXQge1xuICBAQ29udGVudENoaWxkcmVuKFRhbWluVGFiSXRlbUNvbXBvbmVudClcbiAgdGFiczogUXVlcnlMaXN0PFRhbWluVGFiSXRlbUNvbXBvbmVudD47XG4gIHRhYkl0ZW1zOiBPYnNlcnZhYmxlPFRhbWluVGFiSXRlbUNvbXBvbmVudFtdPjtcbiAgYWN0aXZlVGFiOiBUYW1pblRhYkl0ZW1Db21wb25lbnQ7XG4gIGxheW91dDogJ3ZlcnRpY2FsJyB8ICdob3Jpem9udGFsJyA9ICdob3Jpem9udGFsJztcbiAgQElucHV0KCkgdGFiUG9zaXRpb246ICd0b3AnIHwgJ2JvdHRvbScgPSAndG9wJztcbiAgQFZpZXdDaGlsZCgndGFiSGVhZGVyJykgdGFiSGVhZGVyOiBFbGVtZW50UmVmO1xuICBzY3JvbGw6IGJvb2xlYW47XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gIH1cblxuICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZCB7XG4gICAgdGhpcy50YWJJdGVtcyA9IHRoaXMudGFicy5jaGFuZ2VzXG4gICAgICAucGlwZShzdGFydFdpdGgoJycpKVxuICAgICAgLnBpcGUoZGVsYXkoMCkpXG4gICAgICAucGlwZShtYXAoKCkgPT4gdGhpcy50YWJzLnRvQXJyYXkoKSkpO1xuICB9XG5cbiAgbmdBZnRlckNvbnRlbnRDaGVja2VkKCkge1xuICAgIGlmICghdGhpcy5hY3RpdmVUYWIpIHtcbiAgICAgIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oKCkgPT4ge1xuICAgICAgICB0aGlzLmFjdGl2ZVRhYiA9IHRoaXMudGFicy5maXJzdDtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHNlbGVjdFRhYih0YWJJdGVtOiBUYW1pblRhYkl0ZW1Db21wb25lbnQpIHtcbiAgICBpZiAodGhpcy5hY3RpdmVUYWIgPT09IHRhYkl0ZW0pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5hY3RpdmVUYWIpIHtcbiAgICAgIHRoaXMuYWN0aXZlVGFiLmlzQWN0aXZlID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdGhpcy5hY3RpdmVUYWIgPSB0YWJJdGVtO1xuXG4gICAgdGFiSXRlbS5pc0FjdGl2ZSA9IHRydWU7XG4gIH1cblxuXG4gIGdldEJvcmRlckNsYXNzKCkge1xuICAgIHJldHVybiB0aGlzLnRhYlBvc2l0aW9uID09PSAndG9wJyA/ICdib3JkZXItYm90dG9tJyA6ICdib3JkZXItdG9wJztcbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ3dpbmRvdzpyZXNpemUnKVxuICBvblJlc2l6ZSgpIHtcbiAgICBjb25zdCBoYXNTY3JvbGwgPSB0aGlzLmhhc1Njcm9sbCh0aGlzLnRhYkhlYWRlci5uYXRpdmVFbGVtZW50LCAnaG9yaXpvbnRhbCcpO1xuICAgIHRoaXMuc2Nyb2xsID0gaGFzU2Nyb2xsO1xuICB9XG5cbiAgcHJpdmF0ZSBoYXNTY3JvbGwoZWwsIGRpcmVjdGlvbikge1xuICAgIGRpcmVjdGlvbiA9IChkaXJlY3Rpb24gPT09ICd2ZXJ0aWNhbCcpID8gJ3Njcm9sbFRvcCcgOiAnc2Nyb2xsTGVmdCc7XG4gICAgbGV0IHJlc3VsdCA9ICEhZWxbZGlyZWN0aW9uXTtcblxuICAgIGlmICghcmVzdWx0KSB7XG4gICAgICBlbFtkaXJlY3Rpb25dID0gMTtcbiAgICAgIHJlc3VsdCA9ICEhZWxbZGlyZWN0aW9uXTtcbiAgICAgIGVsW2RpcmVjdGlvbl0gPSAwO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgc2Nyb2xsVG8oZGlyZWN0aW9uOiAnbGVmdCcgfCAncmlnaHQnKSB7XG4gICAgdGhpcy50YWJIZWFkZXIubmF0aXZlRWxlbWVudC5zY3JvbGxMZWZ0ICs9IGRpcmVjdGlvbiA9PT0gJ2xlZnQnID8gLTEwMCA6IDEwMDtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMub25SZXNpemUoKTtcbiAgICB9KTtcbiAgfVxufVxuIl19