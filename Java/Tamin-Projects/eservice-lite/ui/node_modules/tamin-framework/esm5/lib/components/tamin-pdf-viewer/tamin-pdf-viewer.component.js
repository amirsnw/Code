/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { timeout } from 'rxjs/operators';
import { HttpClient } from '@angular/common/http';
import { TaminModalComponent } from '../tamin-modal/tamin-modal.component';
var TaminPdfViewerComponent = /** @class */ (function () {
    function TaminPdfViewerComponent(http) {
        this.http = http;
        this.errorMessage = 'خطا در دریافت اطلاعات';
        this.beforeLoad = new EventEmitter();
        this.afterLoad = new EventEmitter();
    }
    /**
     * @param {?} url
     * @return {?}
     */
    TaminPdfViewerComponent.prototype.getBlob = /**
     * @param {?} url
     * @return {?}
     */
    function (url) {
        var _this = this;
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) {
            _this.http.get(url, { responseType: 'blob' })
                .pipe(timeout(6000))
                .toPromise()
                .then((/**
             * @param {?} response
             * @return {?}
             */
            function (response) { return resolve(response); }))
                .catch((/**
             * @param {?} error
             * @return {?}
             */
            function (error) { return reject(error); }));
        }));
    };
    /**
     * @param {?} url
     * @return {?}
     */
    TaminPdfViewerComponent.prototype.open = /**
     * @param {?} url
     * @return {?}
     */
    function (url) {
        var _this = this;
        this.beforeLoad.emit();
        this.getBlob(url)
            .then((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            _this.iframe.nativeElement.src = URL.createObjectURL(value);
            _this.afterLoad.emit();
            _this.theModal.show();
        }))
            .catch((/**
         * @param {?} reason
         * @return {?}
         */
        function (reason) {
            _this.afterLoad.emit();
        }));
    };
    /**
     * @return {?}
     */
    TaminPdfViewerComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.theModal.hide();
    };
    /**
     * @return {?}
     */
    TaminPdfViewerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    TaminPdfViewerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tamin-pdf-viewer',
                    template: "<tamin-modal #theModal [title]=\"title\">\n  <iframe #iframe style=\"border:none; width:100%; height:80vh\"></iframe>\n  <ng-content></ng-content>\n</tamin-modal>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    TaminPdfViewerComponent.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    TaminPdfViewerComponent.propDecorators = {
        theModal: [{ type: ViewChild, args: ['theModal',] }],
        iframe: [{ type: ViewChild, args: ['iframe',] }],
        title: [{ type: Input }],
        errorMessage: [{ type: Input }],
        beforeLoad: [{ type: Output }],
        afterLoad: [{ type: Output }]
    };
    return TaminPdfViewerComponent;
}());
export { TaminPdfViewerComponent };
if (false) {
    /** @type {?} */
    TaminPdfViewerComponent.prototype.theModal;
    /** @type {?} */
    TaminPdfViewerComponent.prototype.iframe;
    /** @type {?} */
    TaminPdfViewerComponent.prototype.title;
    /** @type {?} */
    TaminPdfViewerComponent.prototype.errorMessage;
    /** @type {?} */
    TaminPdfViewerComponent.prototype.beforeLoad;
    /** @type {?} */
    TaminPdfViewerComponent.prototype.afterLoad;
    /**
     * @type {?}
     * @private
     */
    TaminPdfViewerComponent.prototype._overlay;
    /**
     * @type {?}
     * @private
     */
    TaminPdfViewerComponent.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tcGRmLXZpZXdlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90YW1pbi1mcmFtZXdvcmsvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90YW1pbi1wZGYtdmlld2VyL3RhbWluLXBkZi12aWV3ZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDcEcsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3ZDLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUNoRCxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxzQ0FBc0MsQ0FBQztBQUV6RTtJQWdCRSxpQ0FBb0IsSUFBZ0I7UUFBaEIsU0FBSSxHQUFKLElBQUksQ0FBWTtRQU4zQixpQkFBWSxHQUFHLHVCQUF1QixDQUFDO1FBQ3RDLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ3JDLGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO0lBSzlDLENBQUM7Ozs7O0lBRUQseUNBQU87Ozs7SUFBUCxVQUFRLEdBQVc7UUFBbkIsaUJBUUM7UUFQQyxPQUFPLElBQUksT0FBTzs7Ozs7UUFBTSxVQUFDLE9BQU8sRUFBRSxNQUFNO1lBQ3RDLEtBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxFQUFDLFlBQVksRUFBRSxNQUFNLEVBQUMsQ0FBQztpQkFDdkMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztpQkFDbkIsU0FBUyxFQUFFO2lCQUNYLElBQUk7Ozs7WUFBQyxVQUFDLFFBQVEsSUFBSyxPQUFBLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBakIsQ0FBaUIsRUFBQztpQkFDckMsS0FBSzs7OztZQUFDLFVBQUMsS0FBSyxJQUFLLE9BQUEsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFiLENBQWEsRUFBQyxDQUFDO1FBQ3JDLENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Ozs7SUFFRCxzQ0FBSTs7OztJQUFKLFVBQUssR0FBVztRQUFoQixpQkFXQztRQVZDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUM7YUFDZCxJQUFJOzs7O1FBQUMsVUFBQSxLQUFLO1lBQ1QsS0FBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDM0QsS0FBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUN0QixLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3ZCLENBQUMsRUFBQzthQUNELEtBQUs7Ozs7UUFBQyxVQUFBLE1BQU07WUFDWCxLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3hCLENBQUMsRUFBQyxDQUFDO0lBQ1AsQ0FBQzs7OztJQUVELHVDQUFLOzs7SUFBTDtRQUNFLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDdkIsQ0FBQzs7OztJQUVELDBDQUFROzs7SUFBUjtJQUNBLENBQUM7O2dCQS9DRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGtCQUFrQjtvQkFDNUIsZ0xBQWdEOztpQkFFakQ7Ozs7Z0JBUE8sVUFBVTs7OzJCQVVmLFNBQVMsU0FBQyxVQUFVO3lCQUNwQixTQUFTLFNBQUMsUUFBUTt3QkFDbEIsS0FBSzsrQkFDTCxLQUFLOzZCQUNMLE1BQU07NEJBQ04sTUFBTTs7SUFvQ1QsOEJBQUM7Q0FBQSxBQWhERCxJQWdEQztTQTNDWSx1QkFBdUI7OztJQUVsQywyQ0FBcUQ7O0lBQ3JELHlDQUF3Qzs7SUFDeEMsd0NBQXVCOztJQUN2QiwrQ0FBZ0Q7O0lBQ2hELDZDQUErQzs7SUFDL0MsNENBQThDOzs7OztJQUU5QywyQ0FBc0I7Ozs7O0lBRVYsdUNBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0LCBWaWV3Q2hpbGR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHt0aW1lb3V0fSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQge0h0dHBDbGllbnR9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7VGFtaW5Nb2RhbENvbXBvbmVudH0gZnJvbSAnLi4vdGFtaW4tbW9kYWwvdGFtaW4tbW9kYWwuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGFtaW4tcGRmLXZpZXdlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi90YW1pbi1wZGYtdmlld2VyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdGFtaW4tcGRmLXZpZXdlci5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIFRhbWluUGRmVmlld2VyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBAVmlld0NoaWxkKCd0aGVNb2RhbCcpIHRoZU1vZGFsOiBUYW1pbk1vZGFsQ29tcG9uZW50O1xuICBAVmlld0NoaWxkKCdpZnJhbWUnKSBpZnJhbWU6IEVsZW1lbnRSZWY7XG4gIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGVycm9yTWVzc2FnZSA9ICfYrti32Kcg2K/YsSDYr9ix24zYp9mB2Kog2KfYt9mE2KfYudin2KonO1xuICBAT3V0cHV0KCkgYmVmb3JlTG9hZCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBAT3V0cHV0KCkgYWZ0ZXJMb2FkID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgcHJpdmF0ZSBfb3ZlcmxheTogYW55O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaHR0cDogSHR0cENsaWVudCkge1xuICB9XG5cbiAgZ2V0QmxvYih1cmw6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlPGFueT4oKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgdGhpcy5odHRwLmdldCh1cmwsIHtyZXNwb25zZVR5cGU6ICdibG9iJ30pXG4gICAgICAgIC5waXBlKHRpbWVvdXQoNjAwMCkpXG4gICAgICAgIC50b1Byb21pc2UoKVxuICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHJlc29sdmUocmVzcG9uc2UpKVxuICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiByZWplY3QoZXJyb3IpKTtcbiAgICB9KTtcbiAgfVxuXG4gIG9wZW4odXJsOiBzdHJpbmcpIHtcbiAgICB0aGlzLmJlZm9yZUxvYWQuZW1pdCgpO1xuICAgIHRoaXMuZ2V0QmxvYih1cmwpXG4gICAgICAudGhlbih2YWx1ZSA9PiB7XG4gICAgICAgIHRoaXMuaWZyYW1lLm5hdGl2ZUVsZW1lbnQuc3JjID0gVVJMLmNyZWF0ZU9iamVjdFVSTCh2YWx1ZSk7XG4gICAgICAgIHRoaXMuYWZ0ZXJMb2FkLmVtaXQoKTtcbiAgICAgICAgdGhpcy50aGVNb2RhbC5zaG93KCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKHJlYXNvbiA9PiB7XG4gICAgICAgIHRoaXMuYWZ0ZXJMb2FkLmVtaXQoKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy50aGVNb2RhbC5oaWRlKCk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxufVxuIl19