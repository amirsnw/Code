/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChildren, EventEmitter, Output, QueryList } from '@angular/core';
import { TaminWizardItemComponent } from './tamin-wizard-item/tamin-wizard-item.component';
var TaminWizardComponent = /** @class */ (function () {
    function TaminWizardComponent() {
        this.stepChanging = new EventEmitter();
        this.stepChanged = new EventEmitter();
    }
    Object.defineProperty(TaminWizardComponent.prototype, "currentItem", {
        get: /**
         * @return {?}
         */
        function () {
            return this.items.toArray()[this._current];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TaminWizardComponent.prototype, "nextItem", {
        get: /**
         * @return {?}
         */
        function () {
            if (this._current < this.items.length) {
                return this.items.toArray()[this._current + 1];
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TaminWizardComponent.prototype, "prevItem", {
        get: /**
         * @return {?}
         */
        function () {
            if (this._current > 0) {
                return this.items.toArray()[this._current - 1];
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    TaminWizardComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    TaminWizardComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        if (this.items.length > 0) {
            this._current = 0;
            this.refresh();
        }
    };
    /**
     * @return {?}
     */
    TaminWizardComponent.prototype.onNextStep = /**
     * @return {?}
     */
    function () {
        if (this.items.length > 0 && this.items.length > this._current) {
            if (this.stepChanging) {
                this.stepChanging.emit(new WizardNavigationData(this._current, 'forward'));
            }
            else {
                this.setNext();
                this.refresh();
                this.stepChanged.emit(new WizardNavigationData(this._current, 'forward'));
            }
        }
    };
    /**
     * @return {?}
     */
    TaminWizardComponent.prototype.onPrevStep = /**
     * @return {?}
     */
    function () {
        if (this.items.length > 0 && this._current > 0) {
            if (this.stepChanging) {
                this.stepChanging.emit(new WizardNavigationData(this._current, 'backward'));
            }
            else {
                this.setPrev();
                this.refresh();
                this.stepChanged.emit(new WizardNavigationData(this._current, 'backward'));
            }
        }
    };
    /**
     * @return {?}
     */
    TaminWizardComponent.prototype.setNext = /**
     * @return {?}
     */
    function () {
        if (this.items.length > 0 && this.items.length > this._current) {
            ++this._current;
        }
    };
    /**
     * @return {?}
     */
    TaminWizardComponent.prototype.setPrev = /**
     * @return {?}
     */
    function () {
        if (this.items.length > 0 && this._current > 0) {
            --this._current;
        }
    };
    /**
     * @param {?} step
     * @return {?}
     */
    TaminWizardComponent.prototype.setStep = /**
     * @param {?} step
     * @return {?}
     */
    function (step) {
        if (this.items.length > 0 && step > 0 && step < this.items.length) {
            this._current = step;
        }
    };
    /**
     * @return {?}
     */
    TaminWizardComponent.prototype.refresh = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.items.forEach((/**
         * @param {?} item
         * @param {?} index
         * @return {?}
         */
        function (item, index) {
            if (item.visible) {
                item.hide();
            }
            if (_this._current === index) {
                item.show();
            }
        }));
    };
    TaminWizardComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tamin-wizard',
                    template: "<div class=\"wizard\">\n  <div class=\"wizard-header\">{{ currentItem?.stepTitle}}</div>\n  <div class=\"wizard-content\">\n    <ng-content></ng-content>\n  </div>\n  <div class=\"wizard-footer\">\n    <button style=\"float: right; margin-bottom: 5px\" class=\"button button-default normal\" *ngIf=\"nextItem\" (click)=\"onNextStep()\">{{nextItem?.buttonTitle}}</button>\n    <button style=\"float: left; margin-bottom: 5px\" class=\"button button-default normal\" *ngIf=\"prevItem\" (click)=\"onPrevStep()\">\n      {{prevItem?.buttonTitle}}\n    </button>\n  </div>\n</div>\n\n",
                    styles: [".wizard{border:1px solid #cacaca;margin:5px;overflow:hidden}.wizard-content{padding:5px}.wizard-header{padding:5px;border-bottom:1px solid #cacaca;vertical-align:middle;text-align:center}.wizard-footer{padding:5px;border-top:1px solid #cacaca}"]
                }] }
    ];
    /** @nocollapse */
    TaminWizardComponent.ctorParameters = function () { return []; };
    TaminWizardComponent.propDecorators = {
        items: [{ type: ContentChildren, args: [TaminWizardItemComponent,] }],
        stepChanging: [{ type: Output }],
        stepChanged: [{ type: Output }]
    };
    return TaminWizardComponent;
}());
export { TaminWizardComponent };
if (false) {
    /** @type {?} */
    TaminWizardComponent.prototype.items;
    /**
     * @type {?}
     * @private
     */
    TaminWizardComponent.prototype._current;
    /** @type {?} */
    TaminWizardComponent.prototype.stepChanging;
    /** @type {?} */
    TaminWizardComponent.prototype.stepChanged;
}
var WizardNavigationData = /** @class */ (function () {
    function WizardNavigationData(currentStep, direction) {
        this.currentStep = currentStep;
        this.direction = direction;
    }
    return WizardNavigationData;
}());
export { WizardNavigationData };
if (false) {
    /** @type {?} */
    WizardNavigationData.prototype.currentStep;
    /** @type {?} */
    WizardNavigationData.prototype.direction;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4td2l6YXJkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RhbWluLWZyYW1ld29yay8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RhbWluLXdpemFyZC90YW1pbi13aXphcmQvdGFtaW4td2l6YXJkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFtQixTQUFTLEVBQUUsZUFBZSxFQUFFLFlBQVksRUFBVSxNQUFNLEVBQUUsU0FBUyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3BILE9BQU8sRUFBQyx3QkFBd0IsRUFBQyxNQUFNLGlEQUFpRCxDQUFDO0FBRXpGO0lBV0U7UUFIVSxpQkFBWSxHQUFHLElBQUksWUFBWSxFQUF3QixDQUFDO1FBQ3hELGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQXdCLENBQUM7SUFHakUsQ0FBQztJQUVELHNCQUFJLDZDQUFXOzs7O1FBQWY7WUFDRSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzdDLENBQUM7OztPQUFBO0lBRUQsc0JBQUksMENBQVE7Ozs7UUFBWjtZQUNFLElBQUksSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRTtnQkFDckMsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUM7YUFDaEQ7WUFDRCxPQUFPLElBQUksQ0FBQztRQUNkLENBQUM7OztPQUFBO0lBRUQsc0JBQUksMENBQVE7Ozs7UUFBWjtZQUNFLElBQUksSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLEVBQUU7Z0JBQ3JCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxDQUFDO2FBQ2hEO1lBQ0QsT0FB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RSxDQUFDO2FBQ2I7UUFDSCxDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7O2dCQTlGRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGNBQWM7b0JBQ3hCLCtrQkFBNEM7O2lCQUU3Qzs7Ozs7d0JBRUUsZUFBZSxTQUFDLHdCQUF3QjsrQkFFeEMsTUFBTTs4QkFDTixNQUFNOztJQXNGVCwyQkFBQztDQUFBLEFBL0ZELElBK0ZDO1NBMUZZLG9CQUFvQjs7O0lBQy9CLHFDQUFzRjs7Ozs7SUFDdEYsd0NBQXlCOztJQUN6Qiw0Q0FBa0U7O0lBQ2xFLDJDQUFpRTs7QUF5Rm5FO0lBQ0UsOEJBQVksV0FBbUIsRUFBRSxTQUFpQztRQUNoRSxJQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztRQUMvQixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztJQUM3QixDQUFDO0lBSUgsMkJBQUM7QUFBRCxDQUFDLEFBUkQsSUFRQzs7OztJQUZDLDJDQUFvQjs7SUFDcEIseUNBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBZnRlckNvbnRlbnRJbml0LCBDb21wb25lbnQsIENvbnRlbnRDaGlsZHJlbiwgRXZlbnRFbWl0dGVyLCBPbkluaXQsIE91dHB1dCwgUXVlcnlMaXN0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VGFtaW5XaXphcmRJdGVtQ29tcG9uZW50fSBmcm9tICcuL3RhbWluLXdpemFyZC1pdGVtL3RhbWluLXdpemFyZC1pdGVtLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhbWluLXdpemFyZCcsXG4gIHRlbXBsYXRlVXJsOiAnLi90YW1pbi13aXphcmQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90YW1pbi13aXphcmQuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBUYW1pbldpemFyZENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJDb250ZW50SW5pdCB7XG4gIEBDb250ZW50Q2hpbGRyZW4oVGFtaW5XaXphcmRJdGVtQ29tcG9uZW50KSBpdGVtczogUXVlcnlMaXN0PFRhbWluV2l6YXJkSXRlbUNvbXBvbmVudD47XG4gIHByaXZhdGUgX2N1cnJlbnQ6IG51bWJlcjtcbiAgQE91dHB1dCgpIHN0ZXBDaGFuZ2luZyA9IG5ldyBFdmVudEVtaXR0ZXI8V2l6YXJkTmF2aWdhdGlvbkRhdGE+KCk7XG4gIEBPdXRwdXQoKSBzdGVwQ2hhbmdlZCA9IG5ldyBFdmVudEVtaXR0ZXI8V2l6YXJkTmF2aWdhdGlvbkRhdGE+KCk7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gIH1cblxuICBnZXQgY3VycmVudEl0ZW0oKTogVGFtaW5XaXphcmRJdGVtQ29tcG9uZW50IHtcbiAgICByZXR1cm4gdGhpcy5pdGVtcy50b0FycmF5KClbdGhpcy5fY3VycmVudF07XG4gIH1cblxuICBnZXQgbmV4dEl0ZW0oKTogVGFtaW5XaXphcmRJdGVtQ29tcG9uZW50IHtcbiAgICBpZiAodGhpcy5fY3VycmVudCA8IHRoaXMuaXRlbXMubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gdGhpcy5pdGVtcy50b0FycmF5KClbdGhpcy5fY3VycmVudCArIDFdO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGdldCBwcmV2SXRlbSgpOiBUYW1pbldpemFyZEl0ZW1Db21wb25lbnQge1xuICAgIGlmICh0aGlzLl9jdXJyZW50ID4gMCkge1xuICAgICAgcmV0dXJuIHRoaXMuaXRlbXMudG9BcnJheSgpW3RoaXMuX2N1cnJlbnQgLSAxXTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5pdGVtcy5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLl9jdXJyZW50ID0gMDtcbiAgICAgIHRoaXMucmVmcmVzaCgpO1xuICAgIH1cbiAgfVxuXG5cbiAgb25OZXh0U3RlcCgpIHtcbiAgICBpZiAodGhpcy5pdGVtcy5sZW5ndGggPiAwICYmIHRoaXMuaXRlbXMubGVuZ3RoID4gdGhpcy5fY3VycmVudCkge1xuICAgICAgaWYgKHRoaXMuc3RlcENoYW5naW5nKSB7XG4gICAgICAgIHRoaXMuc3RlcENoYW5naW5nLmVtaXQobmV3IFdpemFyZE5hdmlnYXRpb25EYXRhKHRoaXMuX2N1cnJlbnQsICdmb3J3YXJkJykpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zZXROZXh0KCk7XG4gICAgICAgIHRoaXMucmVmcmVzaCgpO1xuICAgICAgICB0aGlzLnN0ZXBDaGFuZ2VkLmVtaXQobmV3IFdpemFyZE5hdmlnYXRpb25EYXRhKHRoaXMuX2N1cnJlbnQsICdmb3J3YXJkJykpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIG9uUHJldlN0ZXAoKSB7XG4gICAgaWYgKHRoaXMuaXRlbXMubGVuZ3RoID4gMCAmJiB0aGlzLl9jdXJyZW50ID4gMCkge1xuICAgICAgaWYgKHRoaXMuc3RlcENoYW5naW5nKSB7XG4gICAgICAgIHRoaXMuc3RlcENoYW5naW5nLmVtaXQobmV3IFdpemFyZE5hdmlnYXRpb25EYXRhKHRoaXMuX2N1cnJlbnQsICdiYWNrd2FyZCcpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuc2V0UHJldigpO1xuICAgICAgICB0aGlzLnJlZnJlc2goKTtcbiAgICAgICAgdGhpcy5zdGVwQ2hhbmdlZC5lbWl0KG5ldyBXaXphcmROYXZpZ2F0aW9uRGF0YSh0aGlzLl9jdXJyZW50LCAnYmFja3dhcmQnKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgc2V0TmV4dCgpIHtcbiAgICBpZiAodGhpcy5pdGVtcy5sZW5ndGggPiAwICYmIHRoaXMuaXRlbXMubGVuZ3RoID4gdGhpcy5fY3VycmVudCkge1xuICAgICAgKyt0aGlzLl9jdXJyZW50O1xuICAgIH1cbiAgfVxuXG4gIHNldFByZXYoKSB7XG4gICAgaWYgKHRoaXMuaXRlbXMubGVuZ3RoID4gMCAmJiB0aGlzLl9jdXJyZW50ID4gMCkge1xuICAgICAgLS10aGlzLl9jdXJyZW50O1xuICAgIH1cbiAgfVxuXG4gIHNldFN0ZXAoc3RlcDogbnVtYmVyKSB7XG4gICAgaWYgKHRoaXMuaXRlbXMubGVuZ3RoID4gMCAmJiBzdGVwID4gMCAmJiBzdGVwIDwgdGhpcy5pdGVtcy5sZW5ndGgpIHtcbiAgICAgIHRoaXMuX2N1cnJlbnQgPSBzdGVwO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyByZWZyZXNoKCkge1xuICAgIHRoaXMuaXRlbXMuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICAgIGlmIChpdGVtLnZpc2libGUpIHtcbiAgICAgICAgaXRlbS5oaWRlKCk7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5fY3VycmVudCA9PT0gaW5kZXgpIHtcbiAgICAgICAgaXRlbS5zaG93KCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuXG5leHBvcnQgY2xhc3MgV2l6YXJkTmF2aWdhdGlvbkRhdGEge1xuICBjb25zdHJ1Y3RvcihjdXJyZW50U3RlcDogbnVtYmVyLCBkaXJlY3Rpb246ICdmb3J3YXJkJyB8ICdiYWNrd2FyZCcpIHtcbiAgICB0aGlzLmN1cnJlbnRTdGVwID0gY3VycmVudFN0ZXA7XG4gICAgdGhpcy5kaXJlY3Rpb24gPSBkaXJlY3Rpb247XG4gIH1cblxuICBjdXJyZW50U3RlcDogbnVtYmVyO1xuICBkaXJlY3Rpb246ICdmb3J3YXJkJyB8ICdiYWNrd2FyZCc7XG59XG4iXX0=