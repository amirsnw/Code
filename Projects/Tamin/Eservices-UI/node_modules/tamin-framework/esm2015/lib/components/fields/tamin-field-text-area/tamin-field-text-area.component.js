/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, forwardRef, Input } from '@angular/core';
import { FieldBaseComponent } from '../../../base/field-base.component';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
export class TaminFieldTextAreaComponent extends FieldBaseComponent {
    constructor() {
        super(...arguments);
        this.rows = 4;
        this.cols = 50;
    }
    /**
     * @return {?}
     */
    initializeComponent() {
    }
}
TaminFieldTextAreaComponent.decorators = [
    { type: Component, args: [{
                selector: 'tamin-field-text-area',
                template: "<textarea\n  style=\"resize: none;height: 7em\"\n  class=\"tamin-form-control-input\"\n  [disabled]=\"control.disabled\"\n  [class.tamin-form-control-valid]=\"control.touched && control.valid\"\n  [class.tamin-form-control-invalid]=\"control.touched && !control.valid\"\n  [attr.rows]=\"rows\"\n  [attr.cols]=\"cols\"\n  #inputElement></textarea>\n<span>{{hint}}</span>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => TaminFieldTextAreaComponent)),
                        multi: true
                    }
                ],
                styles: [".tamin-form-control-input{height:inherit!important}"]
            }] }
];
TaminFieldTextAreaComponent.propDecorators = {
    rows: [{ type: Input }],
    cols: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    TaminFieldTextAreaComponent.prototype.rows;
    /** @type {?} */
    TaminFieldTextAreaComponent.prototype.cols;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tZmllbGQtdGV4dC1hcmVhLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RhbWluLWZyYW1ld29yay8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2ZpZWxkcy90YW1pbi1maWVsZC10ZXh0LWFyZWEvdGFtaW4tZmllbGQtdGV4dC1hcmVhLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzNELE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBQ3RFLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBZWpELE1BQU0sT0FBTywyQkFBNEIsU0FBUSxrQkFBa0I7SUFibkU7O1FBZVcsU0FBSSxHQUFHLENBQUMsQ0FBQztRQUNULFNBQUksR0FBRyxFQUFFLENBQUM7SUFHckIsQ0FBQzs7OztJQUZDLG1CQUFtQjtJQUNuQixDQUFDOzs7WUFsQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx1QkFBdUI7Z0JBQ2pDLCtYQUFxRDtnQkFFckQsU0FBUyxFQUFFO29CQUNUO3dCQUNFLE9BQU8sRUFBRSxpQkFBaUI7d0JBQzFCLFdBQVcsRUFBRSxVQUFVOzs7d0JBQUMsR0FBRyxFQUFFLENBQUMsMkJBQTJCLEVBQUM7d0JBQzFELEtBQUssRUFBRSxJQUFJO3FCQUNaO2lCQUNGOzthQUVGOzs7bUJBR0UsS0FBSzttQkFDTCxLQUFLOzs7O0lBRE4sMkNBQWtCOztJQUNsQiwyQ0FBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgZm9yd2FyZFJlZiwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtGaWVsZEJhc2VDb21wb25lbnR9IGZyb20gJy4uLy4uLy4uL2Jhc2UvZmllbGQtYmFzZS5jb21wb25lbnQnO1xuaW1wb3J0IHtOR19WQUxVRV9BQ0NFU1NPUn0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0YW1pbi1maWVsZC10ZXh0LWFyZWEnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGFtaW4tZmllbGQtdGV4dC1hcmVhLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdGFtaW4tZmllbGQtdGV4dC1hcmVhLmNvbXBvbmVudC5zY3NzJ10sXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVGFtaW5GaWVsZFRleHRBcmVhQ29tcG9uZW50KSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdXG5cbn0pXG5leHBvcnQgY2xhc3MgVGFtaW5GaWVsZFRleHRBcmVhQ29tcG9uZW50IGV4dGVuZHMgRmllbGRCYXNlQ29tcG9uZW50IHtcblxuICBASW5wdXQoKSByb3dzID0gNDtcbiAgQElucHV0KCkgY29scyA9IDUwO1xuICBpbml0aWFsaXplQ29tcG9uZW50KCkge1xuICB9XG59XG4iXX0=