import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { TaminLazyLoadService } from '../../services/tamin-lazy-load/tamin-lazy-load.service';
import { OverlayService } from '../../services/overlay/overlay.service';
export declare class TaminImageGalleryComponent implements OnInit, AfterViewInit, OnDestroy {
    private taminLazyLoadService;
    private changeDetectorRef;
    private overlayService;
    imageContainer: ElementRef;
    imageInput: ElementRef;
    host: ElementRef;
    images: Array<ImageModel>;
    private _gallery;
    insertable: boolean;
    maxImageSize: number;
    afterInsert: EventEmitter<ImageModel>;
    afterRemove: EventEmitter<ImageModel>;
    beforeInsert: EventEmitter<{}>;
    beforeRemove: EventEmitter<ImageModel>;
    private _subscription;
    private _overlay;
    private defaultTitle;
    private defaultTag;
    constructor(taminLazyLoadService: TaminLazyLoadService, changeDetectorRef: ChangeDetectorRef, overlayService: OverlayService);
    ngOnInit(): void;
    selectImage(title: any, tag?: any): void;
    ngAfterViewInit(): void;
    addImage(model: ImageModel): void;
    removeImage(id: string): void;
    startWaiting(): void;
    stopWaiting(): void;
    ngOnDestroy(): void;
    private showQuestionBox;
    private showAlert;
    getBase64FromImageUrl(url: any): void;
    dataURLtoBlob(dataURL: any): Blob;
    checkPermission(): Promise<boolean>;
}
export declare class ImageModel {
    source: any;
    id: string;
    tag: any;
    title: string;
    removeable: boolean;
}
