{
  "_args": [
    [
      {
        "raw": "viewerjs",
        "scope": null,
        "escapedName": "viewerjs",
        "name": "viewerjs",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Abbas Amiri\\Desktop\\New folder (3)"
    ]
  ],
  "_from": "viewerjs",
  "_hasShrinkwrap": false,
  "_id": "viewerjs@1.3.2",
  "_location": "/viewerjs",
  "_nodeVersion": "10.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/viewerjs_1.3.2_1548328962056_0.8692838821415008"
  },
  "_npmUser": {
    "name": "chenfengyuan",
    "email": "chenfengyuan@outlook.com"
  },
  "_npmVersion": "6.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "viewerjs",
    "scope": null,
    "escapedName": "viewerjs",
    "name": "viewerjs",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/viewerjs/-/viewerjs-1.3.2.tgz",
  "_shasum": "67781aff6d019a0960c4c2bf74d6756b548aebf8",
  "_shrinkwrap": null,
  "_spec": "viewerjs",
  "_where": "C:\\Users\\Abbas Amiri\\Desktop\\New folder (3)",
  "author": {
    "name": "Chen Fengyuan",
    "url": "https://chenfengyuan.com"
  },
  "browserslist": [
    "last 2 versions",
    "> 1%",
    "not ie <= 8"
  ],
  "bugs": {
    "url": "https://github.com/fengyuanchen/viewerjs/issues"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "dependencies": {},
  "description": "JavaScript image viewer.",
  "devDependencies": {
    "@babel/core": "^7.2.2",
    "@babel/preset-env": "^7.3.1",
    "@commitlint/cli": "^7.3.2",
    "@commitlint/config-conventional": "^7.3.1",
    "babel-plugin-istanbul": "^5.1.0",
    "chai": "^4.2.0",
    "change-case": "^3.1.0",
    "codecov": "^3.1.0",
    "cpy-cli": "^2.0.0",
    "create-banner": "^1.0.0",
    "cross-env": "^5.2.0",
    "cssnano": "^4.1.8",
    "del-cli": "^1.1.0",
    "eslint": "^5.12.1",
    "eslint-config-airbnb-base": "^13.1.0",
    "eslint-plugin-import": "^2.15.0",
    "husky": "^1.3.1",
    "karma": "^4.0.0",
    "karma-chai": "^0.1.0",
    "karma-chrome-launcher": "^2.2.0",
    "karma-coverage-istanbul-reporter": "^2.0.4",
    "karma-mocha": "^1.3.0",
    "karma-mocha-reporter": "^2.2.5",
    "karma-rollup-preprocessor": "^6.1.2",
    "lint-staged": "^8.1.0",
    "mocha": "^5.2.0",
    "npm-run-all": "^4.1.5",
    "postcss-cli": "^6.1.1",
    "postcss-header": "^1.0.0",
    "postcss-import": "^12.0.1",
    "postcss-preset-env": "^6.5.0",
    "postcss-url": "^8.0.0",
    "puppeteer": "^1.11.0",
    "rollup": "^0.67.4",
    "rollup-plugin-babel": "^4.3.2",
    "rollup-watch": "^4.3.1",
    "stylelint": "^9.10.1",
    "stylelint-config-standard": "^18.2.0",
    "stylelint-order": "^2.0.0",
    "uglify-js": "^3.4.9"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-P9Ac9H+GJ1jE9B5x8foRYm/xZvpWFR6L4GC9mr6181P9amOzQPDkplQrFj8l7mdnv8EyH2dO8XJJfoylir316A==",
    "shasum": "67781aff6d019a0960c4c2bf74d6756b548aebf8",
    "tarball": "https://registry.npmjs.org/viewerjs/-/viewerjs-1.3.2.tgz",
    "fileCount": 28,
    "unpackedSize": 478433,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcSaADCRA9TVsSAnZWagAAlXMQAIlvj9A3Yu04hFoxNcE6\nB+Kt0xcuY22ZPRUGLXeJvkc+J2q1W2+nMixfGqq/7+c82oKHGhuUswI/LsMN\nJeMZQd6SECaSCcG3q0jUMyVvuOu0RTxv8bdhDFlSr0aN8ChRBMNvPqdnttGm\nX4q/HSiuJTH8J6RYR79gxFdTkXlODouRJpx88yHaC66N6lKF+h0KpjwHqHNY\nQ7EKfGu4ojq5rudsQGBipeotAhuHfo2avuou9h8xLRltQ2RAZNAVrrsK/t6W\nrCXj3MSw+NJv2WLHxLpLPTOY1I7FbHZ9lo/L7cG1OcjwIKZB6GVaR+Wv01wH\nU7BuZTlZ1lCyLQyo13G+1FFt6oeuAmmBT/2xUGX6w4Zrpf7cSQi51fFCqe9d\nVjlE9DdIXFM1SEe/oaXrCJAzy6MzprnRKG9qnE06tsnbpY9NkI4rA0LXOAwm\nt6sEHy+D7aQQcgAZ9dKCtK7sgACa7Bh0xyeAJqdTGq3RXN3Q5genjXxWfHRH\nSkgomH20CR8Cg+bvLpZSZt43/0STgvQ0u6PD9N+d7I/yR0a/AtDT8mJ33SNG\n5L+hO+utqOkgZ+U2WcQT2p9YmkTA1WcL/EcmBI/pMkxob5Mio/RyXCV/ezkY\nvfTCXZib/4zrV/43E52eiyr3lLRb00aWw3AC+7+832w7rDuvu1dvaGwhdRxU\nig1V\r\n=lbEg\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "src",
    "dist",
    "types"
  ],
  "gitHead": "fbb13d1ed3ee62ad06fd7432cf42a7767b167b0a",
  "homepage": "https://fengyuanchen.github.io/viewerjs",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "keywords": [
    "image",
    "viewer",
    "viewerjs",
    "viewer.js",
    "html",
    "css",
    "javascript",
    "front-end",
    "web"
  ],
  "license": "MIT",
  "lint-staged": {
    "linters": {
      "*.js": [
        "eslint --fix",
        "git add"
      ],
      "*.{css,scss,html}": [
        "stylelint --fix",
        "git add"
      ]
    },
    "ignore": [
      "{dist,docs}/**/*.js",
      "*.min.*"
    ]
  },
  "main": "dist/viewer.common.js",
  "maintainers": [
    {
      "name": "chenfengyuan",
      "email": "chenfengyuan@outlook.com"
    }
  ],
  "module": "dist/viewer.esm.js",
  "name": "viewerjs",
  "optionalDependencies": {},
  "readme": "# Viewer.js\n\n[![Build Status](https://img.shields.io/travis/fengyuanchen/viewerjs.svg)](https://travis-ci.org/fengyuanchen/viewerjs) [![Downloads](https://img.shields.io/npm/dm/viewerjs.svg)](https://www.npmjs.com/package/viewerjs) [![Version](https://img.shields.io/npm/v/viewerjs.svg)](https://www.npmjs.com/package/viewerjs) [![Donate on Patreon](https://img.shields.io/badge/donate-on%20patreon-fa7664.svg)](https://www.patreon.com/chenfengyuan)\n\n> JavaScript image viewer.\n\n- [Website](https://fengyuanchen.github.io/viewerjs)\n- [jquery-viewer](https://github.com/fengyuanchen/jquery-viewer) - A jQuery plugin wrapper for Viewer.js.\n\n## Table of contents\n\n- [Features](#features)\n- [Main](#main)\n- [Getting started](#getting-started)\n- [Keyboard support](#keyboard-support)\n- [Options](#options)\n- [Methods](#methods)\n- [Events](#events)\n- [No conflict](#no-conflict)\n- [Browser support](#browser-support)\n- [Contributing](#contributing)\n- [Versioning](#versioning)\n- [License](#license)\n\n## Features\n\n- Supports 39 [options](#options)\n- Supports 23 [methods](#methods)\n- Supports 9 [events](#events)\n- Supports modal and inline modes\n- Supports touch\n- Supports move\n- Supports zoom\n- Supports rotation\n- Supports scale (flip)\n- Supports keyboard\n- Cross-browser support\n\n## Main\n\n```text\ndist/\n├── viewer.css\n├── viewer.min.css   (compressed)\n├── viewer.js        (UMD)\n├── viewer.min.js    (UMD, compressed)\n├── viewer.common.js (CommonJS, default)\n└── viewer.esm.js    (ES Module)\n```\n\n## Getting started\n\n### Installation\n\n```shell\nnpm install viewerjs\n```\n\nIn browser:\n\n```html\n<link  href=\"/path/to/viewer.css\" rel=\"stylesheet\">\n<script src=\"/path/to/viewer.js\"></script>\n```\n\nThe [cdnjs](https://github.com/cdnjs/cdnjs) provides CDN support for Viewer.js's CSS and JavaScript. You can find the links [here](https://cdnjs.com/libraries/viewerjs).\n\n### Usage\n\n#### Syntax\n\n```js\nnew Viewer(element[, options])\n```\n\n- **element**\n  - Type: `HTMLElement`\n  - The target image or container of images for viewing.\n\n- **options** (optional)\n  - Type: `Object`\n  - The options for viewing. Check out the available [options](#options).\n\n#### Example\n\n```html\n<!-- a block container is required -->\n<div>\n  <img id=\"image\" src=\"picture.jpg\" alt=\"Picture\">\n</div>\n\n<div>\n  <ul id=\"images\">\n    <li><img src=\"picture-1.jpg\" alt=\"Picture 1\"></li>\n    <li><img src=\"picture-2.jpg\" alt=\"Picture 2\"></li>\n    <li><img src=\"picture-3.jpg\" alt=\"Picture 3\"></li>\n  </ul>\n</div>\n```\n\n```js\n// import 'viewerjs/dist/viewer.css';\nimport Viewer from 'viewerjs';\n\n// View an image\nconst viewer = new Viewer(document.getElementById('image'), {\n  inline: true,\n  viewed() {\n    viewer.zoomTo(1);\n  },\n});\n\n// View a list of images\nconst gallery = new Viewer(document.getElementById('images'));\n```\n\n## Keyboard support\n\n> Only available in modal mode.\n\n- `Esc`: Exit full screen or close the viewer or exit modal mode or stop play.\n- `Space`: Stop play.\n- `←`: View the previous image.\n- `→`: View the next image.\n- `↑`: Zoom in the image.\n- `↓`: Zoom out the image.\n- `Ctrl + 0`: Zoom out to initial size.\n- `Ctrl + 1`: Zoom in to natural size.\n\n[⬆ back to top](#table-of-contents)\n\n## Options\n\nYou may set viewer options with `new Viewer(image, options)`.\nIf you want to change the global default options, You may use `Viewer.setDefaults(options)`.\n\n### backdrop\n\n- Type: `Boolean` or `String`\n- Default: `true`\n\nEnable a modal backdrop, specify `static` for a backdrop which doesn't close the modal on click.\n\n### button\n\n- Type: `Boolean`\n- Default: `true`\n\nShow the button on the top-right of the viewer.\n\n### navbar\n\n- Type: `Boolean` or `Number`\n- Default: `true`\n- Options:\n  - `0` or `false`: hide the navbar\n  - `1` or `true`: show the navbar\n  - `2`: show the navbar only when the screen width is greater than 768 pixels\n  - `3`: show the navbar only when the screen width is greater than 992 pixels\n  - `4`: show the navbar only when the screen width is greater than 1200 pixels\n\nSpecify the visibility of the navbar.\n\n### title\n\n- Type: `Boolean` or `Number` or `Function` or `Array`\n- Default: `true`\n- Options:\n  - `0` or `false`: hide the title\n  - `1` or `true` or `Function` or `Array`: show the title\n  - `2`: show the title only when the screen width is greater than 768 pixels\n  - `3`: show the title only when the screen width is greater than 992 pixels\n  - `4`: show the title only when the screen width is greater than 1200 pixels\n  - `Function`: customize the title content\n  - `[Number, Function]`: the first element indicate the visibility, the second element customize the title content\n\nSpecify the visibility and the content of the title.\n\n> The name comes from the `alt` attribute of an image element or the image name parsed from URL.\n\nFor example, `title: 4` equals to:\n\n```js\nnew Viewer(image, {\n  title: [4, (image, imageData) => `${image.alt} (${imageData.naturalWidth} × ${imageData.naturalHeight})`]\n});\n```\n\n### toolbar\n\n- Type: `Boolean` or `Number` or `Object`\n- Default: `true`\n- Options:\n  - `0` or `false`: hide the toolbar.\n  - `1` or `true`: show the toolbar.\n  - `2`: show the toolbar only when the screen width is greater than 768 pixels.\n  - `3`: show the toolbar only when the screen width is greater than 992 pixels.\n  - `4`: show the toolbar only when the screen width is greater than 1200 pixels.\n  - `{ key: Boolean | Number }`: show or hide the toolbar.\n  - `{ key: String }`: customize the size of the button.\n  - `{ key: Function }`: customize the click handler of the button.\n  - `{ key: { show: Boolean | Number, size: String, click: Function }`: customize each property of the button.\n  - Available keys: \"zoomIn\", \"zoomOut\", \"oneToOne\", \"reset\", \"prev\", \"play\", \"next\", \"rotateLeft\", \"rotateRight\", \"flipHorizontal\" and \"flipVertical\".\n  - Available sizes: \"small\", \"medium\" (default) and \"large\".\n\nSpecify the visibility and layout of the toolbar its buttons.\n\nFor example, `toolbar: 4` equals to:\n\n```js\nnew Viewer(image, {\n  toolbar: {\n    zoomIn: 4,\n    zoomOut: 4,\n    oneToOne: 4,\n    reset: 4,\n    prev: 4,\n    play: {\n      show: 4,\n      size: 'large',\n    },\n    next: 4,\n    rotateLeft: 4,\n    rotateRight: 4,\n    flipHorizontal: 4,\n    flipVertical: 4,\n  },\n});\n```\n\n### className\n\n- Type: `String`\n- Default: `''`\n\nCustom class name(s) to add to the viewer's root element.\n\n### container\n\n- Type: `Element` or `String`\n- Default: `'body'`\n- An element or a valid selector for [Document.querySelector](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector)\n\nThe container to put the viewer in modal mode.\n\n> Only available when the `inline` option is set to `false`.\n\n### filter\n\n- Type: `Function`\n- Default: `null`\n\nFilter the images for viewing (should return `true` if the image is viewable).\n\nFor example:\n\n```js\nnew Viewer(image, {\n  filter(image) {\n    return image.complete;\n  },\n});\n```\n\n### fullscreen\n\n- Type: `Boolean`\n- Default: `true`\n\nEnable to request full screen when play.\n\n> Requires the browser supports [Full Screen API](http://caniuse.com/fullscreen).\n\n### initialViewIndex\n\n- Type: `Number`\n- Default: `0`\n\nDefine the initial index of image for viewing.\n\n> Also used as the default parameter value of the `view` method.\n\n### inline\n\n- Type: `Boolean`\n- Default: `false`\n\nEnable inline mode.\n\n### interval\n\n- Type: `Number`\n- Default: `5000`\n\nThe amount of time to delay between automatically cycling an image when playing.\n\n### keyboard\n\n- Type: `Boolean`\n- Default: `true`\n\nEnable keyboard support.\n\n### loading\n\n- Type: `Boolean`\n- Default: `true`\n\nIndicate if show a loading spinner when load image or not.\n\n### loop\n\n- Type: `Boolean`\n- Default: `true`\n\nIndicate if enable loop viewing or not.\n\n> If the current image is the last one, then the next one to view is the first one, and vice versa.\n\n### minWidth\n\n- Type: `Number`\n- Default: 200\n\nDefine the minimum width of the viewer.\n\n> Only available in inline mode (set the `inline` option to `true`).\n\n### minHeight\n\n- Type: `Number`\n- Default: 100\n\nDefine the minimum height of the viewer.\n\n> Only available in inline mode (set the `inline` option to `true`).\n\n### movable\n\n- Type: `Boolean`\n- Default: `true`\n\nEnable to move the image.\n\n### zoomable\n\n- Type: `Boolean`\n- Default: `true`\n\nEnable to zoom the image.\n\n### rotatable\n\n- Type: `Boolean`\n- Default: `true`\n\nEnable to rotate the image.\n\n### scalable\n\n- Type: `Boolean`\n- Default: `true`\n\nEnable to scale the image.\n\n### toggleOnDblclick\n\n- Type: `Boolean`\n- Default: `true`\n\nIndicate if toggle the image size between its natural size and initial size when double click on the image or not.\n\nIn other words, call the [`toggle`](#toggle) method automatically when double click on the image.\n\n> Requires [`dblclick`](https://developer.mozilla.org/en-US/docs/Web/Events/dblclick) event support.\n\n### tooltip\n\n- Type: `Boolean`\n- Default: `true`\n\nShow the tooltip with image ratio (percentage) when zoom in or zoom out.\n\n### transition\n\n- Type: `Boolean`\n- Default: `true`\n\nEnable CSS3 Transition for some special elements.\n\n### zIndex\n\n- Type: `Number`\n- Default: `2015`\n\nDefine the CSS `z-index` value of viewer in modal mode.\n\n### zIndexInline\n\n- Type: `Number`\n- Default: `0`\n\nDefine the CSS `z-index` value of viewer in inline mode.\n\n### zoomRatio\n\n- Type: `Number`\n- Default: `0.1`\n\nDefine the ratio when zoom the image by wheeling mouse.\n\n### minZoomRatio\n\n- Type: `Number`\n- Default: `0.01`\n\nDefine the min ratio of the image when zoom out.\n\n### maxZoomRatio\n\n- Type: `Number`\n- Default: `100`\n\nDefine the max ratio of the image when zoom in.\n\n### url\n\n- Type: `String` or `Function`\n- Default: `'src'`\n\nDefine where to get the original image URL for viewing.\n\n> If it is a string, it should be one of the attributes of each image element.\n> If it is a function, it should return a valid image URL.\n\nFor example:\n\n```html\n<img src=\"picture.jpg?size=160\">\n```\n\n```js\nnew Viewer(image, {\n  url(image) {\n    return image.src.replace('?size=160', '');\n  },\n});\n```\n\n### ready\n\n- Type: `Function`\n- Default: `null`\n\nA shortcut of the `ready` event.\n\n### show\n\n- Type: `Function`\n- Default: `null`\n\nA shortcut of the `show` event.\n\n### shown\n\n- Type: `Function`\n- Default: `null`\n\nA shortcut of the `shown` event.\n\n### hide\n\n- Type: `Function`\n- Default: `null`\n\nA shortcut of the `hide` event.\n\n### hidden\n\n- Type: `Function`\n- Default: `null`\n\nA shortcut of the `hidden` event.\n\n### view\n\n- Type: `Function`\n- Default: `null`\n\nA shortcut of the `view` event.\n\n### viewed\n\n- Type: `Function`\n- Default: `null`\n\nA shortcut of the `viewed` event.\n\n### zoom\n\n- Type: `Function`\n- Default: `null`\n\nA shortcut of the `zoom` event.\n\n### zoomed\n\n- Type: `Function`\n- Default: `null`\n\nA shortcut of the `zoomed` event.\n\n[⬆ back to top](#table-of-contents)\n\n## Methods\n\nAll methods allow chain composition.\n\nAs there are some **asynchronous** processes when start the viewer, you should call a method only when it is available, see the following **lifecycle**:\n\n```js\nnew Viewer(image, {\n  ready() {\n    // 2 methods are available here: \"show\" and \"destroy\".\n  },\n  shown() {\n    // 9 methods are available here: \"hide\", \"view\", \"prev\", \"next\", \"play\", \"stop\", \"full\", \"exit\" and \"destroy\".\n  },\n  viewed() {\n    // All methods are available here except \"show\".\n    this.viewer.zoomTo(1).rotateTo(180);\n  }\n});\n```\n\n### show([immediate])\n\n- **immediate** (optional):\n  - Type: `Boolean`\n  - Default: `false`\n  - Indicates if show the viewer immediately or not.\n\nShow the viewer.\n\n> Only available in modal mode.\n\n### hide([immediate])\n\n- **immediate** (optional):\n  - Type: `Boolean`\n  - Default: `false`\n  - Indicates if hide the viewer immediately or not.\n\nhide the viewer.\n\n> Only available in modal mode.\n\n### view([index])\n\n- **index** (optional):\n  - Type: `Number`\n  - Default: `0` (inherits from the `initialViewIndex` option)\n  - The index of the image for viewing\n\nView one of the images with image's index. If the viewer is not shown, will show the viewer first.\n\n```js\nviewer.view(1); // View the second image\n```\n\n### prev([loop=false])\n\n- **loop** (optional):\n  - Type: `Boolean`\n  - Default: `false`\n  - Indicate if turn to view the last one when it is the first one at present.\n\nView the previous image.\n\n### next([loop=false])\n\n- **loop** (optional):\n  - Type: `Boolean`\n  - Default: `false`\n  - Indicate if turn to view the first one  when it is the last one at present.\n\nView the next image.\n\n### move(offsetX[, offsetY])\n\n- **offsetX**:\n  - Type: `Number`\n  - Moving size (px) in the horizontal direction\n\n- **offsetY** (optional):\n  - Type: `Number`\n  - Moving size (px) in the vertical direction.\n  - If not present, its default value is `offsetX`\n\nMove the image with relative offsets.\n\n```js\nviewer.move(1);\nviewer.move(-1, 0); // Move left\nviewer.move(1, 0);  // Move right\nviewer.move(0, -1); // Move up\nviewer.move(0, 1);  // Move down\n```\n\n### moveTo(x[, y])\n\n- **x**:\n  - Type: `Number`\n  - The `left` value of the image\n\n- **y** (optional):\n  - Type: `Number`\n  - The `top` value of the image\n  - If not present, its default value is `x`.\n\nMove the image to an absolute point.\n\n### zoom(ratio[, hasTooltip])\n\n- **ratio**:\n  - Type: `Number`\n  - Zoom in: requires a positive number (ratio > 0)\n  - Zoom out: requires a negative number (ratio < 0)\n\n- **hasTooltip** (optional):\n  - Type: `Boolean`\n  - Default: `false`\n  - Show tooltip\n\nZoom the image with a relative ratio\n\n```js\nviewer.zoom(0.1);\nviewer.zoom(-0.1);\n```\n\n### zoomTo(ratio[, hasTooltip])\n\n- **ratio**:\n  - Type: `Number`\n  - Requires a positive number (ratio > 0)\n\n- **hasTooltip** (optional):\n  - Type: `Boolean`\n  - Default: `false`\n  - Show tooltip\n\nZoom the image to an absolute ratio.\n\n```js\nviewer.zoomTo(0); // Zoom to zero size (0%)\nviewer.zoomTo(1); // Zoom to natural size (100%)\n```\n\n### rotate(degree)\n\n- **degree**:\n  - Type: `Number`\n  - Rotate right: requires a positive number (degree > 0)\n  - Rotate left: requires a negative number (degree < 0)\n\nRotate the image with a relative degree.\n\n```js\nviewer.rotate(90);\nviewer.rotate(-90);\n```\n\n### rotateTo(degree)\n\n- **degree**:\n  - Type: `Number`\n\nRotate the image to an absolute degree.\n\n```js\nviewer.rotateTo(0); // Reset to zero degree\nviewer.rotateTo(360); // Rotate a full round\n```\n\n### scale(scaleX[, scaleY])\n\n- **scaleX**:\n  - Type: `Number`\n  - Default: `1`\n  - The scaling factor to apply on the abscissa of the image\n  - When equal to `1` it does nothing.\n\n- **scaleY** (optional):\n  - Type: `Number`\n  - The scaling factor to apply on the ordinate of the image\n  - If not present, its default value is `scaleX`.\n\nScale the image.\n\n```js\nviewer.scale(-1); // Flip both horizontal and vertical\nviewer.scale(-1, 1); // Flip horizontal\nviewer.scale(1, -1); // Flip vertical\n```\n\n### scaleX(scaleX)\n\n- **scaleX**:\n  - Type: `Number`\n  - Default: `1`\n  - The scaling factor to apply on the abscissa of the image\n  - When equal to `1` it does nothing\n\nScale the abscissa of the image.\n\n```js\nviewer.scaleX(-1); // Flip horizontal\n```\n\n### scaleY(scaleY)\n\n- **scaleY**:\n  - Type: `Number`\n  - Default: `1`\n  - The scaling factor to apply on the ordinate of the image\n  - When equal to `1` it does nothing\n\nScale the ordinate of the image.\n\n```js\nviewer.scaleY(-1); // Flip vertical\n```\n\n### play([fullscreen])\n\n- **fullscreen** (optional):\n  - Type: `Boolean`\n  - Default: `false`\n  - Indicate if request fullscreen or not.\n\nPlay the images.\n\n### stop()\n\nStop play.\n\n### full()\n\nEnter modal mode.\n\n> Only available in inline mode.\n\n### exit()\n\nExit  modal mode.\n\n> Only available in inline mode.\n\n### tooltip()\n\nShow the current ratio of the image with percentage.\n\n> Requires the `tooltip` option set to `true`.\n\n### toggle()\n\nToggle the image size between its natural size and initial size.\n\n> Used by the [`toggleOnDblclick`](#toggleOnDblclick) option.\n\n### reset()\n\nReset the image to its initial state.\n\n### update()\n\nUpdate the viewer instance when the source images changed (added, removed or sorted).\n\n> If you load images dynamically (with XMLHTTPRequest), you can use this method to add the new images to the viewer instance.\n\n### destroy()\n\nDestroy the viewer and remove the instance.\n\n[⬆ back to top](#table-of-contents)\n\n## Events\n\nAll events can access the viewer instance with `this.viewer` in its handler.\n\n> Be careful to use these events in other component which has the same event names, e.g.: [Bootstrap](https://getbootstrap.com/)'s modal.\n\n```js\nlet viewer;\n\nimage.addEventListener('viewed', function () {\n  console.log(this.viewer === viewer);\n  // > true\n});\n\nviewer = new Viewer(image);\n```\n\n### ready\n\nThis event fires when a viewer instance is ready for viewing.\n\n> In modal mode, this event will not be triggered until you click on one of the images.\n\n### show\n\nThis event fires when the viewer modal starts to show.\n\n> Only available in modal mode.\n\n### shown\n\nThis event fires when the viewer modal has shown.\n\n> Only available in modal mode.\n\n### hide\n\nThis event fires when the viewer modal starts to hide.\n\n> Only available in modal mode.\n\n### hidden\n\nThis event fires when the viewer modal has hidden.\n\n> Only available in modal mode.\n\n### view\n\n- **event.detail.originalImage**:\n  - Type: `HTMLImageElement`\n  - The original image.\n\n- **event.detail.index**:\n  - Type: `Number`\n  - The index of the original image.\n\n- **event.detail.image**:\n  - Type: `HTMLImageElement`\n  - The current image (a clone of the original image).\n\nThis event fires when a viewer starts to show (view) an image.\n\n### viewed\n\n- **event.detail**: the same as the `view` event.\n\nThis event fires when a viewer has shown (viewed) an image.\n\n### zoom\n\n- **event.detail.originalEvent**:\n  - Type: `Event`\n  - Options: `wheel`, `touchmove`.\n\n- **event.detail.oldRatio**:\n  - Type: `Number`\n  - The old (current) ratio of the image.\n\n- **event.detail.ratio**:\n  - Type: `Number`\n  - The new (next) ratio of the image (`imageData.width / imageData.naturalWidth`).\n\nThis event fires when a viewer starts to zoom (in or out) an image.\n\n### zoomed\n\n- **event.detail**: the same as the `zoom` event.\n\nThis event fires when a viewer has zoomed (in or out) an image.\n\n[⬆ back to top](#table-of-contents)\n\n## No conflict\n\nIf you have to use other viewer with the same namespace, just call the `Viewer.noConflict` static method to revert to it.\n\n```html\n<script src=\"other-viewer.js\"></script>\n<script src=\"viewer.js\"></script>\n<script>\n  Viewer.noConflict();\n  // Code that uses other `Viewer` can follow here.\n</script>\n```\n\n## Browser support\n\n- Chrome (latest)\n- Firefox (latest)\n- Safari (latest)\n- Opera (latest)\n- Edge (latest)\n- Internet Explorer 9+\n\n## Contributing\n\nPlease read through our [contributing guidelines](.github/CONTRIBUTING.md).\n\n## Versioning\n\nMaintained under the [Semantic Versioning guidelines](https://semver.org/).\n\n## License\n\n[MIT](https://opensource.org/licenses/MIT) © [Chen Fengyuan](https://chenfengyuan.com)\n\n[⬆ back to top](#table-of-contents)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/fengyuanchen/viewerjs.git"
  },
  "scripts": {
    "build": "npm run build:css && npm run build:js",
    "build:css": "postcss src/index.css -o dist/viewer.css --no-map",
    "build:js": "rollup -c",
    "clear": "del-cli dist",
    "codecov": "cat coverage/lcov.info | codecov",
    "compress": "npm run compress:css && npm run compress:js",
    "compress:css": "postcss dist/viewer.css -u cssnano -o dist/viewer.min.css --no-map",
    "compress:js": "uglifyjs dist/viewer.js -o dist/viewer.min.js -c -m --comments /^!/",
    "copy": "cpy dist/viewer.css docs/css",
    "lint": "npm run lint:js && npm run lint:css",
    "lint:css": "stylelint {src,docs}/**/*.{css,scss,html} --fix",
    "lint:js": "eslint src test *.js --fix",
    "release": "npm run clear && npm run lint && npm run build && npm run compress && npm run copy && npm test",
    "start": "npm-run-all --parallel watch:*",
    "test": "cross-env NODE_ENV=test karma start test/karma.conf.js",
    "watch:css": "postcss src/index.css -o docs/css/viewer.css -m -w",
    "watch:js": "rollup -c -m -w"
  },
  "style": "dist/viewer.css",
  "types": "types/index.d.ts",
  "unpkg": "dist/viewer.js",
  "version": "1.3.2"
}
