/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';
var TaminStepperStepComponent = /** @class */ (function () {
    function TaminStepperStepComponent(breakpointObserver) {
        this.breakpointObserver = breakpointObserver;
        this.size = 1;
        this.breakPoints = [Breakpoints.Small, Breakpoints.Handset];
        this.renderMode = 'desktop';
    }
    /**
     * @return {?}
     */
    TaminStepperStepComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.breakpointObserver
            .observe(this.breakPoints)
            .subscribe((/**
         * @param {?} state
         * @return {?}
         */
        function (state) {
            if (state.matches) {
                if (_this.renderMode !== 'mobile') {
                    _this.renderMode = 'mobile';
                }
            }
            else {
                if (_this.renderMode !== 'desktop') {
                    _this.renderMode = 'desktop';
                }
            }
        }));
    };
    TaminStepperStepComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tamin-tamin-stepper-step',
                    template: "<ng-container *ngIf=\"renderMode === 'desktop'\">\n  <div [ngClass]=\"'col-' + size.toString()\">\n    <div class=\"stepper-step-desktop\">\n      <div>&nbsp;</div>\n      <div [ngClass]=\"{'stepper-icon-desktop-active' : active, 'stepper-icon-desktop' : !active}\">{{iconText}}</div>\n      <div [ngClass]=\"{'stepper-text-desktop-active' : active, 'stepper-text-desktop' : !active}\">\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n      </div>\n    </div>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"renderMode === 'mobile'\">\n  <div class=\"stepper-step-mobile-container\">\n    <div style=\"display: inline-block\" [ngClass]=\"{'stepper-icon-mobile-active' : active, 'stepper-icon-mobile' : !active}\">{{iconText}}</div>\n    <div style=\"display: inline-block; vertical-align: middle\"  [ngClass]=\"{'stepper-text-active' : active, 'stepper-mobile-text' : !active}\">\n      <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #content><ng-content></ng-content></ng-template>\n",
                    styles: [".col-1,.col-10,.col-11,.col-12,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9{text-align:center;padding:10px}.stepper-step-desktop{position:relative}.stepper-icon-desktop{width:30px;height:30px;border:1px solid #cacaca;border-radius:50%;color:#000;background-color:#fff;margin:0 auto;font-size:1.6em}.stepper-icon-desktop-active{width:30px;height:30px;border:1px solid #00adef;border-radius:50%;color:#fff;background-color:#00adef;margin:0 auto;font-size:1.6em}.stepper-text-desktop{width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.stepper-text-desktop-active{white-space:nowrap;overflow:hidden;color:#00adef;text-overflow:ellipsis}.stepper-step-mobile-container{width:100%;padding-right:10px}.stepper-icon-mobile{width:30px;height:30px;border:1px solid #cacaca;border-radius:50%;color:#000;background-color:#fff;font-size:1.6em;text-align:center;margin:5px}.stepper-icon-mobile-active{width:30px;height:30px;border:1px solid #00adef;border-radius:50%;color:#fff;background-color:#00adef;font-size:1.6em;text-align:center;margin:5px}.stepper-mobile-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:inline-block}.stepper-text-mobile-active{width:100%;white-space:nowrap;overflow:hidden;color:#00adef;text-overflow:ellipsis}"]
                }] }
    ];
    /** @nocollapse */
    TaminStepperStepComponent.ctorParameters = function () { return [
        { type: BreakpointObserver }
    ]; };
    TaminStepperStepComponent.propDecorators = {
        size: [{ type: Input }],
        name: [{ type: Input }]
    };
    return TaminStepperStepComponent;
}());
export { TaminStepperStepComponent };
if (false) {
    /** @type {?} */
    TaminStepperStepComponent.prototype.size;
    /** @type {?} */
    TaminStepperStepComponent.prototype.iconText;
    /** @type {?} */
    TaminStepperStepComponent.prototype.name;
    /** @type {?} */
    TaminStepperStepComponent.prototype.active;
    /** @type {?} */
    TaminStepperStepComponent.prototype.breakPoints;
    /** @type {?} */
    TaminStepperStepComponent.prototype.renderMode;
    /** @type {?} */
    TaminStepperStepComponent.prototype.breakpointObserver;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tc3RlcHBlci1zdGVwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RhbWluLWZyYW1ld29yay8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RhbWluLXN0ZXBwZXIvdGFtaW4tc3RlcHBlci1zdGVwL3RhbWluLXN0ZXBwZXItc3RlcC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFTLE1BQU0sZUFBZSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxrQkFBa0IsRUFBRSxXQUFXLEVBQWtCLE1BQU0scUJBQXFCLENBQUM7QUFFckY7SUFjRSxtQ0FBbUIsa0JBQXNDO1FBQXRDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFQaEQsU0FBSSxHQUFxRCxDQUFDLENBQUM7UUFJcEUsZ0JBQVcsR0FBZSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUUsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ25FLGVBQVUsR0FBeUIsU0FBUyxDQUFDO0lBRzdDLENBQUM7Ozs7SUFFRCw0Q0FBUTs7O0lBQVI7UUFBQSxpQkFlQztRQWRDLElBQUksQ0FBQyxrQkFBa0I7YUFDcEIsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUM7YUFDekIsU0FBUzs7OztRQUFDLFVBQUMsS0FBc0I7WUFDaEMsSUFBSSxLQUFLLENBQUMsT0FBTyxFQUFFO2dCQUVqQixJQUFJLEtBQUksQ0FBQyxVQUFVLEtBQUssUUFBUSxFQUFFO29CQUNoQyxLQUFJLENBQUMsVUFBVSxHQUFHLFFBQVEsQ0FBQztpQkFDNUI7YUFDRjtpQkFBTTtnQkFDTCxJQUFJLEtBQUksQ0FBQyxVQUFVLEtBQUssU0FBUyxFQUFFO29CQUNqQyxLQUFJLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztpQkFDN0I7YUFDRjtRQUNILENBQUMsRUFBQyxDQUFDO0lBQ1AsQ0FBQzs7Z0JBaENGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsMEJBQTBCO29CQUNwQyxra0NBQWtEOztpQkFFbkQ7Ozs7Z0JBTk8sa0JBQWtCOzs7dUJBU3ZCLEtBQUs7dUJBRUwsS0FBSzs7SUF3QlIsZ0NBQUM7Q0FBQSxBQWpDRCxJQWlDQztTQTVCWSx5QkFBeUI7OztJQUVwQyx5Q0FBb0U7O0lBQ3BFLDZDQUFpQjs7SUFDakIseUNBQWM7O0lBQ2QsMkNBQWdCOztJQUNoQixnREFBbUU7O0lBQ25FLCtDQUE2Qzs7SUFFakMsdURBQTZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIElucHV0LCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtCcmVha3BvaW50T2JzZXJ2ZXIsIEJyZWFrcG9pbnRzLCBCcmVha3BvaW50U3RhdGV9IGZyb20gJ0Bhbmd1bGFyL2Nkay9sYXlvdXQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0YW1pbi10YW1pbi1zdGVwcGVyLXN0ZXAnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGFtaW4tc3RlcHBlci1zdGVwLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdGFtaW4tc3RlcHBlci1zdGVwLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVGFtaW5TdGVwcGVyU3RlcENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCkgc2l6ZTogMSB8IDIgfCAzIHwgNCB8IDUgfCA2IHwgNyB8IDggfCA5IHwgMTAgfCAxMSB8IDEyID0gMTtcbiAgaWNvblRleHQ6IHN0cmluZztcbiAgQElucHV0KCkgbmFtZTtcbiAgYWN0aXZlOiBib29sZWFuO1xuICBicmVha1BvaW50czogQXJyYXk8YW55PiA9IFtCcmVha3BvaW50cy5TbWFsbCwgQnJlYWtwb2ludHMuSGFuZHNldF07XG4gIHJlbmRlck1vZGU6ICdkZXNrdG9wJyB8ICdtb2JpbGUnID0gJ2Rlc2t0b3AnO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBicmVha3BvaW50T2JzZXJ2ZXI6IEJyZWFrcG9pbnRPYnNlcnZlcikge1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5icmVha3BvaW50T2JzZXJ2ZXJcbiAgICAgIC5vYnNlcnZlKHRoaXMuYnJlYWtQb2ludHMpXG4gICAgICAuc3Vic2NyaWJlKChzdGF0ZTogQnJlYWtwb2ludFN0YXRlKSA9PiB7XG4gICAgICAgIGlmIChzdGF0ZS5tYXRjaGVzKSB7XG5cbiAgICAgICAgICBpZiAodGhpcy5yZW5kZXJNb2RlICE9PSAnbW9iaWxlJykge1xuICAgICAgICAgICAgdGhpcy5yZW5kZXJNb2RlID0gJ21vYmlsZSc7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmICh0aGlzLnJlbmRlck1vZGUgIT09ICdkZXNrdG9wJykge1xuICAgICAgICAgICAgdGhpcy5yZW5kZXJNb2RlID0gJ2Rlc2t0b3AnO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gIH1cbn1cbiJdfQ==