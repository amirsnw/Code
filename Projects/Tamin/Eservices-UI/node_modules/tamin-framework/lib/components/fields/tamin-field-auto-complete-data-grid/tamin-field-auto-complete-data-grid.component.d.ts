import { EventEmitter } from '@angular/core';
import { TaminDataGridComponent } from '../../tamin-data-grid/tamin-data-grid.component';
import { TaminDataGridConfiguration } from '../../../helpers/tamin.data.grid.configuration/tamin.data.grid.configuration';
import { FieldBaseComponent } from '../../../base/field-base.component';
import { Observable, Subject } from 'rxjs';
import { PickerContainerComponent } from '../../containers/picker-container/picker-container.component';
import { SearchOperator } from '../../../models/search-param.model';
export declare class TaminFieldAutoCompleteDataGridComponent extends FieldBaseComponent {
    dataGridConfiguration: TaminDataGridConfiguration;
    casecadeControlName: string;
    casecadeControlFieldName: string;
    displayField: string;
    valueField: string;
    maxSearchTermLength: number;
    searchOperator: string;
    searchPattern: string;
    searchOperatorType: SearchOperator;
    beforeLoad: EventEmitter<{}>;
    theGrid: TaminDataGridComponent;
    picker: PickerContainerComponent;
    searchTerm: Subject<string>;
    filter: any[];
    private selectedValue;
    private currentValue;
    private parent;
    private parentValue;
    initializeComponent(): void;
    initValueAccessor(): void;
    hidePopup(): void;
    showPopup(): void;
    search(terms: Observable<string>): Observable<any>;
    searchEntries(term: string): string | any[];
    onItemSelected(val: any): void;
    afterRefreshData(): void;
    writeValue(value: any): void;
    private loadData;
    pickerBeforeHide(): void;
    pickerBeforeShow(): void;
}
