/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
var TaminDataPagerComponent = /** @class */ (function () {
    function TaminDataPagerComponent() {
        this.pageChanged = new EventEmitter();
        this.refreshData = new EventEmitter();
    }
    /**
     * @return {?}
     */
    TaminDataPagerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.pagerCurrentPage > this.pagerTotal) {
            this.pagerCurrentPage = this.pagerTotal;
        }
        else if (this.pagerCurrentPage < 1) {
            this.pagerCurrentPage = 1;
        }
    };
    /**
     * @param {?} changeAmount
     * @return {?}
     */
    TaminDataPagerComponent.prototype.changePage = /**
     * @param {?} changeAmount
     * @return {?}
     */
    function (changeAmount) {
        /** @type {?} */
        var oldPage = this.pagerCurrentPage;
        if (changeAmount > 1) {
            this.pagerCurrentPage = this.pagerTotal;
        }
        else if (changeAmount < -1) {
            this.pagerCurrentPage = 1;
        }
        else {
            this.pagerCurrentPage = parseFloat(this.pagerCurrentPage.toString()) + parseFloat(changeAmount.toString());
            if (this.pagerCurrentPage < 1) {
                this.pagerCurrentPage = 1;
            }
            if (this.pagerCurrentPage > this.pagerTotal) {
                this.pagerCurrentPage = this.pagerTotal;
            }
        }
        if (oldPage !== this.pagerCurrentPage) {
            this.pageChanged.emit(this.pagerCurrentPage);
        }
    };
    /**
     * @return {?}
     */
    TaminDataPagerComponent.prototype.onRefresh = /**
     * @return {?}
     */
    function () {
        this.refreshData.emit();
    };
    TaminDataPagerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tamin-data-pager',
                    template: "<table class=\"pager\">\n  <tbody>\n  <tr>\n    <td>\n      <button type=\"button\" class=\"button pager icon-to-end\" (click)=\"changePage(-2)\"></button>\n    </td>\n    <td>\n      <button type=\"button\" class=\"button pager icon-play\" (click)=\"changePage(-1)\"></button>\n    </td>\n    <td class=\"pagerText\">\n      <span>\u0635\u0641\u062D\u0647</span> {{pagerCurrentPage | persianNumber}} <span>\u0627\u0632</span> {{this.pagerTotal | persianNumber}}\n    </td>\n    <td>\n      <button type=\"button\" class=\"button pager icon-play\" style=\"transform: rotate(180deg);\" (click)=\"changePage(1)\"></button>\n    </td>\n    <td>\n      <button type=\"button\" class=\"button pager icon-to-start\" (click)=\"changePage(2)\"></button>\n    </td>\n    <td>\n      <button type=\"button\" class=\"button pager icon-arrows-cw\" (click)=\"onRefresh()\"></button>\n    </td>\n  </tr>\n  </tbody>\n</table>\n",
                    styles: [".pager{border-spacing:0;border:none;text-align:right}.pager td{border:none}.pagerText{padding:5px;font-size:11px}.button.pager{text-align:center;vertical-align:middle;padding:3px 3px 0;color:#333;background-color:transparent}.button.pager:hover{color:#057;background-color:#eaeaea}"]
                }] }
    ];
    /** @nocollapse */
    TaminDataPagerComponent.ctorParameters = function () { return []; };
    TaminDataPagerComponent.propDecorators = {
        pagerSize: [{ type: Input }],
        pagerCurrentPage: [{ type: Input }],
        pagerTotal: [{ type: Input }],
        pageChanged: [{ type: Output }],
        refreshData: [{ type: Output }]
    };
    return TaminDataPagerComponent;
}());
export { TaminDataPagerComponent };
if (false) {
    /** @type {?} */
    TaminDataPagerComponent.prototype.pagerSize;
    /** @type {?} */
    TaminDataPagerComponent.prototype.pagerCurrentPage;
    /** @type {?} */
    TaminDataPagerComponent.prototype.pagerTotal;
    /** @type {?} */
    TaminDataPagerComponent.prototype.pageChanged;
    /** @type {?} */
    TaminDataPagerComponent.prototype.refreshData;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tZGF0YS1wYWdlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90YW1pbi1mcmFtZXdvcmsvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90YW1pbi1kYXRhLWdyaWQvdGFtaW4tZGF0YS1wYWdlci90YW1pbi1kYXRhLXBhZ2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUU3RTtJQWdCRTtRQUhVLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUN6QyxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFHaEQsQ0FBQzs7OztJQUVELDBDQUFROzs7SUFBUjtRQUNFLElBQUksSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDM0MsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7U0FDekM7YUFBTSxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxDQUFDLEVBQUU7WUFDcEMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLENBQUMsQ0FBQztTQUMzQjtJQUNILENBQUM7Ozs7O0lBRUQsNENBQVU7Ozs7SUFBVixVQUFXLFlBQW9COztZQUN2QixPQUFPLEdBQUcsSUFBSSxDQUFDLGdCQUFnQjtRQUVyQyxJQUFJLFlBQVksR0FBRyxDQUFDLEVBQUU7WUFDcEIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7U0FDekM7YUFBTSxJQUFJLFlBQVksR0FBRyxDQUFDLENBQUMsRUFBRTtZQUM1QixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsQ0FBQyxDQUFDO1NBQzNCO2FBQU07WUFDTCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztZQUMzRyxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxDQUFDLEVBQUU7Z0JBQzdCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxDQUFDLENBQUM7YUFDM0I7WUFDRCxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFO2dCQUMzQyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQzthQUN6QztTQUNGO1FBRUQsSUFBSSxPQUFPLEtBQUssSUFBSSxDQUFDLGdCQUFnQixFQUFFO1lBQ3JDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1NBQzlDO0lBQ0gsQ0FBQzs7OztJQUVELDJDQUFTOzs7SUFBVDtRQUNFLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDMUIsQ0FBQzs7Z0JBbkRGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1Qiw2NUJBQWdEOztpQkFFakQ7Ozs7OzRCQUdFLEtBQUs7bUNBRUwsS0FBSzs2QkFFTCxLQUFLOzhCQUVMLE1BQU07OEJBQ04sTUFBTTs7SUFzQ1QsOEJBQUM7Q0FBQSxBQXBERCxJQW9EQztTQS9DWSx1QkFBdUI7OztJQUVsQyw0Q0FBMkI7O0lBRTNCLG1EQUFrQzs7SUFFbEMsNkNBQTRCOztJQUU1Qiw4Q0FBbUQ7O0lBQ25ELDhDQUFnRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhbWluLWRhdGEtcGFnZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vdGFtaW4tZGF0YS1wYWdlci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3RhbWluLWRhdGEtcGFnZXIuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBUYW1pbkRhdGFQYWdlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCkgcGFnZXJTaXplOiBudW1iZXI7XG5cbiAgQElucHV0KCkgcGFnZXJDdXJyZW50UGFnZTogbnVtYmVyO1xuXG4gIEBJbnB1dCgpIHBhZ2VyVG90YWw6IG51bWJlcjtcblxuICBAT3V0cHV0KCkgcGFnZUNoYW5nZWQgPSBuZXcgRXZlbnRFbWl0dGVyPG51bWJlcj4oKTtcbiAgQE91dHB1dCgpIHJlZnJlc2hEYXRhID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodGhpcy5wYWdlckN1cnJlbnRQYWdlID4gdGhpcy5wYWdlclRvdGFsKSB7XG4gICAgICB0aGlzLnBhZ2VyQ3VycmVudFBhZ2UgPSB0aGlzLnBhZ2VyVG90YWw7XG4gICAgfSBlbHNlIGlmICh0aGlzLnBhZ2VyQ3VycmVudFBhZ2UgPCAxKSB7XG4gICAgICB0aGlzLnBhZ2VyQ3VycmVudFBhZ2UgPSAxO1xuICAgIH1cbiAgfVxuXG4gIGNoYW5nZVBhZ2UoY2hhbmdlQW1vdW50OiBudW1iZXIpIHtcbiAgICBjb25zdCBvbGRQYWdlID0gdGhpcy5wYWdlckN1cnJlbnRQYWdlO1xuXG4gICAgaWYgKGNoYW5nZUFtb3VudCA+IDEpIHtcbiAgICAgIHRoaXMucGFnZXJDdXJyZW50UGFnZSA9IHRoaXMucGFnZXJUb3RhbDtcbiAgICB9IGVsc2UgaWYgKGNoYW5nZUFtb3VudCA8IC0xKSB7XG4gICAgICB0aGlzLnBhZ2VyQ3VycmVudFBhZ2UgPSAxO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnBhZ2VyQ3VycmVudFBhZ2UgPSBwYXJzZUZsb2F0KHRoaXMucGFnZXJDdXJyZW50UGFnZS50b1N0cmluZygpKSArIHBhcnNlRmxvYXQoY2hhbmdlQW1vdW50LnRvU3RyaW5nKCkpO1xuICAgICAgaWYgKHRoaXMucGFnZXJDdXJyZW50UGFnZSA8IDEpIHtcbiAgICAgICAgdGhpcy5wYWdlckN1cnJlbnRQYWdlID0gMTtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLnBhZ2VyQ3VycmVudFBhZ2UgPiB0aGlzLnBhZ2VyVG90YWwpIHtcbiAgICAgICAgdGhpcy5wYWdlckN1cnJlbnRQYWdlID0gdGhpcy5wYWdlclRvdGFsO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChvbGRQYWdlICE9PSB0aGlzLnBhZ2VyQ3VycmVudFBhZ2UpIHtcbiAgICAgIHRoaXMucGFnZUNoYW5nZWQuZW1pdCh0aGlzLnBhZ2VyQ3VycmVudFBhZ2UpO1xuICAgIH1cbiAgfVxuXG4gIG9uUmVmcmVzaCgpIHtcbiAgICB0aGlzLnJlZnJlc2hEYXRhLmVtaXQoKTtcbiAgfVxufVxuIl19