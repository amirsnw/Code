/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';
import { FieldBaseComponent } from '../../../base/field-base.component';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var TaminFieldEditableComponent = /** @class */ (function (_super) {
    tslib_1.__extends(TaminFieldEditableComponent, _super);
    function TaminFieldEditableComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.maxLength = Number.MAX_SAFE_INTEGER;
        _this.focus = new EventEmitter();
        _this.blur = new EventEmitter();
        _this.edit = new EventEmitter();
        return _this;
    }
    TaminFieldEditableComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tamin-field-editable',
                    template: "<div class=\"input-wrapper\">\n  <input\n    type=\"text\"\n    disabled = \"disabled\"\n    [attr.placeholder]=\"placeHolder\"\n    style=\"direction: ltr; padding-left: 35px;\"\n    class=\"tamin-form-control-input\"\n    [class.tamin-form-control-valid]=\"control.touched && control.valid\"\n    [class.tamin-form-control-invalid]=\"control.touched && !control.valid\"\n    #inputElement>\n  <span class=\"icon\" #icon>\n    <i\n      class=\"icon-pencil\"\n      style=\"font-size: 1.5em\"\n      (click)=\"edit.emit()\"\n      [class.tamin-form-control-valid-icon]=\"control.touched && control.valid\"\n      [class.tamin-form-control-invalid-icon]=\"control.touched && !control.valid\"\n      #iconElement></i>\n  </span>\n</div>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return TaminFieldEditableComponent; })),
                            multi: true
                        }
                    ],
                    styles: [".input-wrapper{position:relative}.icon{position:absolute;top:23%;left:5px;height:10px;margin-top:-5px;cursor:pointer}.item{padding:5px;cursor:pointer}.item:hover{background-color:silver}"]
                }] }
    ];
    TaminFieldEditableComponent.propDecorators = {
        maxLength: [{ type: Input }],
        focus: [{ type: Output }],
        blur: [{ type: Output }],
        edit: [{ type: Output }]
    };
    return TaminFieldEditableComponent;
}(FieldBaseComponent));
export { TaminFieldEditableComponent };
if (false) {
    /** @type {?} */
    TaminFieldEditableComponent.prototype.maxLength;
    /** @type {?} */
    TaminFieldEditableComponent.prototype.focus;
    /** @type {?} */
    TaminFieldEditableComponent.prototype.blur;
    /** @type {?} */
    TaminFieldEditableComponent.prototype.edit;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tZmllbGQtZWRpdGFibGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vdGFtaW4tZnJhbWV3b3JrLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvZmllbGRzL3RhbWluLWZpZWxkLWVkaXRhYmxlL3RhbWluLWZpZWxkLWVkaXRhYmxlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3pGLE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBQ3RFLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRWpEO0lBWWlELHVEQUFrQjtJQVpuRTtRQUFBLHFFQW1CQztRQUxVLGVBQVMsR0FBRyxNQUFNLENBQUMsZ0JBQWdCLENBQUM7UUFDbkMsV0FBSyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDM0IsVUFBSSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDMUIsVUFBSSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7O0lBRXRDLENBQUM7O2dCQW5CQSxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtvQkFDaEMsNnVCQUFvRDtvQkFFcEQsU0FBUyxFQUFFO3dCQUNUOzRCQUNFLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLFdBQVcsRUFBRSxVQUFVOzs7NEJBQUMsY0FBTSxPQUFBLDJCQUEyQixFQUEzQixDQUEyQixFQUFDOzRCQUMxRCxLQUFLLEVBQUUsSUFBSTt5QkFDWjtxQkFDRjs7aUJBQ0Y7Ozs0QkFHRSxLQUFLO3dCQUNMLE1BQU07dUJBQ04sTUFBTTt1QkFDTixNQUFNOztJQUVULGtDQUFDO0NBQUEsQUFuQkQsQ0FZaUQsa0JBQWtCLEdBT2xFO1NBUFksMkJBQTJCOzs7SUFFdEMsZ0RBQTZDOztJQUM3Qyw0Q0FBcUM7O0lBQ3JDLDJDQUFvQzs7SUFDcEMsMkNBQW9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgZm9yd2FyZFJlZiwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7RmllbGRCYXNlQ29tcG9uZW50fSBmcm9tICcuLi8uLi8uLi9iYXNlL2ZpZWxkLWJhc2UuY29tcG9uZW50JztcbmltcG9ydCB7TkdfVkFMVUVfQUNDRVNTT1J9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGFtaW4tZmllbGQtZWRpdGFibGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGFtaW4tZmllbGQtZWRpdGFibGUuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90YW1pbi1maWVsZC1lZGl0YWJsZS5jb21wb25lbnQuY3NzJ10sXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVGFtaW5GaWVsZEVkaXRhYmxlQ29tcG9uZW50KSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFRhbWluRmllbGRFZGl0YWJsZUNvbXBvbmVudCBleHRlbmRzIEZpZWxkQmFzZUNvbXBvbmVudCB7XG5cbiAgQElucHV0KCkgbWF4TGVuZ3RoID0gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVI7XG4gIEBPdXRwdXQoKSBmb2N1cyA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIGJsdXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBlZGl0ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG59XG4iXX0=