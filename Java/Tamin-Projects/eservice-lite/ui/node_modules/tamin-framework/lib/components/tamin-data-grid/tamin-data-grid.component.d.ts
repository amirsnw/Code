import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnInit } from '@angular/core';
import { TaminDataColumn } from '../../models/tamin-data-column.model';
import { TaminActionColumn } from '../../models/tamin-action-column.model';
import { GenericRestService } from '../../services/generic-rest-service/generic-rest.service';
import { TaminDataGridConfiguration } from '../../helpers/tamin.data.grid.configuration/tamin.data.grid.configuration';
import { TaminPersianService } from '../../services/persian-service/tamin-persian.service';
import { OverlayService } from '../../services/overlay/overlay.service';
import { BreakpointObserver } from '@angular/cdk/layout';
import { TaminRestService } from '../../services/tamin-rest-service/tamin-rest.service';
import { PersianNumberPipe } from '../../pipes/persian-number.pipe';
import { ConstantsService } from '../../services/constants.service';
export declare class TaminDataGridComponent implements OnInit, AfterViewInit {
    private genericRestService;
    private changeDetectorRef;
    private taminRestService;
    private taminPersianService;
    private persianNumberPipe;
    breakpointObserver: BreakpointObserver;
    constants: ConstantsService;
    private overlayService;
    configuration: TaminDataGridConfiguration;
    serviceUrl: string;
    visibleColumns: TaminDataColumn[] | object[];
    actionColumns: TaminActionColumn[] | object[];
    searchParams: any[];
    sortParams: any[];
    viewType: string;
    showActionColumn: boolean;
    actionColumnCaption: string;
    rowEditable: string;
    rowDeletable: string;
    multiSelectable: string;
    dataItems: any;
    selectedDataItem: any;
    selectedDataItems: any[];
    showFooter: string;
    showPager: boolean;
    pagerSize: number;
    id: string;
    loadDataOnInit: boolean;
    showLoadOverlay: boolean;
    showHover: boolean;
    pagerCurrentPage: number;
    errorMessage: string;
    allowBreakPoints: boolean;
    itemSelect: EventEmitter<any>;
    itemAction: EventEmitter<any>;
    beforeRefreshData: EventEmitter<any>;
    afterRefreshData: EventEmitter<any>;
    refreshDataError: EventEmitter<any>;
    gridContainer: ElementRef;
    renderMode: 'desktop' | 'mobile';
    hasError: boolean;
    sortColumnName: string;
    sortColumnMethod: 'ASC' | 'DESC';
    cellRenderer: (item: any, column: any) => any;
    actionRenderer: (item: any, actionCell: Array<TaminActionColumn>) => any;
    cellStyler: (item: any, column: any) => any;
    rowStyler: (item: any) => any;
    loading: boolean;
    breakPoints: Array<any>;
    totalPages: number;
    totalRows: number;
    private _overlay;
    constructor(genericRestService: GenericRestService<any>, changeDetectorRef: ChangeDetectorRef, taminRestService: TaminRestService, taminPersianService: TaminPersianService, persianNumberPipe: PersianNumberPipe, breakpointObserver: BreakpointObserver, constants: ConstantsService, overlayService: OverlayService);
    ngOnInit(): void;
    refreshData(showOverlay?: boolean): Promise<any>;
    onSelectItem(dataItem: any): void;
    onItemCheckBoxClick(dataItem: any, event: any): void;
    onActionClicked(dataItem: any, actionCell: TaminActionColumn): void;
    onPagerPageChanged(pagerCurrentPage: number): void;
    getDataItemString(dataItem: any, cell: TaminDataColumn, index: number): string;
    getDataItemAction(dataItem: any, cell: TaminDataColumn): string;
    private cellRendererSelector;
    generateContent(item: any, column: any, i: any): any;
    ngAfterViewInit(): void;
    onActionMenuItemClicked(event: any): void;
    getCellStylerResult(item: any, column: any): any;
    getRowStylerResult(item: any): any;
    actionRender(item: any, actionCell: Array<any>): any;
    onSort(column: TaminDataColumn): void;
}
