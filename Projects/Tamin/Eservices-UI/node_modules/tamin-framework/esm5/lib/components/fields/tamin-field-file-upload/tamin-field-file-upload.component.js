/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, EventEmitter, forwardRef, Input, Output, ViewChild } from '@angular/core';
import { FieldBaseComponent } from '../../../base/field-base.component';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var TaminFieldFileUploadComponent = /** @class */ (function (_super) {
    tslib_1.__extends(TaminFieldFileUploadComponent, _super);
    function TaminFieldFileUploadComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.maxLength = Number.MAX_SAFE_INTEGER;
        _this.focus = new EventEmitter();
        _this.blur = new EventEmitter();
        return _this;
    }
    /**
     * @return {?}
     */
    TaminFieldFileUploadComponent.prototype.onShowPicker = /**
     * @return {?}
     */
    function () {
        this.fileInput.nativeElement.click();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TaminFieldFileUploadComponent.prototype.changeFileUpload = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.inputElement.nativeElement.value = event.target.files[0].name;
        this.onChange(event.target.files[0]);
    };
    TaminFieldFileUploadComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tamin-field-file-upload',
                    template: "<div class=\"input-wrapper\">\n  <input\n    id=\"textbox\"\n    style=\"padding-left: 35px;\"\n    type=\"text\"\n    [disabled]=\"control.disabled\"\n    class=\"tamin-form-control-input\"\n    [class.tamin-form-control-valid]=\"control.touched && control.valid\"\n    [class.tamin-form-control-invalid]=\"control.touched && !control.valid\"\n    #inputElement>\n  <span class=\"icon\" #icon>\n    <i\n      class=\"icon-folder-empty\"\n      style=\"font-size: 1.5em\"\n      (click)=\"onShowPicker()\"\n      [class.tamin-form-control-valid-icon]=\"control.touched && control.valid\"\n      [class.tamin-form-control-invalid-icon]=\"control.touched && !control.valid\"\n      #iconElement></i>\n  </span>\n</div>\n\n<input type=\"file\" #fileInput style=\"display:none\" (change)=\"changeFileUpload($event)\" [attr.accept]=\"accept\"/>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return TaminFieldFileUploadComponent; })),
                            multi: true
                        }
                    ],
                    styles: [".input-wrapper{position:relative}.icon{position:absolute;top:23%;left:5px;height:10px;margin-top:-5px;cursor:pointer}.item{padding:5px;cursor:pointer}.item:hover{background-color:silver}"]
                }] }
    ];
    TaminFieldFileUploadComponent.propDecorators = {
        maxLength: [{ type: Input }],
        accept: [{ type: Input }],
        focus: [{ type: Output }],
        blur: [{ type: Output }],
        fileInput: [{ type: ViewChild, args: ['fileInput',] }]
    };
    return TaminFieldFileUploadComponent;
}(FieldBaseComponent));
export { TaminFieldFileUploadComponent };
if (false) {
    /** @type {?} */
    TaminFieldFileUploadComponent.prototype.maxLength;
    /** @type {?} */
    TaminFieldFileUploadComponent.prototype.accept;
    /** @type {?} */
    TaminFieldFileUploadComponent.prototype.focus;
    /** @type {?} */
    TaminFieldFileUploadComponent.prototype.blur;
    /** @type {?} */
    TaminFieldFileUploadComponent.prototype.fileInput;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tZmllbGQtZmlsZS11cGxvYWQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vdGFtaW4tZnJhbWV3b3JrLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvZmllbGRzL3RhbWluLWZpZWxkLWZpbGUtdXBsb2FkL3RhbWluLWZpZWxkLWZpbGUtdXBsb2FkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEgsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFDdEUsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFakQ7SUFZbUQseURBQWtCO0lBWnJFO1FBQUEscUVBNEJDO1FBZFUsZUFBUyxHQUFHLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztRQUVuQyxXQUFLLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUMzQixVQUFJLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQzs7SUFXdEMsQ0FBQzs7OztJQVJDLG9EQUFZOzs7SUFBWjtRQUNFLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3ZDLENBQUM7Ozs7O0lBRUQsd0RBQWdCOzs7O0lBQWhCLFVBQWlCLEtBQUs7UUFDcEIsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUNuRSxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdkMsQ0FBQzs7Z0JBM0JGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxxMUJBQXVEO29CQUV2RCxTQUFTLEVBQUU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLGlCQUFpQjs0QkFDMUIsV0FBVyxFQUFFLFVBQVU7Ozs0QkFBQyxjQUFNLE9BQUEsNkJBQTZCLEVBQTdCLENBQTZCLEVBQUM7NEJBQzVELEtBQUssRUFBRSxJQUFJO3lCQUNaO3FCQUNGOztpQkFDRjs7OzRCQUdFLEtBQUs7eUJBQ0wsS0FBSzt3QkFDTCxNQUFNO3VCQUNOLE1BQU07NEJBQ04sU0FBUyxTQUFDLFdBQVc7O0lBVXhCLG9DQUFDO0NBQUEsQUE1QkQsQ0FZbUQsa0JBQWtCLEdBZ0JwRTtTQWhCWSw2QkFBNkI7OztJQUV4QyxrREFBNkM7O0lBQzdDLCtDQUF3Qjs7SUFDeEIsOENBQXFDOztJQUNyQyw2Q0FBb0M7O0lBQ3BDLGtEQUE4QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIGZvcndhcmRSZWYsIElucHV0LCBPbkluaXQsIE91dHB1dCwgVmlld0NoaWxkfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7RmllbGRCYXNlQ29tcG9uZW50fSBmcm9tICcuLi8uLi8uLi9iYXNlL2ZpZWxkLWJhc2UuY29tcG9uZW50JztcbmltcG9ydCB7TkdfVkFMVUVfQUNDRVNTT1J9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGFtaW4tZmllbGQtZmlsZS11cGxvYWQnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGFtaW4tZmllbGQtZmlsZS11cGxvYWQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90YW1pbi1maWVsZC1maWxlLXVwbG9hZC5jb21wb25lbnQuc2NzcyddLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFRhbWluRmllbGRGaWxlVXBsb2FkQ29tcG9uZW50KSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFRhbWluRmllbGRGaWxlVXBsb2FkQ29tcG9uZW50IGV4dGVuZHMgRmllbGRCYXNlQ29tcG9uZW50IHtcblxuICBASW5wdXQoKSBtYXhMZW5ndGggPSBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUjtcbiAgQElucHV0KCkgYWNjZXB0OiBzdHJpbmc7XG4gIEBPdXRwdXQoKSBmb2N1cyA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIGJsdXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBWaWV3Q2hpbGQoJ2ZpbGVJbnB1dCcpIGZpbGVJbnB1dDogRWxlbWVudFJlZjtcblxuICBvblNob3dQaWNrZXIoKSB7XG4gICAgdGhpcy5maWxlSW5wdXQubmF0aXZlRWxlbWVudC5jbGljaygpO1xuICB9XG5cbiAgY2hhbmdlRmlsZVVwbG9hZChldmVudCkge1xuICAgIHRoaXMuaW5wdXRFbGVtZW50Lm5hdGl2ZUVsZW1lbnQudmFsdWUgPSBldmVudC50YXJnZXQuZmlsZXNbMF0ubmFtZTtcbiAgICB0aGlzLm9uQ2hhbmdlKGV2ZW50LnRhcmdldC5maWxlc1swXSk7XG4gIH1cbn1cbiJdfQ==