/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { GenericRestService } from '../../../services/generic-rest-service/generic-rest.service';
import { Subscription, timer } from 'rxjs';
var MonitoringComponent = /** @class */ (function () {
    function MonitoringComponent(genericRestService) {
        this.genericRestService = genericRestService;
        this.refreshInterval = 60000;
        this.normalWaitingTime = 10000;
        this.warningWaitingTime = 30000;
        this.dangerWaitingTime = 50000;
        this.timeout = 60000;
        this.started = new EventEmitter();
        this.stopped = new EventEmitter();
        this.alive = false;
        this.serviceTotalRowsCollected = new Map();
        this.serviceWaitingTimes = new Map();
        this.serviceStartTimes = new Map();
        this.dbWaitingTimes = new Map();
        this.dbStartTimes = new Map();
        this.statusColor = '#bbbbbb';
        this.dbChartLabels = [];
        this.dbChartData = [];
        this.dbChartType = 'bar';
        this.dbChartOptions = {};
        this.serviceChartLabels = ['ResponseTime', 'TimeoutRange'];
        this.serviceChartData = [];
        this.serviceChartType = 'pie';
        this._subscription = new Subscription();
        this.dbChartOptions = {
            scales: {
                yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
            }
        };
    }
    /**
     * @return {?}
     */
    MonitoringComponent.prototype.startTimer = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.alive = true;
        this._subscription = timer(1000, this.refreshInterval).subscribe((/**
         * @return {?}
         */
        function () {
            _this.refreshData();
        }));
        this.started.emit();
    };
    /**
     * @return {?}
     */
    MonitoringComponent.prototype.stopTimer = /**
     * @return {?}
     */
    function () {
        if (this.alive) {
            this.alive = false;
            this._subscription.unsubscribe();
        }
        this.stopped.emit();
        this.statusColor = '#bbbbbb';
    };
    /**
     * @return {?}
     */
    MonitoringComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.serviceUrls) {
            for (var index = 0; index < this.serviceUrls.length; index++) {
                this.serviceStartTimes.set(this.serviceUrls[index], 0);
                this.serviceWaitingTimes.set(this.serviceUrls[index], 0);
                this.serviceTotalRowsCollected.set(this.serviceUrls[index], 0);
                this.serviceChartData.push({ data: [0, this.timeout], label: this.serviceUrls[index] });
            }
        }
        else {
            this.serviceChartData.push({ data: [0, 0], label: '' });
        }
        this.dbChartData.push({ data: [0, 0], label: '' });
        this.startTimer();
    };
    /**
     * @return {?}
     */
    MonitoringComponent.prototype.refreshData = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.serviceUrls.forEach((/**
         * @param {?} serviceUrl
         * @return {?}
         */
        function (serviceUrl) {
            _this.serviceStartTimes.set(serviceUrl, Date.now());
            _this.genericRestService.restUrl = serviceUrl;
            _this.genericRestService.timeout = _this.timeout;
            _this.genericRestService.getPagedObject(true, 0, 10, [], [])
                .then((/**
             * @param {?} objectResultWrapper
             * @return {?}
             */
            function (objectResultWrapper) {
                _this.serviceWaitingTimes.set(serviceUrl, Date.now() - _this.serviceStartTimes.get(serviceUrl));
                if (_this.serviceWaitingTimes.get(serviceUrl) <= _this.normalWaitingTime) {
                    _this.statusColor = 'green';
                }
                if (_this.serviceWaitingTimes.get(serviceUrl) > _this.normalWaitingTime && _this.serviceWaitingTimes.get(serviceUrl) <= _this.warningWaitingTime) {
                    _this.statusColor = 'green';
                }
                if (_this.serviceWaitingTimes.get(serviceUrl) > _this.warningWaitingTime) {
                    _this.statusColor = '#ff9900';
                }
                if (_this.serviceWaitingTimes.get(serviceUrl) > _this.dangerWaitingTime) {
                    _this.statusColor = 'red';
                }
                _this.refreshServiceChart();
            }))
                .catch((/**
             * @param {?} error
             * @return {?}
             */
            function (error) {
                _this.serviceWaitingTimes.set(serviceUrl, _this.timeout);
                _this.statusColor = 'red';
                _this.refreshServiceChart();
            }));
        }));
    };
    /**
     * @return {?}
     */
    MonitoringComponent.prototype.refreshServiceChart = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.serviceChartData = [];
        this.serviceUrls.forEach((/**
         * @param {?} serviceUrl
         * @return {?}
         */
        function (serviceUrl) {
            /** @type {?} */
            var newValue = _this.timeout - _this.serviceWaitingTimes.get(serviceUrl);
            if (newValue < 0) {
                newValue = 0;
            }
            _this.serviceChartData.push({ data: [_this.serviceWaitingTimes.get(serviceUrl), newValue], label: serviceUrl });
        }));
    };
    /**
     * @return {?}
     */
    MonitoringComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._subscription.unsubscribe();
    };
    /**
     * @param {?} e
     * @return {?}
     */
    MonitoringComponent.prototype.serviceChartClicked = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
    };
    /**
     * @param {?} e
     * @return {?}
     */
    MonitoringComponent.prototype.serviceChartHovered = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
    };
    /**
     * @param {?} e
     * @return {?}
     */
    MonitoringComponent.prototype.dbChartClicked = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
    };
    /**
     * @param {?} e
     * @return {?}
     */
    MonitoringComponent.prototype.dbChartHovered = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
    };
    MonitoringComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tamin-monitoring',
                    template: "<div class=\"mnt-container\">\n  <div class=\"mnt-item\">\n    <div class=\"mnt-title\" [style.background-color]=\"this.statusColor\">\n      <div style=\"float: right\">\n        <i\n          [class.icon-cog-alt]=\"type == 'service'\"\n          [class.icon-database]=\"type == 'database'\"\n        ></i>\n        <span style=\"margin-right: 5px;\">{{title}}</span>\n      </div>\n      <div style=\"float: left\">\n        <i (click)=\"alive ? stopTimer() : startTimer()\"\n           [style.color]=\"alive ? 'white' : 'red'\"\n           [class.icon-stop]=\"!alive\"\n           [class.icon-play]=\"alive\"></i>\n      </div>\n    </div>\n    <div [style.visibility]=\"alive ? 'visible' : 'hidden'\">\n      <tamin-chart\n        lib=\"assets/vendor/chart.min.js\"\n        [datasets]=\"serviceChartData\"\n        [labels]=\"serviceChartLabels\"\n        [chartType]=\"serviceChartType\"\n        (chartHover)=\"serviceChartHovered($event)\"\n        (chartClick)=\"serviceChartClicked($event)\">\n      </tamin-chart>\n    </div>\n    <div class=\"mnt-item\" *ngIf=\"viewType == 'full'\">\n      <div class=\"part-title\">\n        \u0627\u0637\u0644\u0627\u0639\u0627\u062A \u062A\u06A9\u0645\u06CC\u0644\u06CC\n      </div>\n      <div *ngFor=\"let serviceUrl of serviceUrls\" style=\"font-size: 1.0em;\">\n        <span>{{type == 'service' ? '\u0645\u0633\u06CC\u0631' :'\u06A9\u0648\u0626\u0631\u06CC'}}</span>\n        <span style=\"font-size: 0.7em;\">{{serviceUrl}}</span>\n        <br/>\n        \u0645\u062F\u062A \u0632\u0645\u0627\u0646 \u067E\u0627\u0633\u062E\u06AF\u0648\u06CC\u06CC : <span\n        [style.color]=\"statusColor\">{{serviceWaitingTimes.get(serviceUrl)}} \u0645\u06CC\u0644\u06CC \u062B\u0627\u0646\u06CC\u0647</span>\n        <hr/>\n      </div>\n    </div>\n    <div class=\"mnt-item\" *ngIf=\"viewType == 'full'\">\n      <div class=\"part-title\">\n        \u062A\u0646\u0638\u06CC\u0645\u0627\u062A\n      </div>\n      <span style=\"font-size: 0.7em; color: green;\">\u0645\u062F\u062A \u0632\u0645\u0627\u0646 \u067E\u0627\u0633\u062E\u06AF\u0648\u06CC\u06CC \u0646\u0631\u0645\u0627\u0644 : {{normalWaitingTime}} \u0645\u06CC\u0644\u06CC \u062B\u0627\u0646\u06CC\u0647</span>\n      <br/>\n      <span style=\"font-size: 0.7em; color: orange;\">\u0645\u062F\u062A \u0632\u0645\u0627\u0646 \u067E\u0627\u0633\u062E\u06AF\u0648\u06CC\u06CC \u0627\u062E\u0637\u0627\u0631 : {{warningWaitingTime}} \u0645\u06CC\u0644\u06CC \u062B\u0627\u0646\u06CC\u0647</span>\n      <br/>\n      <span style=\"font-size: 0.7em; color: red;\">\u0645\u062F\u062A \u0632\u0645\u0627\u0646 \u067E\u0627\u0633\u062E\u06AF\u0648\u06CC\u06CC \u0628\u062D\u0631\u0627\u0646\u06CC : {{dangerWaitingTime}} \u0645\u06CC\u0644\u06CC \u062B\u0627\u0646\u06CC\u0647</span>\n      <br/>\n      <span style=\"font-size: 0.7em;\">\u0645\u062F\u062A \u0632\u0645\u0627\u0646 \u062A\u0627\u06CC\u0645 \u0627\u0648\u062A : {{timeout}} \u0645\u06CC\u0644\u06CC \u062B\u0627\u0646\u06CC\u0647</span>\n      <br/>\n      <span style=\"font-size: 0.7em;\">\u0645\u062F\u062A \u0632\u0645\u0627\u0646 \u062A\u0644\u0627\u0634 \u0645\u062C\u062F\u062F : {{refreshInterval}} \u0645\u06CC\u0644\u06CC \u062B\u0627\u0646\u06CC\u0647</span>\n    </div>\n  </div>\n</div>\n\n<!--\n<div class=\"row\">\n  <div class=\"col-6\">\n    <div style=\"border: solid 1px #aaa; margin:1px; padding: 5px;\">\n      <div class=\"part-title\">\n        \u0648\u0636\u0639\u06CC\u062A \u0633\u0631\u0648\u06CC\u0633\n      </div>\n      <tamin-chart\n        lib=\"assets/vendor/chart.min.js\"\n        [datasets]=\"serviceChartData\"\n        [labels]=\"serviceChartLabels\"\n        [chartType]=\"serviceChartType\"\n        (chartHover)=\"serviceChartHovered($event)\"\n        (chartClick)=\"serviceChartClicked($event)\">\n      </tamin-chart>\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div style=\"border: solid 1px #aaa; margin:1px; padding: 5px;\">\n      <div class=\"part-title\">\n        \u0648\u0636\u0639\u06CC\u062A \u067E\u0627\u06CC\u06AF\u0627\u0647 \u062F\u0627\u062F\u0647\n      </div>\n      <tamin-chart\n        lib=\"assets/vendor/chart.min.js\"\n        [datasets]=\"dbChartData\"\n        [labels]=\"dbChartLabels\"\n        [chartType]=\"dbChartType\"\n        [options]=\"dbChartOptions\"\n        (chartHover)=\"dbChartHovered($event)\"\n        (chartClick)=\"dbChartClicked($event)\">\n      </tamin-chart>\n    </div>\n  </div>\n  <div class=\"col-12 \" *ngIf=\"viewType === 'full'\">\n    <div style=\"border: solid 1px #aaa; margin:1px; padding: 5px;\">\n      <div class=\"part-title\">\n        \u0627\u0637\u0644\u0627\u0639\u0627\u062A \u062A\u06A9\u0645\u06CC\u0644\u06CC\n      </div>\n      <div *ngFor=\"let serviceUrl of serviceUrls\" style=\"font-size: 1.0em;\">\n        \u0645\u0633\u06CC\u0631 \u0633\u0631\u0648\u06CC\u0633 : <span style=\"font-size: 0.7em;\">{{serviceUrl}}</span>\n        <br/>\n        \u0645\u062F\u062A \u0632\u0645\u0627\u0646 \u067E\u0627\u0633\u062E\u06AF\u0648\u06CC\u06CC \u0633\u0631\u0648\u06CC\u0633 : <span\n        [style.color]=\"statusColor\">{{serviceWaitingTimes.get(serviceUrl)}} \u0645\u06CC\u0644\u06CC \u062B\u0627\u0646\u06CC\u0647</span>\n        <hr/>\n      </div>\n      <div *ngFor=\"let query of dbQueries\" style=\"font-size: 1.0em;\">\n        \u06A9\u0648\u0626\u0631\u06CC \u062F\u06CC\u062A\u0627\u0628\u06CC\u0633 : <span style=\"font-size: 0.7em;\">{{query}}</span>\n        <br/>\n        \u0645\u062F\u062A \u0632\u0645\u0627\u0646 \u067E\u0627\u0633\u062E\u06AF\u0648\u06CC\u06CC \u062F\u06CC\u062A\u0627\u0628\u06CC\u0633 : <span [style.color]=\"statusColor\">{{dbWaitingTimes.get(query)}} \u0645\u06CC\u0644\u06CC \u062B\u0627\u0646\u06CC\u0647</span>\n        <hr/>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-12 col-s-12\" *ngIf=\"viewType === 'full'\">\n    <div style=\"border: solid 1px #aaa; margin:1px; padding: 5px;\">\n      <div class=\"part-title\">\n        \u062A\u0646\u0638\u06CC\u0645\u0627\u062A\n      </div>\n      <span style=\"font-size: 0.7em; color: green;\">\u0645\u062F\u062A \u0632\u0645\u0627\u0646 \u067E\u0627\u0633\u062E\u06AF\u0648\u06CC\u06CC \u0646\u0631\u0645\u0627\u0644 : {{normalWaitingTime}} \u0645\u06CC\u0644\u06CC \u062B\u0627\u0646\u06CC\u0647</span>\n      <br/>\n      <span style=\"font-size: 0.7em; color: orange;\">\u0645\u062F\u062A \u0632\u0645\u0627\u0646 \u067E\u0627\u0633\u062E\u06AF\u0648\u06CC\u06CC \u0627\u062E\u0637\u0627\u0631 : {{warningWaitingTime}} \u0645\u06CC\u0644\u06CC \u062B\u0627\u0646\u06CC\u0647</span>\n      <br/>\n      <span style=\"font-size: 0.7em; color: red;\">\u0645\u062F\u062A \u0632\u0645\u0627\u0646 \u067E\u0627\u0633\u062E\u06AF\u0648\u06CC\u06CC \u0628\u062D\u0631\u0627\u0646\u06CC : {{dangerWaitingTime}} \u0645\u06CC\u0644\u06CC \u062B\u0627\u0646\u06CC\u0647</span>\n      <br/>\n      <span style=\"font-size: 0.7em;\">\u0645\u062F\u062A \u0632\u0645\u0627\u0646 \u062A\u0627\u06CC\u0645 \u0627\u0648\u062A : {{timeout}} \u0645\u06CC\u0644\u06CC \u062B\u0627\u0646\u06CC\u0647</span>\n      <br/>\n      <span style=\"font-size: 0.7em;\">\u0645\u062F\u062A \u0632\u0645\u0627\u0646 \u062A\u0644\u0627\u0634 \u0645\u062C\u062F\u062F : {{refreshInterval}} \u0645\u06CC\u0644\u06CC \u062B\u0627\u0646\u06CC\u0647</span>\n    </div>\n  </div>\n</div>\n-->\n",
                    styles: [".mnt-container{display:flex;flex-wrap:wrap;align-content:space-around;align-items:stretch}.mnt-item{border:1px solid #aaa;margin:1px;padding:5px}.mnt-title{overflow:hidden;margin:-4px;padding:5px;color:#fff}.blurred{-webkit-filter:blur(10px);filter:blur(10px)}"]
                }] }
    ];
    /** @nocollapse */
    MonitoringComponent.ctorParameters = function () { return [
        { type: GenericRestService }
    ]; };
    MonitoringComponent.propDecorators = {
        serviceUrls: [{ type: Input }],
        refreshInterval: [{ type: Input }],
        id: [{ type: Input }],
        type: [{ type: Input }],
        title: [{ type: Input }],
        normalWaitingTime: [{ type: Input }],
        warningWaitingTime: [{ type: Input }],
        dangerWaitingTime: [{ type: Input }],
        timeout: [{ type: Input }],
        viewType: [{ type: Input }],
        started: [{ type: Output }],
        stopped: [{ type: Output }]
    };
    return MonitoringComponent;
}());
export { MonitoringComponent };
if (false) {
    /** @type {?} */
    MonitoringComponent.prototype.serviceUrls;
    /** @type {?} */
    MonitoringComponent.prototype.refreshInterval;
    /** @type {?} */
    MonitoringComponent.prototype.id;
    /** @type {?} */
    MonitoringComponent.prototype.type;
    /** @type {?} */
    MonitoringComponent.prototype.title;
    /** @type {?} */
    MonitoringComponent.prototype.normalWaitingTime;
    /** @type {?} */
    MonitoringComponent.prototype.warningWaitingTime;
    /** @type {?} */
    MonitoringComponent.prototype.dangerWaitingTime;
    /** @type {?} */
    MonitoringComponent.prototype.timeout;
    /** @type {?} */
    MonitoringComponent.prototype.viewType;
    /** @type {?} */
    MonitoringComponent.prototype.started;
    /** @type {?} */
    MonitoringComponent.prototype.stopped;
    /** @type {?} */
    MonitoringComponent.prototype.lastStatus;
    /** @type {?} */
    MonitoringComponent.prototype.alive;
    /** @type {?} */
    MonitoringComponent.prototype.serviceTotalRowsCollected;
    /** @type {?} */
    MonitoringComponent.prototype.serviceWaitingTimes;
    /** @type {?} */
    MonitoringComponent.prototype.serviceStartTimes;
    /** @type {?} */
    MonitoringComponent.prototype.dbWaitingTimes;
    /** @type {?} */
    MonitoringComponent.prototype.dbStartTimes;
    /** @type {?} */
    MonitoringComponent.prototype.statusColor;
    /** @type {?} */
    MonitoringComponent.prototype.dbChartLabels;
    /** @type {?} */
    MonitoringComponent.prototype.dbChartData;
    /** @type {?} */
    MonitoringComponent.prototype.dbChartType;
    /** @type {?} */
    MonitoringComponent.prototype.dbChartOptions;
    /** @type {?} */
    MonitoringComponent.prototype.serviceChartLabels;
    /** @type {?} */
    MonitoringComponent.prototype.serviceChartData;
    /** @type {?} */
    MonitoringComponent.prototype.serviceChartType;
    /**
     * @type {?}
     * @private
     */
    MonitoringComponent.prototype._subscription;
    /**
     * @type {?}
     * @private
     */
    MonitoringComponent.prototype.genericRestService;
}
//# sourceMappingURL=data:application/json;base64,