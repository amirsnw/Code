/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';
import { TaminLazyLoadService } from '../../services/tamin-lazy-load/tamin-lazy-load.service';
import { Subscription } from 'rxjs';
import { TaminModalComponent } from '../tamin-modal/tamin-modal.component';
var ImageEditorComponent = /** @class */ (function () {
    function ImageEditorComponent(taminLazyLoadService, changeDetectorRef) {
        this.taminLazyLoadService = taminLazyLoadService;
        this.changeDetectorRef = changeDetectorRef;
        this._subscription = new Subscription();
    }
    /**
     * @return {?}
     */
    ImageEditorComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    ImageEditorComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    ImageEditorComponent.prototype.getImage = /**
     * @return {?}
     */
    function () {
        this.cropper.getCroppedCanvas().toBlob((/**
         * @param {?} blob
         * @return {?}
         */
        function (blob) {
            /** @type {?} */
            var size = Math.ceil(blob.size / 1024).toString() + ' KB';
            alert(size);
        }));
    };
    /**
     * @param {?} image
     * @return {?}
     */
    ImageEditorComponent.prototype.open = /**
     * @param {?} image
     * @return {?}
     */
    function (image) {
        var _this = this;
        /** @type {?} */
        var me = this;
        this._subscription.add(this.taminLazyLoadService.loadJs('assets/cropperjs/cropper.js').subscribe((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            _this._subscription.add(_this.taminLazyLoadService.loadCss('assets/cropperjs/cropper.css').subscribe((/**
             * @param {?} value1
             * @return {?}
             */
            function (value1) {
                _this.thModal.show();
                if (_this.cropper) {
                    _this.cropper.clear();
                    _this.cropper.replace(image);
                }
                else {
                    _this.image.nativeElement.src = image;
                    _this.cropper = new Cropper(_this.image.nativeElement, {
                        aspectRatio: 16 / 9,
                        preview: me.imagePreview.nativeElement,
                        crop: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) {
                        }),
                    });
                }
            })));
        })));
    };
    /**
     * @return {?}
     */
    ImageEditorComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._subscription.unsubscribe();
    };
    ImageEditorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tamin-image-editor',
                    template: "<tamin-modal #thModal>\r\n  <div class=\"row\" style=\"direction: ltr\">\r\n    <div class=\"col-3\">\r\n      <div #imagePreview class=\"image-preview\"></div>\r\n      <table class=\"table-button\" cellpadding=\"0\" cellspacing=\"0\">\r\n        <tr>\r\n          <td (click)=\"cropper.move(-10,0)\"><i class=\"icon-left-big\"></i></td>\r\n          <td (click)=\"cropper.move(10,0)\"><i class=\"icon-right-big\"></i></td>\r\n          <td (click)=\"cropper.move(0,-10)\"><i class=\"icon-up-big\"></i></td>\r\n          <td (click)=\"cropper.move(0,10)\"><i class=\"icon-down-big\"></i></td>\r\n        </tr>\r\n      </table>\r\n      <table class=\"table-button\" cellpadding=\"0\" cellspacing=\"0\">\r\n        <tr>\r\n          <td (click)=\"cropper.rotate(-90)\"><i class=\"icon-cw\"></i></td>\r\n          <td (click)=\"cropper.rotate(90)\"><i class=\"icon-ccw\"></i></td>\r\n        </tr>\r\n      </table>\r\n      <table class=\"table-button\" cellpadding=\"0\" cellspacing=\"0\">\r\n        <tr>\r\n          <td (click)=\"cropper.zoom(-0.1)\"><i class=\"icon-zoom-out\"></i></td>\r\n          <td (click)=\"cropper.zoom(0.1)\"><i class=\"icon-zoom-in\"></i></td>\r\n        </tr>\r\n      </table>\r\n      <table class=\"table-button\" cellpadding=\"0\" cellspacing=\"0\">\r\n        <tr>\r\n          <td (click)=\"cropper.reset()\"><i class=\"icon-arrows-cw\"></i></td>\r\n        </tr>\r\n      </table>\r\n      <button (click)=\"getImage()\">Get Image</button>\r\n    </div>\r\n    <div class=\"col-9\" style=\"direction: ltr\">\r\n      <div style=\"width:100%; height: 500px\">\r\n        <img #image style=\"border: solid 1px #cacaca;\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</tamin-modal>\r\n",
                    styles: [".col-1,.col-10,.col-11,.col-12,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9{padding:5px}.image-preview{overflow:hidden;width:256px;height:144px;border:1px solid #000}.image-preview>img{max-width:100%}.table-button{margin:5px;border-collapse:collapse}.table-button td{border:1px solid #007bff;background-color:#007bff;color:#fff;padding:5px;cursor:pointer}.table-button td:hover{border:1px solid #0062cc;background-color:#0062cc}"]
                }] }
    ];
    /** @nocollapse */
    ImageEditorComponent.ctorParameters = function () { return [
        { type: TaminLazyLoadService },
        { type: ChangeDetectorRef }
    ]; };
    ImageEditorComponent.propDecorators = {
        image: [{ type: ViewChild, args: ['image',] }],
        thModal: [{ type: ViewChild, args: ['thModal',] }],
        imagePreview: [{ type: ViewChild, args: ['imagePreview',] }]
    };
    return ImageEditorComponent;
}());
export { ImageEditorComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ImageEditorComponent.prototype._subscription;
    /** @type {?} */
    ImageEditorComponent.prototype.image;
    /** @type {?} */
    ImageEditorComponent.prototype.thModal;
    /** @type {?} */
    ImageEditorComponent.prototype.imagePreview;
    /** @type {?} */
    ImageEditorComponent.prototype.cropper;
    /**
     * @type {?}
     * @private
     */
    ImageEditorComponent.prototype.taminLazyLoadService;
    /**
     * @type {?}
     * @private
     */
    ImageEditorComponent.prototype.changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2UtZWRpdG9yLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RhbWluLWZyYW1ld29yay8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2ltYWdlLWVkaXRvci9pbWFnZS1lZGl0b3IuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQWdCLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQXFCLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNwSCxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSx3REFBd0QsQ0FBQztBQUM1RixPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBQ2xDLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLHNDQUFzQyxDQUFDO0FBSXpFO0lBYUUsOEJBQ1Usb0JBQTBDLEVBQzFDLGlCQUFvQztRQURwQyx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQXNCO1FBQzFDLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFSdEMsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBUzNDLENBQUM7Ozs7SUFFRCx1Q0FBUTs7O0lBQVI7SUFDQSxDQUFDOzs7O0lBRUQsOENBQWU7OztJQUFmO0lBQ0EsQ0FBQzs7OztJQUVELHVDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxNQUFNOzs7O1FBQUMsVUFBQyxJQUFJOztnQkFDcEMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsQ0FBQyxRQUFRLEVBQUUsR0FBRyxLQUFLO1lBQzNELEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNkLENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Ozs7SUFFRCxtQ0FBSTs7OztJQUFKLFVBQUssS0FBSztRQUFWLGlCQXVCQzs7WUF0Qk8sRUFBRSxHQUFHLElBQUk7UUFFZixJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsTUFBTSxDQUFDLDZCQUE2QixDQUFDLENBQUMsU0FBUzs7OztRQUFDLFVBQUEsS0FBSztZQUNsRyxLQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FDcEIsS0FBSSxDQUFDLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDLFNBQVM7Ozs7WUFBQyxVQUFBLE1BQU07Z0JBQ2hGLEtBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7Z0JBQ3BCLElBQUksS0FBSSxDQUFDLE9BQU8sRUFBRTtvQkFDaEIsS0FBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQztvQkFDckIsS0FBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7aUJBQzdCO3FCQUFNO29CQUNMLEtBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUM7b0JBQ3JDLEtBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxPQUFPLENBQUMsS0FBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLEVBQUU7d0JBQ25ELFdBQVcsRUFBRSxFQUFFLEdBQUcsQ0FBQzt3QkFDbkIsT0FBTyxFQUFFLEVBQUUsQ0FBQyxZQUFZLENBQUMsYUFBYTt3QkFDdEMsSUFBSTs7Ozt3QkFBRSxVQUFVLENBQUM7d0JBQ2pCLENBQUMsQ0FBQTtxQkFDRixDQUFDLENBQUM7aUJBQ0o7WUFDSCxDQUFDLEVBQUMsQ0FDSCxDQUFDO1FBQ0osQ0FBQyxFQUFDLENBQ0gsQ0FBQztJQUNKLENBQUM7Ozs7SUFFRCwwQ0FBVzs7O0lBQVg7UUFDRSxJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ25DLENBQUM7O2dCQTFERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsdXNEQUE0Qzs7aUJBRTdDOzs7O2dCQVZPLG9CQUFvQjtnQkFETCxpQkFBaUI7Ozt3QkFlckMsU0FBUyxTQUFDLE9BQU87MEJBQ2pCLFNBQVMsU0FBQyxTQUFTOytCQUNuQixTQUFTLFNBQUMsY0FBYzs7SUFrRDNCLDJCQUFDO0NBQUEsQUE1REQsSUE0REM7U0F2RFksb0JBQW9COzs7Ozs7SUFFL0IsNkNBQTJDOztJQUMzQyxxQ0FBc0M7O0lBQ3RDLHVDQUFtRDs7SUFDbkQsNENBQW9EOztJQUNwRCx1Q0FBYTs7Ozs7SUFHWCxvREFBa0Q7Ozs7O0lBQ2xELGlEQUE0QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QWZ0ZXJWaWV3SW5pdCwgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgT25EZXN0cm95LCBPbkluaXQsIFZpZXdDaGlsZH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1RhbWluTGF6eUxvYWRTZXJ2aWNlfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy90YW1pbi1sYXp5LWxvYWQvdGFtaW4tbGF6eS1sb2FkLnNlcnZpY2UnO1xuaW1wb3J0IHtTdWJzY3JpcHRpb259IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtUYW1pbk1vZGFsQ29tcG9uZW50fSBmcm9tICcuLi90YW1pbi1tb2RhbC90YW1pbi1tb2RhbC5jb21wb25lbnQnO1xuXG5kZWNsYXJlIGxldCBDcm9wcGVyOiBhbnk7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhbWluLWltYWdlLWVkaXRvcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9pbWFnZS1lZGl0b3IuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9pbWFnZS1lZGl0b3IuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBJbWFnZUVkaXRvckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95IHtcblxuICBwcml2YXRlIF9zdWJzY3JpcHRpb24gPSBuZXcgU3Vic2NyaXB0aW9uKCk7XG4gIEBWaWV3Q2hpbGQoJ2ltYWdlJykgaW1hZ2U6IEVsZW1lbnRSZWY7XG4gIEBWaWV3Q2hpbGQoJ3RoTW9kYWwnKSB0aE1vZGFsOiBUYW1pbk1vZGFsQ29tcG9uZW50O1xuICBAVmlld0NoaWxkKCdpbWFnZVByZXZpZXcnKSBpbWFnZVByZXZpZXc6IEVsZW1lbnRSZWY7XG4gIGNyb3BwZXI6IGFueTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHRhbWluTGF6eUxvYWRTZXJ2aWNlOiBUYW1pbkxhenlMb2FkU2VydmljZSxcbiAgICBwcml2YXRlIGNoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZikge1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gIH1cblxuICBnZXRJbWFnZSgpOiBhbnkge1xuICAgIHRoaXMuY3JvcHBlci5nZXRDcm9wcGVkQ2FudmFzKCkudG9CbG9iKChibG9iKSA9PiB7XG4gICAgICBjb25zdCBzaXplID0gTWF0aC5jZWlsKGJsb2Iuc2l6ZSAvIDEwMjQpLnRvU3RyaW5nKCkgKyAnIEtCJztcbiAgICAgIGFsZXJ0KHNpemUpO1xuICAgIH0pO1xuICB9XG5cbiAgb3BlbihpbWFnZSkge1xuICAgIGNvbnN0IG1lID0gdGhpcztcblxuICAgIHRoaXMuX3N1YnNjcmlwdGlvbi5hZGQodGhpcy50YW1pbkxhenlMb2FkU2VydmljZS5sb2FkSnMoJ2Fzc2V0cy9jcm9wcGVyanMvY3JvcHBlci5qcycpLnN1YnNjcmliZSh2YWx1ZSA9PiB7XG4gICAgICAgIHRoaXMuX3N1YnNjcmlwdGlvbi5hZGQoXG4gICAgICAgICAgdGhpcy50YW1pbkxhenlMb2FkU2VydmljZS5sb2FkQ3NzKCdhc3NldHMvY3JvcHBlcmpzL2Nyb3BwZXIuY3NzJykuc3Vic2NyaWJlKHZhbHVlMSA9PiB7XG4gICAgICAgICAgICB0aGlzLnRoTW9kYWwuc2hvdygpO1xuICAgICAgICAgICAgaWYgKHRoaXMuY3JvcHBlcikge1xuICAgICAgICAgICAgICB0aGlzLmNyb3BwZXIuY2xlYXIoKTtcbiAgICAgICAgICAgICAgdGhpcy5jcm9wcGVyLnJlcGxhY2UoaW1hZ2UpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdGhpcy5pbWFnZS5uYXRpdmVFbGVtZW50LnNyYyA9IGltYWdlO1xuICAgICAgICAgICAgICB0aGlzLmNyb3BwZXIgPSBuZXcgQ3JvcHBlcih0aGlzLmltYWdlLm5hdGl2ZUVsZW1lbnQsIHtcbiAgICAgICAgICAgICAgICBhc3BlY3RSYXRpbzogMTYgLyA5LFxuICAgICAgICAgICAgICAgIHByZXZpZXc6IG1lLmltYWdlUHJldmlldy5uYXRpdmVFbGVtZW50LFxuICAgICAgICAgICAgICAgIGNyb3A6IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgKTtcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMuX3N1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICB9XG5cbn1cbiJdfQ==