/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { FieldBaseComponent } from '../../../base/field-base.component';
export class TaminFieldTextComponent extends FieldBaseComponent {
    constructor() {
        super(...arguments);
        this.maxLength = Number.MAX_SAFE_INTEGER;
        this.focus = new EventEmitter();
        this.blur = new EventEmitter();
    }
}
TaminFieldTextComponent.decorators = [
    { type: Component, args: [{
                selector: 'tamin-field-text',
                template: "<input\n  type=\"text\"\n  class=\"tamin-form-control-input\"\n  (blur)=\"blur.emit()\"\n  (focus)=\"focus.emit()\"\n  [disabled] = \"control?.disabled\"\n  [class.tamin-form-control-valid]=\"control?.touched && control?.valid\"\n  [class.tamin-form-control-invalid]=\"control?.touched && !control?.valid\"\n  [attr.maxLength] = \"maxLength\"\n  [attr.placeholder] =\"placeHolder\"\n  #inputElement>\n<span>{{hint}}</span>\n\n\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => TaminFieldTextComponent)),
                        multi: true
                    }
                ],
                styles: [":host{width:100%}"]
            }] }
];
TaminFieldTextComponent.propDecorators = {
    maxLength: [{ type: Input }],
    focus: [{ type: Output }],
    blur: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    TaminFieldTextComponent.prototype.maxLength;
    /** @type {?} */
    TaminFieldTextComponent.prototype.focus;
    /** @type {?} */
    TaminFieldTextComponent.prototype.blur;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tZmllbGQtdGV4dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90YW1pbi1mcmFtZXdvcmsvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9maWVsZHMvdGFtaW4tZmllbGQtdGV4dC90YW1pbi1maWVsZC10ZXh0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDakYsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDakQsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFldEUsTUFBTSxPQUFPLHVCQUF3QixTQUFRLGtCQUFrQjtJQVovRDs7UUFjVyxjQUFTLEdBQUcsTUFBTSxDQUFDLGdCQUFnQixDQUFDO1FBQ25DLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQzNCLFNBQUksR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBRXRDLENBQUM7OztZQWxCQSxTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGtCQUFrQjtnQkFDNUIsd2JBQWdEO2dCQUVoRCxTQUFTLEVBQUU7b0JBQ1Q7d0JBQ0UsT0FBTyxFQUFFLGlCQUFpQjt3QkFDMUIsV0FBVyxFQUFFLFVBQVU7Ozt3QkFBQyxHQUFHLEVBQUUsQ0FBQyx1QkFBdUIsRUFBQzt3QkFDdEQsS0FBSyxFQUFFLElBQUk7cUJBQ1o7aUJBQ0Y7O2FBQ0Y7Ozt3QkFHRSxLQUFLO29CQUNMLE1BQU07bUJBQ04sTUFBTTs7OztJQUZQLDRDQUE2Qzs7SUFDN0Msd0NBQXFDOztJQUNyQyx1Q0FBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBmb3J3YXJkUmVmLCBJbnB1dCwgT3V0cHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TkdfVkFMVUVfQUNDRVNTT1J9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7RmllbGRCYXNlQ29tcG9uZW50fSBmcm9tICcuLi8uLi8uLi9iYXNlL2ZpZWxkLWJhc2UuY29tcG9uZW50JztcblxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0YW1pbi1maWVsZC10ZXh0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RhbWluLWZpZWxkLXRleHQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90YW1pbi1maWVsZC10ZXh0LmNvbXBvbmVudC5zY3NzJ10sXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVGFtaW5GaWVsZFRleHRDb21wb25lbnQpLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgVGFtaW5GaWVsZFRleHRDb21wb25lbnQgZXh0ZW5kcyBGaWVsZEJhc2VDb21wb25lbnQge1xuXG4gIEBJbnB1dCgpIG1heExlbmd0aCA9IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSO1xuICBAT3V0cHV0KCkgZm9jdXMgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBibHVyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG59XG4iXX0=