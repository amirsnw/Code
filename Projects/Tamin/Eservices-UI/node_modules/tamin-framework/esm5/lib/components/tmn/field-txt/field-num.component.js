/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, forwardRef, Input, Output, ViewChild } from '@angular/core';
import { ControlContainer, NG_VALUE_ACCESSOR } from '@angular/forms';
var FieldNumComponent = /** @class */ (function () {
    function FieldNumComponent(controlContainer) {
        var _this = this;
        this.controlContainer = controlContainer;
        this.maxLength = Number.MAX_SAFE_INTEGER;
        this.min = Number.MIN_SAFE_INTEGER;
        this.max = Number.MAX_SAFE_INTEGER;
        this.negativeNumberColor = 'red';
        this.blur = new EventEmitter();
        this.onChange = (/**
         * @param {?} _
         * @return {?}
         */
        function (_) {
        });
        this.onTouched = (/**
         * @return {?}
         */
        function () {
            _this.blur.emit();
        });
    }
    Object.defineProperty(FieldNumComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this.maskRef.value;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this.maskRef.value = val.toString();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FieldNumComponent.prototype.updateChanges = /**
     * @return {?}
     */
    function () {
        this.onChange(this.value);
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    FieldNumComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    FieldNumComponent.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onTouched = fn;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    FieldNumComponent.prototype.writeValue = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        this.value = obj;
        this.updateChanges();
    };
    /**
     * @return {?}
     */
    FieldNumComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        this.control = this.controlContainer.control.get(this.formControlName);
        /** @type {?} */
        var me = this;
        this.maskRef = new IMask(this.element.nativeElement, {
            mask: Number,
            thousandsSeparator: ',',
            min: me.min,
            max: me.max
        });
    };
    FieldNumComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'tmn-field-num',
                    template: "<input\n    type=\"text\"\n    [(ngModel)]=\"value\"\n    (ngModelChange)=\"updateChanges()\"\n    class=\"tamin-form-control-input\"\n    style=\"direction: ltr\"\n    (blur)=\"onTouched()\"\n    [disabled]=\"control?.disabled\"\n    [class.tamin-form-control-valid]=\"control?.touched && control?.valid\"\n    [class.tamin-form-control-invalid]=\"control?.touched && !control?.valid\"\n    [style.color]=\"value < 0 ? negativeNumberColor : ''\"\n    [attr.placeholder]=\"placeHolder\"\n    #element>",
                    providers: [{
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return FieldNumComponent; })),
                            multi: true
                        }],
                    styles: [":host {\n      width: 100%;\n    }"]
                }] }
    ];
    /** @nocollapse */
    FieldNumComponent.ctorParameters = function () { return [
        { type: ControlContainer }
    ]; };
    FieldNumComponent.propDecorators = {
        element: [{ type: ViewChild, args: ['element',] }],
        maxLength: [{ type: Input }],
        formControlName: [{ type: Input }],
        placeHolder: [{ type: Input }],
        min: [{ type: Input }],
        max: [{ type: Input }],
        negativeNumberColor: [{ type: Input }],
        blur: [{ type: Output }]
    };
    return FieldNumComponent;
}());
export { FieldNumComponent };
if (false) {
    /** @type {?} */
    FieldNumComponent.prototype.control;
    /** @type {?} */
    FieldNumComponent.prototype.maskRef;
    /** @type {?} */
    FieldNumComponent.prototype.element;
    /** @type {?} */
    FieldNumComponent.prototype.maxLength;
    /** @type {?} */
    FieldNumComponent.prototype.formControlName;
    /** @type {?} */
    FieldNumComponent.prototype.placeHolder;
    /** @type {?} */
    FieldNumComponent.prototype.min;
    /** @type {?} */
    FieldNumComponent.prototype.max;
    /** @type {?} */
    FieldNumComponent.prototype.negativeNumberColor;
    /** @type {?} */
    FieldNumComponent.prototype.blur;
    /** @type {?} */
    FieldNumComponent.prototype.onChange;
    /** @type {?} */
    FieldNumComponent.prototype.onTouched;
    /**
     * @type {?}
     * @private
     */
    FieldNumComponent.prototype.controlContainer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmllbGQtbnVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RhbWluLWZyYW1ld29yay8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3Rtbi9maWVsZC10eHQvZmllbGQtbnVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUVMLFNBQVMsRUFDVCxVQUFVLEVBQ1YsWUFBWSxFQUNaLFVBQVUsRUFDVixLQUFLLEVBQ0wsTUFBTSxFQUNOLFNBQVMsRUFDVixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBRUwsZ0JBQWdCLEVBRWhCLGlCQUFpQixFQUNsQixNQUFNLGdCQUFnQixDQUFDO0FBS3hCO0lBc0RFLDJCQUFvQixnQkFBa0M7UUFBdEQsaUJBRUM7UUFGbUIscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQXZCN0MsY0FBUyxHQUFHLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztRQUdwQyxRQUFHLEdBQUcsTUFBTSxDQUFDLGdCQUFnQixDQUFDO1FBQzlCLFFBQUcsR0FBRyxNQUFNLENBQUMsZ0JBQWdCLENBQUM7UUFDOUIsd0JBQW1CLEdBQUcsS0FBSyxDQUFDO1FBQzNCLFNBQUksR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBVXBDLGFBQVE7Ozs7UUFBcUIsVUFBQyxDQUFNO1FBQ3BDLENBQUMsRUFBQTtRQUVELGNBQVM7OztRQUFlO1lBQ3RCLEtBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDbkIsQ0FBQyxFQUFBO0lBSUQsQ0FBQztJQWpCRCxzQkFBSSxvQ0FBSzs7OztRQUlUO1lBQ0UsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztRQUM1QixDQUFDOzs7OztRQU5ELFVBQVUsR0FBUTtZQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDdEMsQ0FBQzs7O09BQUE7Ozs7SUFpQkQseUNBQWE7OztJQUFiO1FBQ0UsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUIsQ0FBQzs7Ozs7SUFFRCw0Q0FBZ0I7Ozs7SUFBaEIsVUFBaUIsRUFBTztRQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUNyQixDQUFDOzs7OztJQUVELDZDQUFpQjs7OztJQUFqQixVQUFrQixFQUFPO1FBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO0lBQ3RCLENBQUM7Ozs7O0lBRUQsc0NBQVU7Ozs7SUFBVixVQUFXLEdBQVE7UUFDakIsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUM7UUFDakIsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7Ozs7SUFFRCw4Q0FBa0I7OztJQUFsQjtRQUNFLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDOztZQUNqRSxFQUFFLEdBQUcsSUFBSTtRQUNmLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUU7WUFDbkQsSUFBSSxFQUFFLE1BQU07WUFDWixrQkFBa0IsRUFBRSxHQUFHO1lBQ3ZCLEdBQUcsRUFBRSxFQUFFLENBQUMsR0FBRztZQUNYLEdBQUcsRUFBRSxFQUFFLENBQUMsR0FBRztTQUNaLENBQUMsQ0FBQztJQUNMLENBQUM7O2dCQXBGRixTQUFTLFNBQUM7O29CQUVULFFBQVEsRUFBRSxlQUFlO29CQUN6QixRQUFRLEVBQUUsdWZBWUU7b0JBTVosU0FBUyxFQUFFLENBQUM7NEJBQ1YsT0FBTyxFQUFFLGlCQUFpQjs0QkFDMUIsV0FBVyxFQUFFLFVBQVU7Ozs0QkFBQyxjQUFNLE9BQUEsaUJBQWlCLEVBQWpCLENBQWlCLEVBQUM7NEJBQ2hELEtBQUssRUFBRSxJQUFJO3lCQUNaLENBQUM7NkJBUkEsb0NBRUU7aUJBT0w7Ozs7Z0JBbENDLGdCQUFnQjs7OzBCQXNDZixTQUFTLFNBQUMsU0FBUzs0QkFDbkIsS0FBSztrQ0FDTCxLQUFLOzhCQUNMLEtBQUs7c0JBQ0wsS0FBSztzQkFDTCxLQUFLO3NDQUNMLEtBQUs7dUJBQ0wsTUFBTTs7SUFnRFQsd0JBQUM7Q0FBQSxBQXJGRCxJQXFGQztTQTFEWSxpQkFBaUI7OztJQUM1QixvQ0FBeUI7O0lBQ3pCLG9DQUFhOztJQUNiLG9DQUEwQzs7SUFDMUMsc0NBQTZDOztJQUM3Qyw0Q0FBaUM7O0lBQ2pDLHdDQUE2Qjs7SUFDN0IsZ0NBQXVDOztJQUN2QyxnQ0FBdUM7O0lBQ3ZDLGdEQUFxQzs7SUFDckMsaUNBQW9DOztJQVVwQyxxQ0FDQzs7SUFFRCxzQ0FFQzs7Ozs7SUFFVyw2Q0FBMEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBZnRlckNvbnRlbnRJbml0LFxuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIEV2ZW50RW1pdHRlcixcbiAgZm9yd2FyZFJlZixcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgVmlld0NoaWxkXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgQWJzdHJhY3RDb250cm9sLFxuICBDb250cm9sQ29udGFpbmVyLFxuICBDb250cm9sVmFsdWVBY2Nlc3NvcixcbiAgTkdfVkFMVUVfQUNDRVNTT1Jcbn0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHtJVGFtaW5GaWVsZH0gZnJvbSAnLi4vSVRhbWluRmllbGQnO1xuXG5kZWNsYXJlIGxldCBJTWFzazogYW55O1xuXG5AQ29tcG9uZW50KHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmNvbXBvbmVudC1zZWxlY3RvclxuICBzZWxlY3RvcjogJ3Rtbi1maWVsZC1udW0nLFxuICB0ZW1wbGF0ZTogYDxpbnB1dFxuICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICBbKG5nTW9kZWwpXT1cInZhbHVlXCJcbiAgICAobmdNb2RlbENoYW5nZSk9XCJ1cGRhdGVDaGFuZ2VzKClcIlxuICAgIGNsYXNzPVwidGFtaW4tZm9ybS1jb250cm9sLWlucHV0XCJcbiAgICBzdHlsZT1cImRpcmVjdGlvbjogbHRyXCJcbiAgICAoYmx1cik9XCJvblRvdWNoZWQoKVwiXG4gICAgW2Rpc2FibGVkXT1cImNvbnRyb2w/LmRpc2FibGVkXCJcbiAgICBbY2xhc3MudGFtaW4tZm9ybS1jb250cm9sLXZhbGlkXT1cImNvbnRyb2w/LnRvdWNoZWQgJiYgY29udHJvbD8udmFsaWRcIlxuICAgIFtjbGFzcy50YW1pbi1mb3JtLWNvbnRyb2wtaW52YWxpZF09XCJjb250cm9sPy50b3VjaGVkICYmICFjb250cm9sPy52YWxpZFwiXG4gICAgW3N0eWxlLmNvbG9yXT1cInZhbHVlIDwgMCA/IG5lZ2F0aXZlTnVtYmVyQ29sb3IgOiAnJ1wiXG4gICAgW2F0dHIucGxhY2Vob2xkZXJdPVwicGxhY2VIb2xkZXJcIlxuICAgICNlbGVtZW50PmAsXG4gIHN0eWxlczogW1xuICAgIGA6aG9zdCB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9YFxuICBdLFxuICBwcm92aWRlcnM6IFt7XG4gICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gRmllbGROdW1Db21wb25lbnQpLFxuICAgIG11bHRpOiB0cnVlXG4gIH1dXG59KVxuZXhwb3J0IGNsYXNzIEZpZWxkTnVtQ29tcG9uZW50IGltcGxlbWVudHMgQ29udHJvbFZhbHVlQWNjZXNzb3IsIElUYW1pbkZpZWxkLCBBZnRlckNvbnRlbnRJbml0IHtcbiAgY29udHJvbDogQWJzdHJhY3RDb250cm9sO1xuICBtYXNrUmVmOiBhbnk7XG4gIEBWaWV3Q2hpbGQoJ2VsZW1lbnQnKSBlbGVtZW50OiBFbGVtZW50UmVmO1xuICBASW5wdXQoKSBtYXhMZW5ndGggPSBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUjtcbiAgQElucHV0KCkgZm9ybUNvbnRyb2xOYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHBsYWNlSG9sZGVyOiBzdHJpbmc7XG4gIEBJbnB1dCgpIG1pbiA9IE51bWJlci5NSU5fU0FGRV9JTlRFR0VSO1xuICBASW5wdXQoKSBtYXggPSBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUjtcbiAgQElucHV0KCkgbmVnYXRpdmVOdW1iZXJDb2xvciA9ICdyZWQnO1xuICBAT3V0cHV0KCkgYmx1ciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBzZXQgdmFsdWUodmFsOiBhbnkpIHtcbiAgICB0aGlzLm1hc2tSZWYudmFsdWUgPSB2YWwudG9TdHJpbmcoKTtcbiAgfVxuXG4gIGdldCB2YWx1ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5tYXNrUmVmLnZhbHVlO1xuICB9XG5cbiAgb25DaGFuZ2U6IChfOiBhbnkpID0+IHZvaWQgPSAoXzogYW55KSA9PiB7XG4gIH1cblxuICBvblRvdWNoZWQ6ICgpID0+IHZvaWQgPSAoKSA9PiB7XG4gICAgdGhpcy5ibHVyLmVtaXQoKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY29udHJvbENvbnRhaW5lcjogQ29udHJvbENvbnRhaW5lcikge1xuXG4gIH1cblxuICB1cGRhdGVDaGFuZ2VzKCkge1xuICAgIHRoaXMub25DaGFuZ2UodGhpcy52YWx1ZSk7XG4gIH1cblxuICByZWdpc3Rlck9uQ2hhbmdlKGZuOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLm9uQ2hhbmdlID0gZm47XG4gIH1cblxuICByZWdpc3Rlck9uVG91Y2hlZChmbjogYW55KTogdm9pZCB7XG4gICAgdGhpcy5vblRvdWNoZWQgPSBmbjtcbiAgfVxuXG4gIHdyaXRlVmFsdWUob2JqOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLnZhbHVlID0gb2JqO1xuICAgIHRoaXMudXBkYXRlQ2hhbmdlcygpO1xuICB9XG5cbiAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQge1xuICAgIHRoaXMuY29udHJvbCA9IHRoaXMuY29udHJvbENvbnRhaW5lci5jb250cm9sLmdldCh0aGlzLmZvcm1Db250cm9sTmFtZSk7XG4gICAgY29uc3QgbWUgPSB0aGlzO1xuICAgIHRoaXMubWFza1JlZiA9IG5ldyBJTWFzayh0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCwge1xuICAgICAgbWFzazogTnVtYmVyLFxuICAgICAgdGhvdXNhbmRzU2VwYXJhdG9yOiAnLCcsXG4gICAgICBtaW46IG1lLm1pbixcbiAgICAgIG1heDogbWUubWF4XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==