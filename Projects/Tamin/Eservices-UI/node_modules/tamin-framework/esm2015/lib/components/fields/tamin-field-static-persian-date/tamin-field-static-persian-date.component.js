/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, forwardRef } from '@angular/core';
import { FieldBaseComponent } from '../../../base/field-base.component';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { TaminPersianDate } from '../../../tamin-persian-date';
export class TaminFieldStaticPersianDateComponent extends FieldBaseComponent {
    /**
     * @return {?}
     */
    initializeComponent() {
        // this._taminPersianService = this.injector.get(TaminPersianService);
    }
    /**
     * @param {?} value
     * @return {?}
     */
    writeValue(value) {
        /** @type {?} */
        const theValue = value == null ? '' : value;
        // this.inputElement.nativeElement.value = value ? this._taminPersianService.getPersianDate(new Date(value)) : '';
        this.inputElement.nativeElement.value = value ? TaminPersianDate.GregorianToJalali(new Date(value)) : '';
        this.onChange(value);
    }
}
TaminFieldStaticPersianDateComponent.decorators = [
    { type: Component, args: [{
                selector: 'tamin-field-static-persian-date',
                template: "\n<input\n  type=\"text\"\n  readonly=\"readonly\"\n  [disabled] = \"control.disabled\"\n  class=\"tamin-form-control-input\"\n  style=\"background-color: #efeff0; border-color: #cacacb;\"\n  [class.tamin-form-control-valid]=\"control.touched && control.valid\"\n  [class.tamin-form-control-invalid]=\"control.touched && !control.valid\"\n  #inputElement>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => TaminFieldStaticPersianDateComponent)),
                        multi: true
                    }
                ],
                styles: [":host{width:100%}"]
            }] }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    TaminFieldStaticPersianDateComponent.prototype._taminPersianService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tZmllbGQtc3RhdGljLXBlcnNpYW4tZGF0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90YW1pbi1mcmFtZXdvcmsvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9maWVsZHMvdGFtaW4tZmllbGQtc3RhdGljLXBlcnNpYW4tZGF0ZS90YW1pbi1maWVsZC1zdGF0aWMtcGVyc2lhbi1kYXRlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFDdEUsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFakQsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sNkJBQTZCLENBQUM7QUFlN0QsTUFBTSxPQUFPLG9DQUFxQyxTQUFRLGtCQUFrQjs7OztJQUcxRSxtQkFBbUI7UUFDakIsc0VBQXNFO0lBQ3hFLENBQUM7Ozs7O0lBRUQsVUFBVSxDQUFDLEtBQVU7O2NBQ2IsUUFBUSxHQUFHLEtBQUssSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSztRQUMzQyxrSEFBa0g7UUFDbEgsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsaUJBQWlCLENBQUMsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQ3pHLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdkIsQ0FBQzs7O1lBekJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsaUNBQWlDO2dCQUMzQyxpWEFBK0Q7Z0JBRS9ELFNBQVMsRUFBRTtvQkFDVDt3QkFDRSxPQUFPLEVBQUUsaUJBQWlCO3dCQUMxQixXQUFXLEVBQUUsVUFBVTs7O3dCQUFDLEdBQUcsRUFBRSxDQUFDLG9DQUFvQyxFQUFDO3dCQUNuRSxLQUFLLEVBQUUsSUFBSTtxQkFDWjtpQkFDRjs7YUFFRjs7Ozs7OztJQUVDLG9FQUFrRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBmb3J3YXJkUmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7RmllbGRCYXNlQ29tcG9uZW50fSBmcm9tICcuLi8uLi8uLi9iYXNlL2ZpZWxkLWJhc2UuY29tcG9uZW50JztcbmltcG9ydCB7TkdfVkFMVUVfQUNDRVNTT1J9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7VGFtaW5QZXJzaWFuU2VydmljZX0gZnJvbSAnLi4vLi4vLi4vc2VydmljZXMvcGVyc2lhbi1zZXJ2aWNlL3RhbWluLXBlcnNpYW4uc2VydmljZSc7XG5pbXBvcnQge1RhbWluUGVyc2lhbkRhdGV9IGZyb20gJy4uLy4uLy4uL3RhbWluLXBlcnNpYW4tZGF0ZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhbWluLWZpZWxkLXN0YXRpYy1wZXJzaWFuLWRhdGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGFtaW4tZmllbGQtc3RhdGljLXBlcnNpYW4tZGF0ZS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3RhbWluLWZpZWxkLXN0YXRpYy1wZXJzaWFuLWRhdGUuY29tcG9uZW50LnNjc3MnXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUYW1pbkZpZWxkU3RhdGljUGVyc2lhbkRhdGVDb21wb25lbnQpLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cblxufSlcbmV4cG9ydCBjbGFzcyBUYW1pbkZpZWxkU3RhdGljUGVyc2lhbkRhdGVDb21wb25lbnQgZXh0ZW5kcyBGaWVsZEJhc2VDb21wb25lbnQge1xuICBwcml2YXRlIF90YW1pblBlcnNpYW5TZXJ2aWNlOiBUYW1pblBlcnNpYW5TZXJ2aWNlO1xuXG4gIGluaXRpYWxpemVDb21wb25lbnQoKSB7XG4gICAgLy8gdGhpcy5fdGFtaW5QZXJzaWFuU2VydmljZSA9IHRoaXMuaW5qZWN0b3IuZ2V0KFRhbWluUGVyc2lhblNlcnZpY2UpO1xuICB9XG5cbiAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KTogdm9pZCB7XG4gICAgY29uc3QgdGhlVmFsdWUgPSB2YWx1ZSA9PSBudWxsID8gJycgOiB2YWx1ZTtcbiAgICAvLyB0aGlzLmlucHV0RWxlbWVudC5uYXRpdmVFbGVtZW50LnZhbHVlID0gdmFsdWUgPyB0aGlzLl90YW1pblBlcnNpYW5TZXJ2aWNlLmdldFBlcnNpYW5EYXRlKG5ldyBEYXRlKHZhbHVlKSkgOiAnJztcbiAgICB0aGlzLmlucHV0RWxlbWVudC5uYXRpdmVFbGVtZW50LnZhbHVlID0gdmFsdWUgPyBUYW1pblBlcnNpYW5EYXRlLkdyZWdvcmlhblRvSmFsYWxpKG5ldyBEYXRlKHZhbHVlKSkgOiAnJztcbiAgICB0aGlzLm9uQ2hhbmdlKHZhbHVlKTtcbiAgfVxufVxuIl19