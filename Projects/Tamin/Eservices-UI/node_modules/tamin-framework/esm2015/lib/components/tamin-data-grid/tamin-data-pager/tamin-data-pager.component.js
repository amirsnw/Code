/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
export class TaminDataPagerComponent {
    constructor() {
        this.pageChanged = new EventEmitter();
        this.refreshData = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.pagerCurrentPage > this.pagerTotal) {
            this.pagerCurrentPage = this.pagerTotal;
        }
        else if (this.pagerCurrentPage < 1) {
            this.pagerCurrentPage = 1;
        }
    }
    /**
     * @param {?} changeAmount
     * @return {?}
     */
    changePage(changeAmount) {
        /** @type {?} */
        const oldPage = this.pagerCurrentPage;
        if (changeAmount > 1) {
            this.pagerCurrentPage = this.pagerTotal;
        }
        else if (changeAmount < -1) {
            this.pagerCurrentPage = 1;
        }
        else {
            this.pagerCurrentPage = parseFloat(this.pagerCurrentPage.toString()) + parseFloat(changeAmount.toString());
            if (this.pagerCurrentPage < 1) {
                this.pagerCurrentPage = 1;
            }
            if (this.pagerCurrentPage > this.pagerTotal) {
                this.pagerCurrentPage = this.pagerTotal;
            }
        }
        if (oldPage !== this.pagerCurrentPage) {
            this.pageChanged.emit(this.pagerCurrentPage);
        }
    }
    /**
     * @return {?}
     */
    onRefresh() {
        this.refreshData.emit();
    }
}
TaminDataPagerComponent.decorators = [
    { type: Component, args: [{
                selector: 'tamin-data-pager',
                template: "<table class=\"pager\">\n  <tbody>\n  <tr>\n    <td>\n      <button type=\"button\" class=\"button pager icon-to-end\" (click)=\"changePage(-2)\"></button>\n    </td>\n    <td>\n      <button type=\"button\" class=\"button pager icon-play\" (click)=\"changePage(-1)\"></button>\n    </td>\n    <td class=\"pagerText\">\n      <span>\u0635\u0641\u062D\u0647</span> {{pagerCurrentPage | persianNumber}} <span>\u0627\u0632</span> {{this.pagerTotal | persianNumber}}\n    </td>\n    <td>\n      <button type=\"button\" class=\"button pager icon-play\" style=\"transform: rotate(180deg);\" (click)=\"changePage(1)\"></button>\n    </td>\n    <td>\n      <button type=\"button\" class=\"button pager icon-to-start\" (click)=\"changePage(2)\"></button>\n    </td>\n    <td>\n      <button type=\"button\" class=\"button pager icon-arrows-cw\" (click)=\"onRefresh()\"></button>\n    </td>\n  </tr>\n  </tbody>\n</table>\n",
                styles: [".pager{border-spacing:0;border:none;text-align:right}.pager td{border:none}.pagerText{padding:5px;font-size:11px}.button.pager{text-align:center;vertical-align:middle;padding:3px 3px 0;color:#333;background-color:transparent}.button.pager:hover{color:#057;background-color:#eaeaea}"]
            }] }
];
/** @nocollapse */
TaminDataPagerComponent.ctorParameters = () => [];
TaminDataPagerComponent.propDecorators = {
    pagerSize: [{ type: Input }],
    pagerCurrentPage: [{ type: Input }],
    pagerTotal: [{ type: Input }],
    pageChanged: [{ type: Output }],
    refreshData: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    TaminDataPagerComponent.prototype.pagerSize;
    /** @type {?} */
    TaminDataPagerComponent.prototype.pagerCurrentPage;
    /** @type {?} */
    TaminDataPagerComponent.prototype.pagerTotal;
    /** @type {?} */
    TaminDataPagerComponent.prototype.pageChanged;
    /** @type {?} */
    TaminDataPagerComponent.prototype.refreshData;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tZGF0YS1wYWdlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90YW1pbi1mcmFtZXdvcmsvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90YW1pbi1kYXRhLWdyaWQvdGFtaW4tZGF0YS1wYWdlci90YW1pbi1kYXRhLXBhZ2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQU83RSxNQUFNLE9BQU8sdUJBQXVCO0lBV2xDO1FBSFUsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBVSxDQUFDO1FBQ3pDLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQUdoRCxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDM0MsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7U0FDekM7YUFBTSxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxDQUFDLEVBQUU7WUFDcEMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLENBQUMsQ0FBQztTQUMzQjtJQUNILENBQUM7Ozs7O0lBRUQsVUFBVSxDQUFDLFlBQW9COztjQUN2QixPQUFPLEdBQUcsSUFBSSxDQUFDLGdCQUFnQjtRQUVyQyxJQUFJLFlBQVksR0FBRyxDQUFDLEVBQUU7WUFDcEIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7U0FDekM7YUFBTSxJQUFJLFlBQVksR0FBRyxDQUFDLENBQUMsRUFBRTtZQUM1QixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsQ0FBQyxDQUFDO1NBQzNCO2FBQU07WUFDTCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztZQUMzRyxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxDQUFDLEVBQUU7Z0JBQzdCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxDQUFDLENBQUM7YUFDM0I7WUFDRCxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFO2dCQUMzQyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQzthQUN6QztTQUNGO1FBRUQsSUFBSSxPQUFPLEtBQUssSUFBSSxDQUFDLGdCQUFnQixFQUFFO1lBQ3JDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1NBQzlDO0lBQ0gsQ0FBQzs7OztJQUVELFNBQVM7UUFDUCxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzFCLENBQUM7OztZQW5ERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGtCQUFrQjtnQkFDNUIsNjVCQUFnRDs7YUFFakQ7Ozs7O3dCQUdFLEtBQUs7K0JBRUwsS0FBSzt5QkFFTCxLQUFLOzBCQUVMLE1BQU07MEJBQ04sTUFBTTs7OztJQVBQLDRDQUEyQjs7SUFFM0IsbURBQWtDOztJQUVsQyw2Q0FBNEI7O0lBRTVCLDhDQUFtRDs7SUFDbkQsOENBQWdEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGFtaW4tZGF0YS1wYWdlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi90YW1pbi1kYXRhLXBhZ2VyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdGFtaW4tZGF0YS1wYWdlci5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIFRhbWluRGF0YVBhZ2VyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBASW5wdXQoKSBwYWdlclNpemU6IG51bWJlcjtcblxuICBASW5wdXQoKSBwYWdlckN1cnJlbnRQYWdlOiBudW1iZXI7XG5cbiAgQElucHV0KCkgcGFnZXJUb3RhbDogbnVtYmVyO1xuXG4gIEBPdXRwdXQoKSBwYWdlQ2hhbmdlZCA9IG5ldyBFdmVudEVtaXR0ZXI8bnVtYmVyPigpO1xuICBAT3V0cHV0KCkgcmVmcmVzaERhdGEgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICh0aGlzLnBhZ2VyQ3VycmVudFBhZ2UgPiB0aGlzLnBhZ2VyVG90YWwpIHtcbiAgICAgIHRoaXMucGFnZXJDdXJyZW50UGFnZSA9IHRoaXMucGFnZXJUb3RhbDtcbiAgICB9IGVsc2UgaWYgKHRoaXMucGFnZXJDdXJyZW50UGFnZSA8IDEpIHtcbiAgICAgIHRoaXMucGFnZXJDdXJyZW50UGFnZSA9IDE7XG4gICAgfVxuICB9XG5cbiAgY2hhbmdlUGFnZShjaGFuZ2VBbW91bnQ6IG51bWJlcikge1xuICAgIGNvbnN0IG9sZFBhZ2UgPSB0aGlzLnBhZ2VyQ3VycmVudFBhZ2U7XG5cbiAgICBpZiAoY2hhbmdlQW1vdW50ID4gMSkge1xuICAgICAgdGhpcy5wYWdlckN1cnJlbnRQYWdlID0gdGhpcy5wYWdlclRvdGFsO1xuICAgIH0gZWxzZSBpZiAoY2hhbmdlQW1vdW50IDwgLTEpIHtcbiAgICAgIHRoaXMucGFnZXJDdXJyZW50UGFnZSA9IDE7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucGFnZXJDdXJyZW50UGFnZSA9IHBhcnNlRmxvYXQodGhpcy5wYWdlckN1cnJlbnRQYWdlLnRvU3RyaW5nKCkpICsgcGFyc2VGbG9hdChjaGFuZ2VBbW91bnQudG9TdHJpbmcoKSk7XG4gICAgICBpZiAodGhpcy5wYWdlckN1cnJlbnRQYWdlIDwgMSkge1xuICAgICAgICB0aGlzLnBhZ2VyQ3VycmVudFBhZ2UgPSAxO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMucGFnZXJDdXJyZW50UGFnZSA+IHRoaXMucGFnZXJUb3RhbCkge1xuICAgICAgICB0aGlzLnBhZ2VyQ3VycmVudFBhZ2UgPSB0aGlzLnBhZ2VyVG90YWw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKG9sZFBhZ2UgIT09IHRoaXMucGFnZXJDdXJyZW50UGFnZSkge1xuICAgICAgdGhpcy5wYWdlQ2hhbmdlZC5lbWl0KHRoaXMucGFnZXJDdXJyZW50UGFnZSk7XG4gICAgfVxuICB9XG5cbiAgb25SZWZyZXNoKCkge1xuICAgIHRoaXMucmVmcmVzaERhdGEuZW1pdCgpO1xuICB9XG59XG4iXX0=