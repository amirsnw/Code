/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, forwardRef, Input, ViewChild } from '@angular/core';
import { FieldBaseComponent } from '../../../base/field-base.component';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { PickerContainerComponent } from '../../containers/picker-container/picker-container.component';
var TaminFieldComboBoxStaticComponent = /** @class */ (function (_super) {
    tslib_1.__extends(TaminFieldComboBoxStaticComponent, _super);
    function TaminFieldComboBoxStaticComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.dataItems = [];
        return _this;
    }
    /**
     * @return {?}
     */
    TaminFieldComboBoxStaticComponent.prototype.initializeComponent = /**
     * @return {?}
     */
    function () {
        this.picker.parent = this.inputElement;
        this.picker.button = this.iconElement;
    };
    /**
     * @return {?}
     */
    TaminFieldComboBoxStaticComponent.prototype.onShowPicker = /**
     * @return {?}
     */
    function () {
        this.picker.toggle();
    };
    /**
     * @param {?} itemData
     * @return {?}
     */
    TaminFieldComboBoxStaticComponent.prototype.renderItem = /**
     * @param {?} itemData
     * @return {?}
     */
    function (itemData) {
        if (this.itemRenderer) {
            return this.itemRenderer(itemData);
        }
        return itemData[this.displayField];
    };
    /**
     * @return {?}
     */
    TaminFieldComboBoxStaticComponent.prototype.onClearContent = /**
     * @return {?}
     */
    function () {
        this.onChange('');
        this.inputElement.nativeElement.value = '';
        this.picker.hide();
    };
    /**
     * @param {?} item
     * @return {?}
     */
    TaminFieldComboBoxStaticComponent.prototype.onSelect = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        this.onChange(item[this.valueField]);
        this.inputElement.nativeElement.value = item[this.displayField];
        this.picker.toggle();
    };
    /**
     * @param {?} value
     * @return {?}
     */
    TaminFieldComboBoxStaticComponent.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        var _this = this;
        /** @type {?} */
        var theValue = value == null ? '' : value;
        /** @type {?} */
        var tmp = this.dataItems.find((/**
         * @param {?} c
         * @return {?}
         */
        function (c) { return c[_this.valueField] === theValue; }));
        if (tmp) {
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.inputElement.nativeElement.value = tmp[_this.displayField];
            }), 0);
        }
        else {
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.inputElement.nativeElement.value = '';
            }), 0);
        }
        this.onChange(value);
    };
    TaminFieldComboBoxStaticComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tamin-field-combo-box-static',
                    template: "<div class=\"input-wrapper\">\n  <input\n    id=\"textbox\"\n    readonly=\"readonly\"\n    [disabled]=\"control.disabled\"\n    style=\"padding-left: 35px;;cursor: pointer\"\n    type=\"text\"\n    class=\"tamin-form-control-input\"\n    [class.tamin-form-control-valid]=\"control.touched && control.valid\"\n    [class.tamin-form-control-invalid]=\"control.touched && !control.valid\"\n    (click)=\"onShowPicker()\" [attr.placeholder]=\"placeHolder\"\n    #inputElement>\n  <span class=\"icon\" style=\"margin-left:20px\" *ngIf=\"showClearButton\" (click)=\"onClearContent()\">\n    <i\n      class=\"icon-cancel\"\n      style=\"font-size: 1.5em\"\n      [class.tamin-form-control-valid-icon]=\"control.touched && control.valid\"\n      [class.tamin-form-control-invalid-icon]=\"control.touched && !control.valid\"></i>\n  </span>\n  <span class=\"icon\" #icon (click)=\"onShowPicker()\">\n    <i\n      class=\"icon-down-open\"\n      style=\"font-size: 1.5em\"\n      [class.tamin-form-control-valid-icon]=\"control.touched && control.valid\"\n      [class.tamin-form-control-invalid-icon]=\"control.touched && !control.valid\"></i>\n  </span>\n</div>\n<tamin-picker-container #picker>\n  <div *ngFor=\"let item of dataItems\" class=\"item\" (click)=\"onSelect(item)\" [innerHtml]=\"renderItem(item)\"></div>\n</tamin-picker-container>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return TaminFieldComboBoxStaticComponent; })),
                            multi: true
                        }
                    ],
                    styles: [".input-wrapper{position:relative}.icon{position:absolute;top:23%;left:5px;height:10px;margin-top:-5px;cursor:pointer}.item{padding:5px;cursor:pointer}.item:hover{background-color:silver}"]
                }] }
    ];
    TaminFieldComboBoxStaticComponent.propDecorators = {
        displayField: [{ type: Input }],
        valueField: [{ type: Input }],
        itemRenderer: [{ type: Input }],
        showClearButton: [{ type: Input }],
        picker: [{ type: ViewChild, args: ['picker',] }],
        iconElement: [{ type: ViewChild, args: ['icon',] }],
        dataItems: [{ type: Input }]
    };
    return TaminFieldComboBoxStaticComponent;
}(FieldBaseComponent));
export { TaminFieldComboBoxStaticComponent };
if (false) {
    /** @type {?} */
    TaminFieldComboBoxStaticComponent.prototype.displayField;
    /** @type {?} */
    TaminFieldComboBoxStaticComponent.prototype.valueField;
    /** @type {?} */
    TaminFieldComboBoxStaticComponent.prototype.itemRenderer;
    /** @type {?} */
    TaminFieldComboBoxStaticComponent.prototype.showClearButton;
    /** @type {?} */
    TaminFieldComboBoxStaticComponent.prototype.picker;
    /** @type {?} */
    TaminFieldComboBoxStaticComponent.prototype.iconElement;
    /** @type {?} */
    TaminFieldComboBoxStaticComponent.prototype.dataItems;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tZmllbGQtY29tYm8tYm94LXN0YXRpYy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90YW1pbi1mcmFtZXdvcmsvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9maWVsZHMvdGFtaW4tZmllbGQtY29tYm8tYm94LXN0YXRpYy90YW1pbi1maWVsZC1jb21iby1ib3gtc3RhdGljLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2xGLE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBQ3RFLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ2pELE9BQU8sRUFBQyx3QkFBd0IsRUFBQyxNQUFNLDhEQUE4RCxDQUFDO0FBRXRHO0lBYXVELDZEQUFrQjtJQWJ6RTtRQUFBLHFFQWlFQztRQTdDVSxlQUFTLEdBQUcsRUFBRSxDQUFDOztJQTZDMUIsQ0FBQzs7OztJQTNDQywrREFBbUI7OztJQUFuQjtRQUNFLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDdkMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUN4QyxDQUFDOzs7O0lBRUQsd0RBQVk7OztJQUFaO1FBQ0UsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUN2QixDQUFDOzs7OztJQUVELHNEQUFVOzs7O0lBQVYsVUFBVyxRQUFhO1FBQ3RCLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUNyQixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDcEM7UUFDRCxPQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDckMsQ0FBQzs7OztJQUVELDBEQUFjOzs7SUFBZDtRQUNFLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUMzQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3JCLENBQUM7Ozs7O0lBRUQsb0RBQVE7Ozs7SUFBUixVQUFTLElBQUk7UUFDWCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztRQUNyQyxJQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNoRSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ3ZCLENBQUM7Ozs7O0lBRUQsc0RBQVU7Ozs7SUFBVixVQUFXLEtBQVU7UUFBckIsaUJBY0M7O1lBYk8sUUFBUSxHQUFHLEtBQUssSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSzs7WUFDckMsR0FBRyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSTs7OztRQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLEtBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxRQUFRLEVBQS9CLENBQStCLEVBQUM7UUFDckUsSUFBSSxHQUFHLEVBQUU7WUFDUCxVQUFVOzs7WUFBQztnQkFDVCxLQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLEtBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUNqRSxDQUFDLEdBQUUsQ0FBQyxDQUFDLENBQUM7U0FDUDthQUFNO1lBQ0wsVUFBVTs7O1lBQUM7Z0JBQ1QsS0FBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztZQUM3QyxDQUFDLEdBQUUsQ0FBQyxDQUFDLENBQUM7U0FFUDtRQUNELElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdkIsQ0FBQzs7Z0JBaEVGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsOEJBQThCO29CQUN4QywyMENBQTREO29CQUU1RCxTQUFTLEVBQUU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLGlCQUFpQjs0QkFDMUIsV0FBVyxFQUFFLFVBQVU7Ozs0QkFBQyxjQUFNLE9BQUEsaUNBQWlDLEVBQWpDLENBQWlDLEVBQUM7NEJBQ2hFLEtBQUssRUFBRSxJQUFJO3lCQUNaO3FCQUNGOztpQkFDRjs7OytCQUdFLEtBQUs7NkJBQ0wsS0FBSzsrQkFDTCxLQUFLO2tDQUNMLEtBQUs7eUJBQ0wsU0FBUyxTQUFDLFFBQVE7OEJBQ2xCLFNBQVMsU0FBQyxNQUFNOzRCQUNoQixLQUFLOztJQTZDUix3Q0FBQztDQUFBLEFBakVELENBYXVELGtCQUFrQixHQW9EeEU7U0FwRFksaUNBQWlDOzs7SUFDNUMseURBQThCOztJQUM5Qix1REFBNEI7O0lBQzVCLHlEQUEyQjs7SUFDM0IsNERBQWtDOztJQUNsQyxtREFBc0Q7O0lBQ3RELHdEQUEyQzs7SUFDM0Msc0RBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEVsZW1lbnRSZWYsIGZvcndhcmRSZWYsIElucHV0LCBWaWV3Q2hpbGR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtGaWVsZEJhc2VDb21wb25lbnR9IGZyb20gJy4uLy4uLy4uL2Jhc2UvZmllbGQtYmFzZS5jb21wb25lbnQnO1xuaW1wb3J0IHtOR19WQUxVRV9BQ0NFU1NPUn0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHtQaWNrZXJDb250YWluZXJDb21wb25lbnR9IGZyb20gJy4uLy4uL2NvbnRhaW5lcnMvcGlja2VyLWNvbnRhaW5lci9waWNrZXItY29udGFpbmVyLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhbWluLWZpZWxkLWNvbWJvLWJveC1zdGF0aWMnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGFtaW4tZmllbGQtY29tYm8tYm94LXN0YXRpYy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3RhbWluLWZpZWxkLWNvbWJvLWJveC1zdGF0aWMuY29tcG9uZW50LnNjc3MnXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUYW1pbkZpZWxkQ29tYm9Cb3hTdGF0aWNDb21wb25lbnQpLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5cbmV4cG9ydCBjbGFzcyBUYW1pbkZpZWxkQ29tYm9Cb3hTdGF0aWNDb21wb25lbnQgZXh0ZW5kcyBGaWVsZEJhc2VDb21wb25lbnQge1xuICBASW5wdXQoKSBkaXNwbGF5RmllbGQ6IHN0cmluZztcbiAgQElucHV0KCkgdmFsdWVGaWVsZDogc3RyaW5nO1xuICBASW5wdXQoKSBpdGVtUmVuZGVyZXI6IGFueTtcbiAgQElucHV0KCkgc2hvd0NsZWFyQnV0dG9uOiBib29sZWFuO1xuICBAVmlld0NoaWxkKCdwaWNrZXInKSBwaWNrZXI6IFBpY2tlckNvbnRhaW5lckNvbXBvbmVudDtcbiAgQFZpZXdDaGlsZCgnaWNvbicpIGljb25FbGVtZW50OiBFbGVtZW50UmVmO1xuICBASW5wdXQoKSBkYXRhSXRlbXMgPSBbXTtcblxuICBpbml0aWFsaXplQ29tcG9uZW50KCkge1xuICAgIHRoaXMucGlja2VyLnBhcmVudCA9IHRoaXMuaW5wdXRFbGVtZW50O1xuICAgIHRoaXMucGlja2VyLmJ1dHRvbiA9IHRoaXMuaWNvbkVsZW1lbnQ7XG4gIH1cblxuICBvblNob3dQaWNrZXIoKSB7XG4gICAgdGhpcy5waWNrZXIudG9nZ2xlKCk7XG4gIH1cblxuICByZW5kZXJJdGVtKGl0ZW1EYXRhOiBhbnkpIHtcbiAgICBpZiAodGhpcy5pdGVtUmVuZGVyZXIpIHtcbiAgICAgIHJldHVybiB0aGlzLml0ZW1SZW5kZXJlcihpdGVtRGF0YSk7XG4gICAgfVxuICAgIHJldHVybiBpdGVtRGF0YVt0aGlzLmRpc3BsYXlGaWVsZF07XG4gIH1cblxuICBvbkNsZWFyQ29udGVudCgpIHtcbiAgICB0aGlzLm9uQ2hhbmdlKCcnKTtcbiAgICB0aGlzLmlucHV0RWxlbWVudC5uYXRpdmVFbGVtZW50LnZhbHVlID0gJyc7XG4gICAgdGhpcy5waWNrZXIuaGlkZSgpO1xuICB9XG5cbiAgb25TZWxlY3QoaXRlbSkge1xuICAgIHRoaXMub25DaGFuZ2UoaXRlbVt0aGlzLnZhbHVlRmllbGRdKTtcbiAgICB0aGlzLmlucHV0RWxlbWVudC5uYXRpdmVFbGVtZW50LnZhbHVlID0gaXRlbVt0aGlzLmRpc3BsYXlGaWVsZF07XG4gICAgdGhpcy5waWNrZXIudG9nZ2xlKCk7XG4gIH1cblxuICB3cml0ZVZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkIHtcbiAgICBjb25zdCB0aGVWYWx1ZSA9IHZhbHVlID09IG51bGwgPyAnJyA6IHZhbHVlO1xuICAgIGNvbnN0IHRtcCA9IHRoaXMuZGF0YUl0ZW1zLmZpbmQoYyA9PiBjW3RoaXMudmFsdWVGaWVsZF0gPT09IHRoZVZhbHVlKTtcbiAgICBpZiAodG1wKSB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5pbnB1dEVsZW1lbnQubmF0aXZlRWxlbWVudC52YWx1ZSA9IHRtcFt0aGlzLmRpc3BsYXlGaWVsZF07XG4gICAgICB9LCAwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMuaW5wdXRFbGVtZW50Lm5hdGl2ZUVsZW1lbnQudmFsdWUgPSAnJztcbiAgICAgIH0sIDApO1xuXG4gICAgfVxuICAgIHRoaXMub25DaGFuZ2UodmFsdWUpO1xuICB9XG59XG4iXX0=