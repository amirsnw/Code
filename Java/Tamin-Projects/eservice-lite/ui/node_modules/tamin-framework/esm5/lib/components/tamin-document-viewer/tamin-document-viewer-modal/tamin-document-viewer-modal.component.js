/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild } from '@angular/core';
import { TaminDocumentViewerComponent } from '../tamin-document-viewer.component';
import { TaminModalComponent } from '../../tamin-modal/tamin-modal.component';
var TaminDocumentViewerModalComponent = /** @class */ (function () {
    function TaminDocumentViewerModalComponent() {
    }
    /**
     * @return {?}
     */
    TaminDocumentViewerModalComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} url
     * @return {?}
     */
    TaminDocumentViewerModalComponent.prototype.openImage = /**
     * @param {?} url
     * @return {?}
     */
    function (url) {
        this.theModal.show();
        this.documentViewer.loadImage(url);
    };
    /**
     * @param {?} url
     * @return {?}
     */
    TaminDocumentViewerModalComponent.prototype.openPdf = /**
     * @param {?} url
     * @return {?}
     */
    function (url) {
        this.theModal.show();
        this.documentViewer.loadPdf(url);
    };
    /**
     * @param {?} url
     * @return {?}
     */
    TaminDocumentViewerModalComponent.prototype.openPdfBased64 = /**
     * @param {?} url
     * @return {?}
     */
    function (url) {
        this.theModal.show();
        this.documentViewer.loadPdfBased64(url);
    };
    TaminDocumentViewerModalComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tamin-document-viewer-modal',
                    template: "<tamin-modal #theModal>\n  <tamin-document-viewer #documentViewer></tamin-document-viewer>\n</tamin-modal>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    TaminDocumentViewerModalComponent.ctorParameters = function () { return []; };
    TaminDocumentViewerModalComponent.propDecorators = {
        documentViewer: [{ type: ViewChild, args: ['documentViewer',] }],
        theModal: [{ type: ViewChild, args: ['theModal',] }]
    };
    return TaminDocumentViewerModalComponent;
}());
export { TaminDocumentViewerModalComponent };
if (false) {
    /** @type {?} */
    TaminDocumentViewerModalComponent.prototype.documentViewer;
    /** @type {?} */
    TaminDocumentViewerModalComponent.prototype.theModal;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tZG9jdW1lbnQtdmlld2VyLW1vZGFsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RhbWluLWZyYW1ld29yay8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RhbWluLWRvY3VtZW50LXZpZXdlci90YW1pbi1kb2N1bWVudC12aWV3ZXItbW9kYWwvdGFtaW4tZG9jdW1lbnQtdmlld2VyLW1vZGFsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBVSxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDM0QsT0FBTyxFQUFDLDRCQUE0QixFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFDaEYsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0seUNBQXlDLENBQUM7QUFFNUU7SUFVRTtJQUFnQixDQUFDOzs7O0lBRWpCLG9EQUFROzs7SUFBUjtJQUNBLENBQUM7Ozs7O0lBRUQscURBQVM7Ozs7SUFBVCxVQUFVLEdBQUc7UUFDWCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Ozs7O0lBRUQsbURBQU87Ozs7SUFBUCxVQUFRLEdBQUc7UUFDVCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ25DLENBQUM7Ozs7O0lBQ0QsMERBQWM7Ozs7SUFBZCxVQUFlLEdBQUc7UUFDaEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNyQixJQUFJLENBQUMsY0FBYyxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUMxQyxDQUFDOztnQkEzQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSw2QkFBNkI7b0JBQ3ZDLHdIQUEyRDs7aUJBRTVEOzs7OztpQ0FHRSxTQUFTLFNBQUMsZ0JBQWdCOzJCQUMxQixTQUFTLFNBQUMsVUFBVTs7SUFvQnZCLHdDQUFDO0NBQUEsQUE1QkQsSUE0QkM7U0F2QlksaUNBQWlDOzs7SUFFNUMsMkRBQTBFOztJQUMxRSxxREFBcUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgT25Jbml0LCBWaWV3Q2hpbGR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUYW1pbkRvY3VtZW50Vmlld2VyQ29tcG9uZW50fSBmcm9tICcuLi90YW1pbi1kb2N1bWVudC12aWV3ZXIuY29tcG9uZW50JztcbmltcG9ydCB7VGFtaW5Nb2RhbENvbXBvbmVudH0gZnJvbSAnLi4vLi4vdGFtaW4tbW9kYWwvdGFtaW4tbW9kYWwuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGFtaW4tZG9jdW1lbnQtdmlld2VyLW1vZGFsJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RhbWluLWRvY3VtZW50LXZpZXdlci1tb2RhbC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3RhbWluLWRvY3VtZW50LXZpZXdlci1tb2RhbC5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVGFtaW5Eb2N1bWVudFZpZXdlck1vZGFsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBAVmlld0NoaWxkKCdkb2N1bWVudFZpZXdlcicpIGRvY3VtZW50Vmlld2VyOiBUYW1pbkRvY3VtZW50Vmlld2VyQ29tcG9uZW50O1xuICBAVmlld0NoaWxkKCd0aGVNb2RhbCcpIHRoZU1vZGFsOiBUYW1pbk1vZGFsQ29tcG9uZW50O1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxuICBvcGVuSW1hZ2UodXJsKSB7XG4gICAgdGhpcy50aGVNb2RhbC5zaG93KCk7XG4gICAgdGhpcy5kb2N1bWVudFZpZXdlci5sb2FkSW1hZ2UodXJsKTtcbiAgfVxuXG4gIG9wZW5QZGYodXJsKSB7XG4gICAgdGhpcy50aGVNb2RhbC5zaG93KCk7XG4gICAgdGhpcy5kb2N1bWVudFZpZXdlci5sb2FkUGRmKHVybCk7XG4gIH1cbiAgb3BlblBkZkJhc2VkNjQodXJsKSB7XG4gICAgdGhpcy50aGVNb2RhbC5zaG93KCk7XG4gICAgdGhpcy5kb2N1bWVudFZpZXdlci5sb2FkUGRmQmFzZWQ2NCh1cmwpO1xuICB9XG59XG4iXX0=