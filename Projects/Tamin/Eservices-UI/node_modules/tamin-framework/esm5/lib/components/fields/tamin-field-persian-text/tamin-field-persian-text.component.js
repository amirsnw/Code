/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, forwardRef, Input } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { FieldBaseComponent } from '../../../base/field-base.component';
var TaminFieldPersianTextComponent = /** @class */ (function (_super) {
    tslib_1.__extends(TaminFieldPersianTextComponent, _super);
    function TaminFieldPersianTextComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.maxLength = Number.MAX_SAFE_INTEGER;
        return _this;
    }
    /**
     * @return {?}
     */
    TaminFieldPersianTextComponent.prototype.initializeComponent = /**
     * @return {?}
     */
    function () {
        this.maskRef = new IMask(this.inputElement.nativeElement, {
            mask: /^[\u0600-\u06FF\s]+$/,
        });
    };
    TaminFieldPersianTextComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tamin-field-persian-text',
                    template: "<input\n  type=\"text\"\n  class=\"tamin-form-control-input\"\n  [disabled] = \"control.disabled\"\n  [class.tamin-form-control-valid]=\"control.touched && control.valid\"\n  [class.tamin-form-control-invalid]=\"control.touched && !control.valid\"\n  [attr.maxLength] = \"maxLength\"\n  [attr.placeholder] =\"placeHolder\"\n  #inputElement>\n<span>{{hint}}</span>\n\n\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return TaminFieldPersianTextComponent; })),
                            multi: true
                        }
                    ],
                    styles: [""]
                }] }
    ];
    TaminFieldPersianTextComponent.propDecorators = {
        maxLength: [{ type: Input }]
    };
    return TaminFieldPersianTextComponent;
}(FieldBaseComponent));
export { TaminFieldPersianTextComponent };
if (false) {
    /** @type {?} */
    TaminFieldPersianTextComponent.prototype.maxLength;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tZmllbGQtcGVyc2lhbi10ZXh0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RhbWluLWZyYW1ld29yay8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2ZpZWxkcy90YW1pbi1maWVsZC1wZXJzaWFuLXRleHQvdGFtaW4tZmllbGQtcGVyc2lhbi10ZXh0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBUyxNQUFNLGVBQWUsQ0FBQztBQUNuRSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNqRCxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUd0RTtJQWFxRCwwREFBa0I7SUFidkU7UUFBQSxxRUF1QkM7UUFSVSxlQUFTLEdBQUcsTUFBTSxDQUFDLGdCQUFnQixDQUFDOztJQVEvQyxDQUFDOzs7O0lBUEMsNERBQW1COzs7SUFBbkI7UUFDRSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxFQUFFO1lBQ3hELElBQUksRUFBRSxzQkFBc0I7U0FDN0IsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7Z0JBcEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsMEJBQTBCO29CQUNwQyw2WEFBd0Q7b0JBRXhELFNBQVMsRUFBRTt3QkFDVDs0QkFDRSxPQUFPLEVBQUUsaUJBQWlCOzRCQUMxQixXQUFXLEVBQUUsVUFBVTs7OzRCQUFDLGNBQU0sT0FBQSw4QkFBOEIsRUFBOUIsQ0FBOEIsRUFBQzs0QkFDN0QsS0FBSyxFQUFFLElBQUk7eUJBQ1o7cUJBQ0Y7O2lCQUVGOzs7NEJBR0UsS0FBSzs7SUFRUixxQ0FBQztDQUFBLEFBdkJELENBYXFELGtCQUFrQixHQVV0RTtTQVZZLDhCQUE4Qjs7O0lBRXpDLG1EQUE2QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBmb3J3YXJkUmVmLCBJbnB1dCwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TkdfVkFMVUVfQUNDRVNTT1J9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7RmllbGRCYXNlQ29tcG9uZW50fSBmcm9tICcuLi8uLi8uLi9iYXNlL2ZpZWxkLWJhc2UuY29tcG9uZW50JztcbmRlY2xhcmUgbGV0IElNYXNrOiBhbnk7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhbWluLWZpZWxkLXBlcnNpYW4tdGV4dCcsXG4gIHRlbXBsYXRlVXJsOiAnLi90YW1pbi1maWVsZC1wZXJzaWFuLXRleHQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90YW1pbi1maWVsZC1wZXJzaWFuLXRleHQuY29tcG9uZW50LmNzcyddLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFRhbWluRmllbGRQZXJzaWFuVGV4dENvbXBvbmVudCksXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXVxuXG59KVxuZXhwb3J0IGNsYXNzIFRhbWluRmllbGRQZXJzaWFuVGV4dENvbXBvbmVudCAgZXh0ZW5kcyBGaWVsZEJhc2VDb21wb25lbnQge1xuXG4gIEBJbnB1dCgpIG1heExlbmd0aCA9IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSO1xuICBpbml0aWFsaXplQ29tcG9uZW50KCkge1xuICAgIHRoaXMubWFza1JlZiA9IG5ldyBJTWFzayh0aGlzLmlucHV0RWxlbWVudC5uYXRpdmVFbGVtZW50LCB7XG4gICAgICBtYXNrOiAvXltcXHUwNjAwLVxcdTA2RkZcXHNdKyQvLFxuICAgIH0pO1xuICB9XG5cblxufVxuIl19