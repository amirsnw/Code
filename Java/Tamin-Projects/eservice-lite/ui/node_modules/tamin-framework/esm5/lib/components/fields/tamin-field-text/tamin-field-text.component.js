/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { FieldBaseComponent } from '../../../base/field-base.component';
var TaminFieldTextComponent = /** @class */ (function (_super) {
    tslib_1.__extends(TaminFieldTextComponent, _super);
    function TaminFieldTextComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.maxLength = Number.MAX_SAFE_INTEGER;
        _this.focus = new EventEmitter();
        _this.blur = new EventEmitter();
        return _this;
    }
    TaminFieldTextComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tamin-field-text',
                    template: "<input\n  type=\"text\"\n  class=\"tamin-form-control-input\"\n  (blur)=\"blur.emit()\"\n  (focus)=\"focus.emit()\"\n  [disabled] = \"control?.disabled\"\n  [class.tamin-form-control-valid]=\"control?.touched && control?.valid\"\n  [class.tamin-form-control-invalid]=\"control?.touched && !control?.valid\"\n  [attr.maxLength] = \"maxLength\"\n  [attr.placeholder] =\"placeHolder\"\n  #inputElement>\n<span>{{hint}}</span>\n\n\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return TaminFieldTextComponent; })),
                            multi: true
                        }
                    ],
                    styles: [":host{width:100%}"]
                }] }
    ];
    TaminFieldTextComponent.propDecorators = {
        maxLength: [{ type: Input }],
        focus: [{ type: Output }],
        blur: [{ type: Output }]
    };
    return TaminFieldTextComponent;
}(FieldBaseComponent));
export { TaminFieldTextComponent };
if (false) {
    /** @type {?} */
    TaminFieldTextComponent.prototype.maxLength;
    /** @type {?} */
    TaminFieldTextComponent.prototype.focus;
    /** @type {?} */
    TaminFieldTextComponent.prototype.blur;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tZmllbGQtdGV4dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90YW1pbi1mcmFtZXdvcmsvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9maWVsZHMvdGFtaW4tZmllbGQtdGV4dC90YW1pbi1maWVsZC10ZXh0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2pGLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ2pELE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBR3RFO0lBWTZDLG1EQUFrQjtJQVovRDtRQUFBLHFFQWtCQztRQUpVLGVBQVMsR0FBRyxNQUFNLENBQUMsZ0JBQWdCLENBQUM7UUFDbkMsV0FBSyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDM0IsVUFBSSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7O0lBRXRDLENBQUM7O2dCQWxCQSxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGtCQUFrQjtvQkFDNUIsd2JBQWdEO29CQUVoRCxTQUFTLEVBQUU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLGlCQUFpQjs0QkFDMUIsV0FBVyxFQUFFLFVBQVU7Ozs0QkFBQyxjQUFNLE9BQUEsdUJBQXVCLEVBQXZCLENBQXVCLEVBQUM7NEJBQ3RELEtBQUssRUFBRSxJQUFJO3lCQUNaO3FCQUNGOztpQkFDRjs7OzRCQUdFLEtBQUs7d0JBQ0wsTUFBTTt1QkFDTixNQUFNOztJQUVULDhCQUFDO0NBQUEsQUFsQkQsQ0FZNkMsa0JBQWtCLEdBTTlEO1NBTlksdUJBQXVCOzs7SUFFbEMsNENBQTZDOztJQUM3Qyx3Q0FBcUM7O0lBQ3JDLHVDQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIGZvcndhcmRSZWYsIElucHV0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtOR19WQUxVRV9BQ0NFU1NPUn0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHtGaWVsZEJhc2VDb21wb25lbnR9IGZyb20gJy4uLy4uLy4uL2Jhc2UvZmllbGQtYmFzZS5jb21wb25lbnQnO1xuXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhbWluLWZpZWxkLXRleHQnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGFtaW4tZmllbGQtdGV4dC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3RhbWluLWZpZWxkLXRleHQuY29tcG9uZW50LnNjc3MnXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUYW1pbkZpZWxkVGV4dENvbXBvbmVudCksXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBUYW1pbkZpZWxkVGV4dENvbXBvbmVudCBleHRlbmRzIEZpZWxkQmFzZUNvbXBvbmVudCB7XG5cbiAgQElucHV0KCkgbWF4TGVuZ3RoID0gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVI7XG4gIEBPdXRwdXQoKSBmb2N1cyA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIGJsdXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbn1cbiJdfQ==