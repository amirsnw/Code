/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { OverlayService } from '../../services/overlay/overlay.service';
export class TaminModalComponent {
    /**
     * @param {?} overlayService
     */
    constructor(overlayService) {
        this.overlayService = overlayService;
        this.width = '80%';
        this._overlay = null;
        this.buttonClicked = new EventEmitter();
        this.alertifyRef = null;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.createDialog();
    }
    /**
     * @return {?}
     */
    show() {
        if (this.alertifyRef) {
            this.alertifyRef.destroy();
            this.alertifyRef = null;
        }
        // self = this.modal.open();
        if (this.title === '') {
            this.title = ' ';
        }
        this.modalElement.nativeElement.style.display = 'block';
        this.alertifyRef = alertify.genericDialog(this.modalElement.nativeElement, this.title, this.width, this.maximizable);
    }
    /**
     * @return {?}
     */
    showOverlay() {
        if (this.alertifyRef === null) {
            return;
        }
        if (this._overlay) {
            return;
        }
        this._overlay = this.overlayService.show(this.alertifyRef.elements.dialog);
    }
    /**
     * @return {?}
     */
    hideOverlay() {
        if (this.alertifyRef === null) {
            return;
        }
        if (!this._overlay) {
            return;
        }
        this.overlayService.hide(this._overlay);
    }
    /**
     * @return {?}
     */
    hide() {
        if (this.alertifyRef === null) {
            return;
        }
        this.alertifyRef.destroy();
        this.alertifyRef = null;
    }
    /**
     * @return {?}
     */
    createDialog() {
        /** @type {?} */
        const me = this;
        if (!alertify.genericDialog) {
            /** @type {?} */
            const buttons = [];
            if (this.button1) {
                buttons.push(this.button1);
            }
            if (this.button2) {
                buttons.push(this.button2);
            }
            if (this.button3) {
                buttons.push(this.button3);
            }
            alertify.dialog('genericDialog', (/**
             * @return {?}
             */
            function () {
                return {
                    main: (/**
                     * @param {?} content
                     * @param {?} title
                     * @param {?} width
                     * @param {?} maximizable
                     * @return {?}
                     */
                    function (content, title, width, maximizable) {
                        this.setting('title', title);
                        this.setting('width', width);
                        this.setting('maximizable', maximizable);
                        this.setContent(content);
                    }),
                    setup: (/**
                     * @return {?}
                     */
                    function () {
                        return {
                            buttons: buttons,
                            options: {
                                resizable: false,
                                padding: false,
                                frameless: false,
                                autoReset: false,
                                closableByDimmer: false
                            }
                        };
                    }),
                    callback: (/**
                     * @param {?} closeEvent
                     * @return {?}
                     */
                    function (closeEvent) {
                        me.buttonClicked.emit(closeEvent);
                    }),
                    settings: {
                        width: '',
                        onClose: undefined
                    },
                    hooks: {
                        onrestore: (/**
                         * @return {?}
                         */
                        function () {
                            this.elements.dialog.style.width = this.get('width');
                        }),
                        onshow: (/**
                         * @return {?}
                         */
                        function () {
                            this.elements.dialog.style.maxWidth = 'none';
                            this.elements.dialog.style.width = this.get('width');
                        })
                    }
                };
            }));
        }
    }
}
TaminModalComponent.decorators = [
    { type: Component, args: [{
                selector: 'tamin-modal',
                template: "<div #modalElement style=\"display: none;padding: 20px\">\n  <ng-content>\n  </ng-content>\n</div>\n\n",
                styles: [".modal-content{background-color:#fefefe;margin:auto;border:1px solid #888;width:80%;box-shadow:0 4px 8px 0 rgba(0,0,0,.2),0 6px 20px 0 rgba(0,0,0,.19);-webkit-animation-name:animatetop;-webkit-animation-duration:.4s;animation-name:animatetop;animation-duration:.4s}@-webkit-keyframes animatetop{from{top:-300px;opacity:0}to{top:0;opacity:1}}@keyframes animatetop{from{top:-300px;opacity:0}to{top:0;opacity:1}}.close{color:#fff;float:left;font-size:28px;font-weight:700}.title{color:#fff;float:right;margin-top:4px;font-size:16px;font-weight:700;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.close:focus,.close:hover{color:#000;text-decoration:none;cursor:pointer}.modal-header{padding:2px 16px;background-color:#6c63fe;color:#fff;min-height:40px}.modal-body{padding:10px}.modal-footer{padding:2px 16px;background-color:#6c63fe;color:#fff}"]
            }] }
];
/** @nocollapse */
TaminModalComponent.ctorParameters = () => [
    { type: OverlayService }
];
TaminModalComponent.propDecorators = {
    modalElement: [{ type: ViewChild, args: ['modalElement',] }],
    title: [{ type: Input }],
    width: [{ type: Input }],
    maximizable: [{ type: Input }],
    buttonClicked: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    TaminModalComponent.prototype.modalElement;
    /** @type {?} */
    TaminModalComponent.prototype.title;
    /** @type {?} */
    TaminModalComponent.prototype.width;
    /** @type {?} */
    TaminModalComponent.prototype.maximizable;
    /** @type {?} */
    TaminModalComponent.prototype.button1;
    /** @type {?} */
    TaminModalComponent.prototype.button2;
    /** @type {?} */
    TaminModalComponent.prototype.button3;
    /** @type {?} */
    TaminModalComponent.prototype.modal;
    /** @type {?} */
    TaminModalComponent.prototype.draggable;
    /** @type {?} */
    TaminModalComponent.prototype.self;
    /**
     * @type {?}
     * @private
     */
    TaminModalComponent.prototype._overlay;
    /** @type {?} */
    TaminModalComponent.prototype.buttonClicked;
    /**
     * @type {?}
     * @private
     */
    TaminModalComponent.prototype.alertifyRef;
    /**
     * @type {?}
     * @private
     */
    TaminModalComponent.prototype.overlayService;
}
//# sourceMappingURL=data:application/json;base64,