/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';
export class TaminStepperStepComponent {
    /**
     * @param {?} breakpointObserver
     */
    constructor(breakpointObserver) {
        this.breakpointObserver = breakpointObserver;
        this.size = 1;
        this.breakPoints = [Breakpoints.Small, Breakpoints.Handset];
        this.renderMode = 'desktop';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.breakpointObserver
            .observe(this.breakPoints)
            .subscribe((/**
         * @param {?} state
         * @return {?}
         */
        (state) => {
            if (state.matches) {
                if (this.renderMode !== 'mobile') {
                    this.renderMode = 'mobile';
                }
            }
            else {
                if (this.renderMode !== 'desktop') {
                    this.renderMode = 'desktop';
                }
            }
        }));
    }
}
TaminStepperStepComponent.decorators = [
    { type: Component, args: [{
                selector: 'tamin-tamin-stepper-step',
                template: "<ng-container *ngIf=\"renderMode === 'desktop'\">\n  <div [ngClass]=\"'col-' + size.toString()\">\n    <div class=\"stepper-step-desktop\">\n      <div>&nbsp;</div>\n      <div [ngClass]=\"{'stepper-icon-desktop-active' : active, 'stepper-icon-desktop' : !active}\">{{iconText}}</div>\n      <div [ngClass]=\"{'stepper-text-desktop-active' : active, 'stepper-text-desktop' : !active}\">\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n      </div>\n    </div>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"renderMode === 'mobile'\">\n  <div class=\"stepper-step-mobile-container\">\n    <div style=\"display: inline-block\" [ngClass]=\"{'stepper-icon-mobile-active' : active, 'stepper-icon-mobile' : !active}\">{{iconText}}</div>\n    <div style=\"display: inline-block; vertical-align: middle\"  [ngClass]=\"{'stepper-text-active' : active, 'stepper-mobile-text' : !active}\">\n      <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #content><ng-content></ng-content></ng-template>\n",
                styles: [".col-1,.col-10,.col-11,.col-12,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9{text-align:center;padding:10px}.stepper-step-desktop{position:relative}.stepper-icon-desktop{width:30px;height:30px;border:1px solid #cacaca;border-radius:50%;color:#000;background-color:#fff;margin:0 auto;font-size:1.6em}.stepper-icon-desktop-active{width:30px;height:30px;border:1px solid #00adef;border-radius:50%;color:#fff;background-color:#00adef;margin:0 auto;font-size:1.6em}.stepper-text-desktop{width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.stepper-text-desktop-active{white-space:nowrap;overflow:hidden;color:#00adef;text-overflow:ellipsis}.stepper-step-mobile-container{width:100%;padding-right:10px}.stepper-icon-mobile{width:30px;height:30px;border:1px solid #cacaca;border-radius:50%;color:#000;background-color:#fff;font-size:1.6em;text-align:center;margin:5px}.stepper-icon-mobile-active{width:30px;height:30px;border:1px solid #00adef;border-radius:50%;color:#fff;background-color:#00adef;font-size:1.6em;text-align:center;margin:5px}.stepper-mobile-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:inline-block}.stepper-text-mobile-active{width:100%;white-space:nowrap;overflow:hidden;color:#00adef;text-overflow:ellipsis}"]
            }] }
];
/** @nocollapse */
TaminStepperStepComponent.ctorParameters = () => [
    { type: BreakpointObserver }
];
TaminStepperStepComponent.propDecorators = {
    size: [{ type: Input }],
    name: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    TaminStepperStepComponent.prototype.size;
    /** @type {?} */
    TaminStepperStepComponent.prototype.iconText;
    /** @type {?} */
    TaminStepperStepComponent.prototype.name;
    /** @type {?} */
    TaminStepperStepComponent.prototype.active;
    /** @type {?} */
    TaminStepperStepComponent.prototype.breakPoints;
    /** @type {?} */
    TaminStepperStepComponent.prototype.renderMode;
    /** @type {?} */
    TaminStepperStepComponent.prototype.breakpointObserver;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tc3RlcHBlci1zdGVwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RhbWluLWZyYW1ld29yay8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RhbWluLXN0ZXBwZXIvdGFtaW4tc3RlcHBlci1zdGVwL3RhbWluLXN0ZXBwZXItc3RlcC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFTLE1BQU0sZUFBZSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxrQkFBa0IsRUFBRSxXQUFXLEVBQWtCLE1BQU0scUJBQXFCLENBQUM7QUFPckYsTUFBTSxPQUFPLHlCQUF5Qjs7OztJQVNwQyxZQUFtQixrQkFBc0M7UUFBdEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQVBoRCxTQUFJLEdBQXFELENBQUMsQ0FBQztRQUlwRSxnQkFBVyxHQUFlLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDbkUsZUFBVSxHQUF5QixTQUFTLENBQUM7SUFHN0MsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsa0JBQWtCO2FBQ3BCLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO2FBQ3pCLFNBQVM7Ozs7UUFBQyxDQUFDLEtBQXNCLEVBQUUsRUFBRTtZQUNwQyxJQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUU7Z0JBRWpCLElBQUksSUFBSSxDQUFDLFVBQVUsS0FBSyxRQUFRLEVBQUU7b0JBQ2hDLElBQUksQ0FBQyxVQUFVLEdBQUcsUUFBUSxDQUFDO2lCQUM1QjthQUNGO2lCQUFNO2dCQUNMLElBQUksSUFBSSxDQUFDLFVBQVUsS0FBSyxTQUFTLEVBQUU7b0JBQ2pDLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDO2lCQUM3QjthQUNGO1FBQ0gsQ0FBQyxFQUFDLENBQUM7SUFDUCxDQUFDOzs7WUFoQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSwwQkFBMEI7Z0JBQ3BDLGtrQ0FBa0Q7O2FBRW5EOzs7O1lBTk8sa0JBQWtCOzs7bUJBU3ZCLEtBQUs7bUJBRUwsS0FBSzs7OztJQUZOLHlDQUFvRTs7SUFDcEUsNkNBQWlCOztJQUNqQix5Q0FBYzs7SUFDZCwyQ0FBZ0I7O0lBQ2hCLGdEQUFtRTs7SUFDbkUsK0NBQTZDOztJQUVqQyx1REFBNkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uSW5pdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0JyZWFrcG9pbnRPYnNlcnZlciwgQnJlYWtwb2ludHMsIEJyZWFrcG9pbnRTdGF0ZX0gZnJvbSAnQGFuZ3VsYXIvY2RrL2xheW91dCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhbWluLXRhbWluLXN0ZXBwZXItc3RlcCcsXG4gIHRlbXBsYXRlVXJsOiAnLi90YW1pbi1zdGVwcGVyLXN0ZXAuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90YW1pbi1zdGVwcGVyLXN0ZXAuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBUYW1pblN0ZXBwZXJTdGVwQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBASW5wdXQoKSBzaXplOiAxIHwgMiB8IDMgfCA0IHwgNSB8IDYgfCA3IHwgOCB8IDkgfCAxMCB8IDExIHwgMTIgPSAxO1xuICBpY29uVGV4dDogc3RyaW5nO1xuICBASW5wdXQoKSBuYW1lO1xuICBhY3RpdmU6IGJvb2xlYW47XG4gIGJyZWFrUG9pbnRzOiBBcnJheTxhbnk+ID0gW0JyZWFrcG9pbnRzLlNtYWxsLCBCcmVha3BvaW50cy5IYW5kc2V0XTtcbiAgcmVuZGVyTW9kZTogJ2Rlc2t0b3AnIHwgJ21vYmlsZScgPSAnZGVza3RvcCc7XG5cbiAgY29uc3RydWN0b3IocHVibGljIGJyZWFrcG9pbnRPYnNlcnZlcjogQnJlYWtwb2ludE9ic2VydmVyKSB7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmJyZWFrcG9pbnRPYnNlcnZlclxuICAgICAgLm9ic2VydmUodGhpcy5icmVha1BvaW50cylcbiAgICAgIC5zdWJzY3JpYmUoKHN0YXRlOiBCcmVha3BvaW50U3RhdGUpID0+IHtcbiAgICAgICAgaWYgKHN0YXRlLm1hdGNoZXMpIHtcblxuICAgICAgICAgIGlmICh0aGlzLnJlbmRlck1vZGUgIT09ICdtb2JpbGUnKSB7XG4gICAgICAgICAgICB0aGlzLnJlbmRlck1vZGUgPSAnbW9iaWxlJztcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKHRoaXMucmVuZGVyTW9kZSAhPT0gJ2Rlc2t0b3AnKSB7XG4gICAgICAgICAgICB0aGlzLnJlbmRlck1vZGUgPSAnZGVza3RvcCc7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgfVxufVxuIl19