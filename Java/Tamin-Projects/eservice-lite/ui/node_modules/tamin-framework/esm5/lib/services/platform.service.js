/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Platform } from '@angular/cdk/platform';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/platform";
var PlatformService = /** @class */ (function () {
    function PlatformService(platform) {
        this.platform = platform;
    }
    /**
     * @return {?}
     */
    PlatformService.prototype.isAndroid = /**
     * @return {?}
     */
    function () {
        return this.platform.ANDROID;
    };
    /**
     * @return {?}
     */
    PlatformService.prototype.isIOS = /**
     * @return {?}
     */
    function () {
        return this.platform.IOS;
    };
    /**
     * @return {?}
     */
    PlatformService.prototype.isBlink = /**
     * @return {?}
     */
    function () {
        return this.platform.BLINK;
    };
    /**
     * @return {?}
     */
    PlatformService.prototype.isEdge = /**
     * @return {?}
     */
    function () {
        return this.platform.EDGE;
    };
    /**
     * @return {?}
     */
    PlatformService.prototype.isFirefox = /**
     * @return {?}
     */
    function () {
        return this.platform.FIREFOX;
    };
    /**
     * @return {?}
     */
    PlatformService.prototype.isBrowser = /**
     * @return {?}
     */
    function () {
        return this.platform.isBrowser;
    };
    /**
     * @return {?}
     */
    PlatformService.prototype.isSafari = /**
     * @return {?}
     */
    function () {
        return this.platform.SAFARI;
    };
    /**
     * @return {?}
     */
    PlatformService.prototype.isTrident = /**
     * @return {?}
     */
    function () {
        return this.platform.TRIDENT;
    };
    /**
     * @return {?}
     */
    PlatformService.prototype.isWebkit = /**
     * @return {?}
     */
    function () {
        return this.platform.WEBKIT;
    };
    PlatformService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    PlatformService.ctorParameters = function () { return [
        { type: Platform }
    ]; };
    /** @nocollapse */ PlatformService.ngInjectableDef = i0.defineInjectable({ factory: function PlatformService_Factory() { return new PlatformService(i0.inject(i1.Platform)); }, token: PlatformService, providedIn: "root" });
    return PlatformService;
}());
export { PlatformService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PlatformService.prototype.platform;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhdGZvcm0uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RhbWluLWZyYW1ld29yay8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9wbGF0Zm9ybS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQzs7O0FBRS9DO0lBS0UseUJBQW9CLFFBQWtCO1FBQWxCLGFBQVEsR0FBUixRQUFRLENBQVU7SUFDdEMsQ0FBQzs7OztJQUVELG1DQUFTOzs7SUFBVDtRQUNFLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUM7SUFDL0IsQ0FBQzs7OztJQUVELCtCQUFLOzs7SUFBTDtRQUNFLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUM7SUFDM0IsQ0FBQzs7OztJQUVELGlDQUFPOzs7SUFBUDtRQUNFLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUM7SUFDN0IsQ0FBQzs7OztJQUVELGdDQUFNOzs7SUFBTjtRQUNFLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUM7SUFDNUIsQ0FBQzs7OztJQUVELG1DQUFTOzs7SUFBVDtRQUNFLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUM7SUFDL0IsQ0FBQzs7OztJQUVELG1DQUFTOzs7SUFBVDtRQUNFLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUM7SUFDakMsQ0FBQzs7OztJQUVELGtDQUFROzs7SUFBUjtRQUNFLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUM7SUFDOUIsQ0FBQzs7OztJQUVELG1DQUFTOzs7SUFBVDtRQUNFLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUM7SUFDL0IsQ0FBQzs7OztJQUVELGtDQUFROzs7SUFBUjtRQUNFLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUM7SUFDOUIsQ0FBQzs7Z0JBMUNGLFVBQVUsU0FBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7Ozs7Z0JBSk8sUUFBUTs7OzBCQURoQjtDQThDQyxBQTNDRCxJQTJDQztTQXhDWSxlQUFlOzs7Ozs7SUFFZCxtQ0FBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtQbGF0Zm9ybX0gZnJvbSAnQGFuZ3VsYXIvY2RrL3BsYXRmb3JtJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgUGxhdGZvcm1TZXJ2aWNlIHtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHBsYXRmb3JtOiBQbGF0Zm9ybSkge1xuICB9XG5cbiAgaXNBbmRyb2lkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnBsYXRmb3JtLkFORFJPSUQ7XG4gIH1cblxuICBpc0lPUygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5wbGF0Zm9ybS5JT1M7XG4gIH1cblxuICBpc0JsaW5rKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnBsYXRmb3JtLkJMSU5LO1xuICB9XG5cbiAgaXNFZGdlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnBsYXRmb3JtLkVER0U7XG4gIH1cblxuICBpc0ZpcmVmb3goKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMucGxhdGZvcm0uRklSRUZPWDtcbiAgfVxuXG4gIGlzQnJvd3NlcigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5wbGF0Zm9ybS5pc0Jyb3dzZXI7XG4gIH1cblxuICBpc1NhZmFyaSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5wbGF0Zm9ybS5TQUZBUkk7XG4gIH1cblxuICBpc1RyaWRlbnQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMucGxhdGZvcm0uVFJJREVOVDtcbiAgfVxuXG4gIGlzV2Via2l0KCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnBsYXRmb3JtLldFQktJVDtcbiAgfVxufVxuIl19