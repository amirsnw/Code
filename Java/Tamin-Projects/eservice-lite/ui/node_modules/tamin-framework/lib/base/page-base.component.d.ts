import { AfterContentChecked, AfterViewInit, ChangeDetectorRef, Injector, OnDestroy, OnInit } from '@angular/core';
import { TaminRestService } from '../services/tamin-rest-service/tamin-rest.service';
import { TaminSecurityService } from '../services/tamin-security/tamin-security.service';
import { FormBuilder, FormGroup } from '@angular/forms';
import { ConstantsService } from '../services/constants.service';
export declare class TaminPageBaseComponent implements OnInit, OnDestroy, AfterViewInit, AfterContentChecked {
    private injector;
    private _title;
    private overlays;
    private _overlayService;
    private _restService;
    private _securityService;
    private _persianDateTime;
    private _persianNumberPipe;
    private _router;
    private _constants;
    private _formBuilder;
    private _host;
    private _changeDetectorRef;
    isModal: boolean;
    visible: boolean;
    constructor(injector: Injector);
    ngOnInit(): void;
    title: string;
    ngOnDestroy(): void;
    readonly restService: TaminRestService;
    readonly constants: ConstantsService;
    readonly formBuilder: FormBuilder;
    readonly changeDetectorRef: ChangeDetectorRef;
    readonly securityService: TaminSecurityService;
    getPersianDate(date: any): string;
    redirectTo(path: any): void;
    showInfoMessageBox(title: string, message: string, callback?: Function): void;
    showErrorMessageBox(title: string, message: string, callback?: Function): void;
    showQuestionBox(title: string, message: string, yesCallback: Function, noCallback: Function): void;
    showRetryBox(title: string, message: string, retryCallback: Function, cancelCallback: Function): void;
    getPersianNumber(str: string): string;
    protected initializePage(): void;
    protected destroyPage(): void;
    showOverlay(element?: any): string;
    showOverlayWithMessage(message: string, element?: any): string;
    hideOverlay(id: string): void;
    private internalInitialize;
    protected loadPageData(): void;
    onTour(): void;
    ngAfterViewInit(): void;
    openModal(): any;
    markFormGroupAsTouched(form: FormGroup): void;
    ngAfterContentChecked(): void;
}
