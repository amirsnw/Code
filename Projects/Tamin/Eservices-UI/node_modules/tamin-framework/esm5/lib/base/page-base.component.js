/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ElementRef, Injector, Input } from '@angular/core';
import { OverlayService } from '../services/overlay/overlay.service';
import { TaminRestService } from '../services/tamin-rest-service/tamin-rest.service';
import { TaminSecurityService } from '../services/tamin-security/tamin-security.service';
import { PersianDateTimePipe } from '../pipes/persian-date-time.pipe';
import { PersianNumberPipe } from '../pipes/persian-number.pipe';
import { Router } from '@angular/router';
import { FormBuilder } from '@angular/forms';
import { ConstantsService } from '../services/constants.service';
var TaminPageBaseComponent = /** @class */ (function () {
    function TaminPageBaseComponent(injector) {
        this.injector = injector;
        this.overlays = [];
        this.isModal = false;
        this._overlayService = injector.get(OverlayService);
        this._restService = injector.get(TaminRestService);
        this._securityService = injector.get(TaminSecurityService);
        this._persianDateTime = injector.get(PersianDateTimePipe);
        this._persianNumberPipe = injector.get(PersianNumberPipe);
        this._router = injector.get(Router);
        this._formBuilder = injector.get(FormBuilder);
        this._host = injector.get(ElementRef);
        this._changeDetectorRef = injector.get(ChangeDetectorRef);
        this._constants = injector.get(ConstantsService);
    }
    Object.defineProperty(TaminPageBaseComponent.prototype, "visible", {
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._host.nativeElement.style.display = val ? 'block' : 'none';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    TaminPageBaseComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        window.scrollTo(0, 0);
        this.internalInitialize();
        this.initializePage();
    };
    Object.defineProperty(TaminPageBaseComponent.prototype, "title", {
        get: /**
         * @return {?}
         */
        function () {
            return this._title;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._title = val;
            document.title = 'سازمان تامین اجتماعی' + ' - ' + this._title;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    TaminPageBaseComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.overlays.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this._overlayService.hide(item.overlay);
        }));
        this.destroyPage();
        alertify.closeAll();
    };
    Object.defineProperty(TaminPageBaseComponent.prototype, "restService", {
        get: /**
         * @return {?}
         */
        function () {
            return this._restService;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TaminPageBaseComponent.prototype, "constants", {
        get: /**
         * @return {?}
         */
        function () {
            return this._constants;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TaminPageBaseComponent.prototype, "formBuilder", {
        get: /**
         * @return {?}
         */
        function () {
            return this._formBuilder;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TaminPageBaseComponent.prototype, "changeDetectorRef", {
        // get currentUser(): any {
        //   return this._securityService.currentUser;
        // }
        get: 
        // get currentUser(): any {
        //   return this._securityService.currentUser;
        // }
        /**
         * @return {?}
         */
        function () {
            return this._changeDetectorRef;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TaminPageBaseComponent.prototype, "securityService", {
        get: /**
         * @return {?}
         */
        function () {
            return this._securityService;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} date
     * @return {?}
     */
    TaminPageBaseComponent.prototype.getPersianDate = /**
     * @param {?} date
     * @return {?}
     */
    function (date) {
        try {
            return this._persianDateTime.transform(new Date(date));
        }
        catch (_a) {
            return 'تاریخ نادرست';
        }
    };
    /**
     * @param {?} path
     * @return {?}
     */
    TaminPageBaseComponent.prototype.redirectTo = /**
     * @param {?} path
     * @return {?}
     */
    function (path) {
        this._router.navigate([path]);
    };
    /**
     * @param {?} title
     * @param {?} message
     * @param {?=} callback
     * @return {?}
     */
    TaminPageBaseComponent.prototype.showInfoMessageBox = /**
     * @param {?} title
     * @param {?} message
     * @param {?=} callback
     * @return {?}
     */
    function (title, message, callback) {
        if (callback === void 0) { callback = null; }
        if (callback) {
            alertify.alert(title, message, callback);
        }
        else {
            alertify.alert(title, message);
        }
    };
    /**
     * @param {?} title
     * @param {?} message
     * @param {?=} callback
     * @return {?}
     */
    TaminPageBaseComponent.prototype.showErrorMessageBox = /**
     * @param {?} title
     * @param {?} message
     * @param {?=} callback
     * @return {?}
     */
    function (title, message, callback) {
        if (callback === void 0) { callback = null; }
        /** @type {?} */
        var theTitle = "<span style=\"color: red\">" + title + "</span>";
        if (callback) {
            alertify.alert(theTitle, message, callback);
        }
        else {
            alertify.alert(theTitle, message);
        }
    };
    /**
     * @param {?} title
     * @param {?} message
     * @param {?} yesCallback
     * @param {?} noCallback
     * @return {?}
     */
    TaminPageBaseComponent.prototype.showQuestionBox = /**
     * @param {?} title
     * @param {?} message
     * @param {?} yesCallback
     * @param {?} noCallback
     * @return {?}
     */
    function (title, message, yesCallback, noCallback) {
        alertify.confirm(title, message, yesCallback, noCallback)
            .set({
            labels: { ok: 'بلی', cancel: 'خیر' }
        });
    };
    /**
     * @param {?} title
     * @param {?} message
     * @param {?} retryCallback
     * @param {?} cancelCallback
     * @return {?}
     */
    TaminPageBaseComponent.prototype.showRetryBox = /**
     * @param {?} title
     * @param {?} message
     * @param {?} retryCallback
     * @param {?} cancelCallback
     * @return {?}
     */
    function (title, message, retryCallback, cancelCallback) {
        alertify.confirm(title, message, retryCallback, cancelCallback)
            .set({
            labels: { ok: 'تلاش مجدد', cancel: 'انصراف' },
            'closable': false
        });
    };
    /**
     * @param {?} str
     * @return {?}
     */
    TaminPageBaseComponent.prototype.getPersianNumber = /**
     * @param {?} str
     * @return {?}
     */
    function (str) {
        return this._persianNumberPipe.transform(str);
    };
    /**
     * @protected
     * @return {?}
     */
    TaminPageBaseComponent.prototype.initializePage = /**
     * @protected
     * @return {?}
     */
    function () {
    };
    /**
     * @protected
     * @return {?}
     */
    TaminPageBaseComponent.prototype.destroyPage = /**
     * @protected
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?=} element
     * @return {?}
     */
    TaminPageBaseComponent.prototype.showOverlay = /**
     * @param {?=} element
     * @return {?}
     */
    function (element) {
        if (element === void 0) { element = null; }
        if (this.overlays.findIndex((/**
         * @param {?} c
         * @return {?}
         */
        function (c) { return c.overlay === element; })) >= 0) {
            return;
        }
        /** @type {?} */
        var overlay = this._overlayService.show(element);
        /** @type {?} */
        var id = (new Date()).getTime();
        this.overlays.push({
            overlay: overlay,
            id: id.toString()
        });
        return id.toString();
    };
    /**
     * @param {?} message
     * @param {?=} element
     * @return {?}
     */
    TaminPageBaseComponent.prototype.showOverlayWithMessage = /**
     * @param {?} message
     * @param {?=} element
     * @return {?}
     */
    function (message, element) {
        if (element === void 0) { element = null; }
        if (this.overlays.findIndex((/**
         * @param {?} c
         * @return {?}
         */
        function (c) { return c.overlay === element; })) >= 0) {
            return;
        }
        /** @type {?} */
        var overlay = this._overlayService.showMessage(message, element);
        /** @type {?} */
        var id = (new Date()).getTime();
        this.overlays.push({
            overlay: overlay,
            id: id.toString()
        });
        return id.toString();
    };
    /**
     * @param {?} id
     * @return {?}
     */
    TaminPageBaseComponent.prototype.hideOverlay = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        /** @type {?} */
        var tmp = this.overlays.find((/**
         * @param {?} c
         * @return {?}
         */
        function (c) { return c.id === id; }));
        if (tmp) {
            this._overlayService.hide(tmp.overlay);
        }
        /** @type {?} */
        var index = this.overlays.findIndex((/**
         * @param {?} c
         * @return {?}
         */
        function (c) { return c.id === id; }));
        this.overlays.splice(index, 1);
    };
    /**
     * @private
     * @return {?}
     */
    TaminPageBaseComponent.prototype.internalInitialize = /**
     * @private
     * @return {?}
     */
    function () {
    };
    /**
     * @protected
     * @return {?}
     */
    TaminPageBaseComponent.prototype.loadPageData = /**
     * @protected
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    TaminPageBaseComponent.prototype.onTour = /**
     * @return {?}
     */
    function () {
        introJs().setOptions({
            'nextLabel': 'بعد',
            'prevLabel': 'قبل',
            'skipLabel': 'خروج',
            'doneLabel': 'اتمام'
        }).start();
    };
    /**
     * @return {?}
     */
    TaminPageBaseComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () { return _this.loadPageData(); }), 0);
    };
    /**
     * @return {?}
     */
    TaminPageBaseComponent.prototype.openModal = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} form
     * @return {?}
     */
    TaminPageBaseComponent.prototype.markFormGroupAsTouched = /**
     * @param {?} form
     * @return {?}
     */
    function (form) {
        ((/** @type {?} */ (Object))).values(form.controls).forEach((/**
         * @param {?} control
         * @return {?}
         */
        function (control) { return control.markAsTouched(); }));
    };
    /**
     * @return {?}
     */
    TaminPageBaseComponent.prototype.ngAfterContentChecked = /**
     * @return {?}
     */
    function () {
        this._changeDetectorRef.detectChanges();
    };
    TaminPageBaseComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tamin-page-base-component',
                    template: ''
                }] }
    ];
    /** @nocollapse */
    TaminPageBaseComponent.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    TaminPageBaseComponent.propDecorators = {
        isModal: [{ type: Input }],
        visible: [{ type: Input }]
    };
    return TaminPageBaseComponent;
}());
export { TaminPageBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    TaminPageBaseComponent.prototype._title;
    /**
     * @type {?}
     * @private
     */
    TaminPageBaseComponent.prototype.overlays;
    /**
     * @type {?}
     * @private
     */
    TaminPageBaseComponent.prototype._overlayService;
    /**
     * @type {?}
     * @private
     */
    TaminPageBaseComponent.prototype._restService;
    /**
     * @type {?}
     * @private
     */
    TaminPageBaseComponent.prototype._securityService;
    /**
     * @type {?}
     * @private
     */
    TaminPageBaseComponent.prototype._persianDateTime;
    /**
     * @type {?}
     * @private
     */
    TaminPageBaseComponent.prototype._persianNumberPipe;
    /**
     * @type {?}
     * @private
     */
    TaminPageBaseComponent.prototype._router;
    /**
     * @type {?}
     * @private
     */
    TaminPageBaseComponent.prototype._constants;
    /**
     * @type {?}
     * @private
     */
    TaminPageBaseComponent.prototype._formBuilder;
    /**
     * @type {?}
     * @private
     */
    TaminPageBaseComponent.prototype._host;
    /**
     * @type {?}
     * @private
     */
    TaminPageBaseComponent.prototype._changeDetectorRef;
    /** @type {?} */
    TaminPageBaseComponent.prototype.isModal;
    /**
     * @type {?}
     * @private
     */
    TaminPageBaseComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,