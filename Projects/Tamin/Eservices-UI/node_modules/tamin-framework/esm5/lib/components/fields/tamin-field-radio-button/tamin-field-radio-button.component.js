/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
var TaminFieldRadioButtonComponent = /** @class */ (function () {
    function TaminFieldRadioButtonComponent() {
        this.change = new EventEmitter();
    }
    Object.defineProperty(TaminFieldRadioButtonComponent.prototype, "name", {
        get: /**
         * @return {?}
         */
        function () {
            return this._name;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            var _this = this;
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this._name = value;
            }));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    TaminFieldRadioButtonComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    TaminFieldRadioButtonComponent.prototype.setSelected = /**
     * @return {?}
     */
    function () {
        this.inputElement.nativeElement.checked = true;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TaminFieldRadioButtonComponent.prototype.onChangeRadio = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.inputElement.nativeElement.checked) {
            this.change.emit(this.value);
        }
    };
    TaminFieldRadioButtonComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tamin-field-radio-button',
                    template: "<input #inputElement\n       [attr.id]=\"name + '__' + value\"\n       type=\"radio\"\n       [attr.name]=\"name\"\n       [attr.value]=\"value\" (change)=\"onChangeRadio($event)\">\n<label [attr.for]=\"name + '__' + value\" [ngClass]=\"{'radio-seleted': inputElement.checked}\">\n  <i style=\"font-size: 1.3em\" [ngClass]=\"{'icon-circle-empty': !inputElement.checked, 'icon-dot-circled': inputElement.checked}\"></i>\n  <ng-content></ng-content>\n</label>\n\n",
                    styles: [".radio-button{cursor:pointer}input[type=radio]{display:none}.radio-seleted{color:#00f;font-weight:700}label{cursor:pointer;color:#000}"]
                }] }
    ];
    TaminFieldRadioButtonComponent.propDecorators = {
        inputElement: [{ type: ViewChild, args: ['inputElement',] }],
        value: [{ type: Input }],
        change: [{ type: Output }],
        name: [{ type: Input }]
    };
    return TaminFieldRadioButtonComponent;
}());
export { TaminFieldRadioButtonComponent };
if (false) {
    /** @type {?} */
    TaminFieldRadioButtonComponent.prototype.inputElement;
    /** @type {?} */
    TaminFieldRadioButtonComponent.prototype.value;
    /** @type {?} */
    TaminFieldRadioButtonComponent.prototype.change;
    /**
     * @type {?}
     * @private
     */
    TaminFieldRadioButtonComponent.prototype._name;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tZmllbGQtcmFkaW8tYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RhbWluLWZyYW1ld29yay8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2ZpZWxkcy90YW1pbi1maWVsZC1yYWRpby1idXR0b24vdGFtaW4tZmllbGQtcmFkaW8tYnV0dG9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxVQUFVLEVBQUUsWUFBWSxFQUV4QixLQUFLLEVBQ0csTUFBTSxFQUNkLFNBQVMsRUFDVixNQUFNLGVBQWUsQ0FBQztBQUd2QjtJQUFBO1FBU1ksV0FBTSxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7SUEwQmhELENBQUM7SUF4QkMsc0JBQUksZ0RBQUk7Ozs7UUFBUjtZQUNFLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztRQUNwQixDQUFDOzs7OztRQUVELFVBQWtCLEtBQWE7WUFBL0IsaUJBSUM7WUFIQyxVQUFVOzs7WUFBQztnQkFDVCxLQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztZQUNyQixDQUFDLEVBQUMsQ0FBQztRQUNMLENBQUM7OztPQU5BOzs7O0lBUUQsaURBQVE7OztJQUFSO0lBQ0EsQ0FBQzs7OztJQUVELG9EQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7SUFDakQsQ0FBQzs7Ozs7SUFJRCxzREFBYTs7OztJQUFiLFVBQWMsS0FBWTtRQUN4QixJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLE9BQU8sRUFBRTtZQUMzQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDOUI7SUFDSCxDQUFDOztnQkFsQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSwwQkFBMEI7b0JBQ3BDLHlkQUF3RDs7aUJBRXpEOzs7K0JBR0UsU0FBUyxTQUFDLGNBQWM7d0JBQ3hCLEtBQUs7eUJBQ0wsTUFBTTt1QkFNTixLQUFLOztJQW9CUixxQ0FBQztDQUFBLEFBbkNELElBbUNDO1NBOUJZLDhCQUE4Qjs7O0lBRXpDLHNEQUFvRDs7SUFDcEQsK0NBQXVCOztJQUN2QixnREFBOEM7Ozs7O0lBQzlDLCtDQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLFxuICBmb3J3YXJkUmVmLFxuICBJbnB1dCxcbiAgT25Jbml0LCBPdXRwdXQsXG4gIFZpZXdDaGlsZFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Q29udHJvbFZhbHVlQWNjZXNzb3IsIE5HX1ZBTFVFX0FDQ0VTU09SfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhbWluLWZpZWxkLXJhZGlvLWJ1dHRvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi90YW1pbi1maWVsZC1yYWRpby1idXR0b24uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90YW1pbi1maWVsZC1yYWRpby1idXR0b24uY29tcG9uZW50LmNzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBUYW1pbkZpZWxkUmFkaW9CdXR0b25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBWaWV3Q2hpbGQoJ2lucHV0RWxlbWVudCcpIGlucHV0RWxlbWVudDogRWxlbWVudFJlZjtcbiAgQElucHV0KCkgdmFsdWU6IHN0cmluZztcbiAgQE91dHB1dCgpIGNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuICBwcml2YXRlIF9uYW1lOiBzdHJpbmc7XG4gIGdldCBuYW1lKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX25hbWU7XG4gIH1cblxuICBASW5wdXQoKSBzZXQgbmFtZSh2YWx1ZTogc3RyaW5nKSB7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLl9uYW1lID0gdmFsdWU7XG4gICAgfSk7XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgfVxuXG4gIHNldFNlbGVjdGVkKCkge1xuICAgIHRoaXMuaW5wdXRFbGVtZW50Lm5hdGl2ZUVsZW1lbnQuY2hlY2tlZCA9IHRydWU7XG4gIH1cblxuXG5cbiAgb25DaGFuZ2VSYWRpbyhldmVudDogRXZlbnQpIHtcbiAgICBpZiAodGhpcy5pbnB1dEVsZW1lbnQubmF0aXZlRWxlbWVudC5jaGVja2VkKSB7XG4gICAgICB0aGlzLmNoYW5nZS5lbWl0KHRoaXMudmFsdWUpO1xuICAgIH1cbiAgfVxufVxuIl19