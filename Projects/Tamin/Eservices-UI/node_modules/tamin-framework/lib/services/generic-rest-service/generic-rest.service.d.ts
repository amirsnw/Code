import { HttpClient } from '@angular/common/http';
import { SearchParam } from '../../models/search-param.model';
import { SortParam } from '../../models/sort-param.model';
import { EntityResultWrapper } from '../../models/entity-result-wrapper.model';
import { ObjectResultWrapper } from '../../models/object-result-wrapper.model';
export declare class GenericRestService<T> {
    private http;
    restUrl: string;
    timeout: number;
    private pagingPath;
    constructor(http: HttpClient);
    getAll(querySearchParams: SearchParam[], querySortParams: SortParam[]): Promise<ObjectResultWrapper>;
    getPagedEntity(includeMetaData: boolean, pageNo: number, pageSize: number, querySearchParams: SearchParam[], querySortParams: SortParam[]): Promise<EntityResultWrapper<T>>;
    getPagedObject(includeMetaData: boolean, pageNo: number, pageSize: number, querySearchParams: SearchParam[], querySortParams: SortParam[]): Promise<ObjectResultWrapper>;
    getById(id: number): Promise<ObjectResultWrapper>;
    getByMultipleId(ids: string[]): Promise<ObjectResultWrapper>;
    create(dataItem: T): Promise<T>;
    update(dataItem: T): Promise<T>;
    delete(id: number): Promise<void>;
    protected handleError(error: any): Promise<any>;
}
