/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChildren, Input, QueryList } from '@angular/core';
import { TaminTabComponent } from '../tamin-tab/tamin-tab.component';
var TaminTabPanelComponent = /** @class */ (function () {
    function TaminTabPanelComponent() {
        this.currentTab = 0;
    }
    /**
     * @return {?}
     */
    TaminTabPanelComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    TaminTabPanelComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        console.log('ngAfterContentInit');
        this.tabComponents.forEach((/**
         * @param {?} item
         * @param {?} index
         * @return {?}
         */
        function (item, index) {
            if (index === _this.currentTab) {
                item.present = true;
            }
        }));
    };
    /**
     * @param {?} tab
     * @param {?} index
     * @return {?}
     */
    TaminTabPanelComponent.prototype.onClick = /**
     * @param {?} tab
     * @param {?} index
     * @return {?}
     */
    function (tab, index) {
        this.currentTab = index;
        this.tabComponents.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return item.present = item === tab; }));
    };
    TaminTabPanelComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tamin-tab-panel',
                    template: "<div class=\"tab\">\r\n  <ng-container *ngFor=\"let tab of tabComponents, let idx = index\">\r\n    <button style=\"font-family: main-font, tahoma, verdana;\"\r\n      *ngIf=\"tab.visible\" class=\"tablinks\" (click)=\"onClick(tab, idx)\" [class.active] =\"idx === currentTab\">{{tab.title}}\r\n    </button>\r\n  </ng-container>\r\n</div>\r\n<ng-content></ng-content>\r\n",
                    styles: [".tab{overflow:hidden;border:1px solid #ccc;background-color:#f1f1f1;margin:3px 3px 0}.tab button{background-color:inherit;float:right;border:1px solid #aaa;border-bottom:0;border-radius:10px 10px 0 0;outline:0;cursor:pointer;padding:12px 14px;margin:2px 1px 0;transition:.3s}.tab button:hover{background-color:#e4e4e4}.tab button.active{background-color:#dfefff;border-color:#0af}"]
                }] }
    ];
    /** @nocollapse */
    TaminTabPanelComponent.ctorParameters = function () { return []; };
    TaminTabPanelComponent.propDecorators = {
        tabComponents: [{ type: ContentChildren, args: [TaminTabComponent,] }],
        currentTab: [{ type: Input }]
    };
    return TaminTabPanelComponent;
}());
export { TaminTabPanelComponent };
if (false) {
    /** @type {?} */
    TaminTabPanelComponent.prototype.tabComponents;
    /** @type {?} */
    TaminTabPanelComponent.prototype.currentTab;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tdGFiLXBhbmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RhbWluLWZyYW1ld29yay8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2NvbnRhaW5lcnMvdGFtaW4tdGFiLXBhbmVsL3RhbWluLXRhYi1wYW5lbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBbUIsU0FBUyxFQUFFLGVBQWUsRUFBRSxLQUFLLEVBQVUsU0FBUyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3JHLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLGtDQUFrQyxDQUFDO0FBRW5FO0lBU0U7UUFGUyxlQUFVLEdBQUcsQ0FBQyxDQUFDO0lBR3hCLENBQUM7Ozs7SUFFRCx5Q0FBUTs7O0lBQVI7SUFDQSxDQUFDOzs7O0lBRUQsbURBQWtCOzs7SUFBbEI7UUFBQSxpQkFPQztRQU5DLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU87Ozs7O1FBQUMsVUFBQyxJQUFJLEVBQUUsS0FBSztZQUNyQyxJQUFJLEtBQUssS0FBSyxLQUFJLENBQUMsVUFBVSxFQUFFO2dCQUM3QixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQzthQUNyQjtRQUNILENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Ozs7O0lBRUQsd0NBQU87Ozs7O0lBQVAsVUFBUSxHQUFHLEVBQUUsS0FBSztRQUNoQixJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztRQUN4QixJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU87Ozs7UUFBQyxVQUFBLElBQUksSUFBSSxPQUFBLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxLQUFLLEdBQUcsRUFBM0IsQ0FBMkIsRUFBQyxDQUFDO0lBQ2xFLENBQUM7O2dCQTNCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtvQkFDM0IsZ1lBQStDOztpQkFFaEQ7Ozs7O2dDQUVFLGVBQWUsU0FBQyxpQkFBaUI7NkJBQ2pDLEtBQUs7O0lBcUJSLDZCQUFDO0NBQUEsQUE1QkQsSUE0QkM7U0F2Qlksc0JBQXNCOzs7SUFDakMsK0NBQWdGOztJQUNoRiw0Q0FBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FmdGVyQ29udGVudEluaXQsIENvbXBvbmVudCwgQ29udGVudENoaWxkcmVuLCBJbnB1dCwgT25Jbml0LCBRdWVyeUxpc3R9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUYW1pblRhYkNvbXBvbmVudH0gZnJvbSAnLi4vdGFtaW4tdGFiL3RhbWluLXRhYi5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0YW1pbi10YWItcGFuZWwnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGFtaW4tdGFiLXBhbmVsLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdGFtaW4tdGFiLXBhbmVsLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVGFtaW5UYWJQYW5lbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJDb250ZW50SW5pdCB7XG4gIEBDb250ZW50Q2hpbGRyZW4oVGFtaW5UYWJDb21wb25lbnQpIHRhYkNvbXBvbmVudHM6IFF1ZXJ5TGlzdDxUYW1pblRhYkNvbXBvbmVudD47XG4gIEBJbnB1dCgpIGN1cnJlbnRUYWIgPSAwO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgY29uc29sZS5sb2coJ25nQWZ0ZXJDb250ZW50SW5pdCcpO1xuICAgIHRoaXMudGFiQ29tcG9uZW50cy5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgaWYgKGluZGV4ID09PSB0aGlzLmN1cnJlbnRUYWIpIHtcbiAgICAgICAgaXRlbS5wcmVzZW50ID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIG9uQ2xpY2sodGFiLCBpbmRleCkge1xuICAgIHRoaXMuY3VycmVudFRhYiA9IGluZGV4O1xuICAgIHRoaXMudGFiQ29tcG9uZW50cy5mb3JFYWNoKGl0ZW0gPT4gaXRlbS5wcmVzZW50ID0gaXRlbSA9PT0gdGFiKTtcbiAgfVxufVxuIl19