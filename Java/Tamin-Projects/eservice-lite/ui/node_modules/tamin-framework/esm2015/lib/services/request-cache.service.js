/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Inject, Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class RequestCacheService {
    /**
     * @param {?} taminApplicationConfig
     */
    constructor(taminApplicationConfig) {
        this.taminApplicationConfig = taminApplicationConfig;
        this.cache = new Map();
    }
    /**
     * @param {?} url
     * @return {?}
     */
    isCacheable(url) {
        /** @type {?} */
        const tmp = this.taminApplicationConfig.cacheableUrls.find((/**
         * @param {?} c
         * @return {?}
         */
        c => c === url));
        return tmp !== undefined;
    }
    /**
     * @param {?} url
     * @return {?}
     */
    hasCached(url) {
        return this.cache.has(url);
    }
    /**
     * @param {?} url
     * @return {?}
     */
    getCached(url) {
        return this.cache.get(url);
    }
    /**
     * @param {?} url
     * @param {?} data
     * @return {?}
     */
    setCache(url, data) {
        return this.cache.set(url, data);
    }
    /**
     * @param {?} url
     * @return {?}
     */
    deleteCache(url) {
        this.cache.delete(url);
    }
}
RequestCacheService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
RequestCacheService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: ['taminApplicationConfig',] }] }
];
/** @nocollapse */ RequestCacheService.ngInjectableDef = i0.defineInjectable({ factory: function RequestCacheService_Factory() { return new RequestCacheService(i0.inject("taminApplicationConfig")); }, token: RequestCacheService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @private
     */
    RequestCacheService.prototype.cache;
    /**
     * @type {?}
     * @private
     */
    RequestCacheService.prototype.taminApplicationConfig;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVxdWVzdC1jYWNoZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vdGFtaW4tZnJhbWV3b3JrLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL3JlcXVlc3QtY2FjaGUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7O0FBTWpELE1BQU0sT0FBTyxtQkFBbUI7Ozs7SUFJOUIsWUFBc0Qsc0JBQStDO1FBQS9DLDJCQUFzQixHQUF0QixzQkFBc0IsQ0FBeUI7UUFGN0YsVUFBSyxHQUFHLElBQUksR0FBRyxFQUFFLENBQUM7SUFHMUIsQ0FBQzs7Ozs7SUFHRCxXQUFXLENBQUMsR0FBVzs7Y0FDZixHQUFHLEdBQUcsSUFBSSxDQUFDLHNCQUFzQixDQUFDLGFBQWEsQ0FBQyxJQUFJOzs7O1FBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssR0FBRyxFQUFDO1FBQzFFLE9BQU8sR0FBRyxLQUFLLFNBQVMsQ0FBQztJQUUzQixDQUFDOzs7OztJQUVELFNBQVMsQ0FBQyxHQUFXO1FBQ25CLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFN0IsQ0FBQzs7Ozs7SUFFRCxTQUFTLENBQUMsR0FBVztRQUNuQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzdCLENBQUM7Ozs7OztJQUVELFFBQVEsQ0FBQyxHQUFXLEVBQUUsSUFBUztRQUM3QixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNuQyxDQUFDOzs7OztJQUVELFdBQVcsQ0FBQyxHQUFXO1FBQ3JCLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3pCLENBQUM7OztZQWhDRixVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkI7Ozs7NENBS2MsTUFBTSxTQUFDLHdCQUF3Qjs7Ozs7Ozs7SUFGNUMsb0NBQTBCOzs7OztJQUVkLHFEQUF5RiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7SVRhbWluQXBwbGljYXRpb25Db25maWd9IGZyb20gJy4uL2ludGVyZmFjZXMvdGFtaW4tYXBwbGljYXRpb24tY29uZmlnJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgUmVxdWVzdENhY2hlU2VydmljZSB7XG5cbiAgcHJpdmF0ZSBjYWNoZSA9IG5ldyBNYXAoKTtcblxuICBjb25zdHJ1Y3RvcihASW5qZWN0KCd0YW1pbkFwcGxpY2F0aW9uQ29uZmlnJykgcHJpdmF0ZSB0YW1pbkFwcGxpY2F0aW9uQ29uZmlnOiBJVGFtaW5BcHBsaWNhdGlvbkNvbmZpZykge1xuICB9XG5cblxuICBpc0NhY2hlYWJsZSh1cmw6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHRtcCA9IHRoaXMudGFtaW5BcHBsaWNhdGlvbkNvbmZpZy5jYWNoZWFibGVVcmxzLmZpbmQoYyA9PiBjID09PSB1cmwpO1xuICAgIHJldHVybiB0bXAgIT09IHVuZGVmaW5lZDtcblxuICB9XG5cbiAgaGFzQ2FjaGVkKHVybDogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuY2FjaGUuaGFzKHVybCk7XG5cbiAgfVxuXG4gIGdldENhY2hlZCh1cmw6IHN0cmluZykge1xuICAgIHJldHVybiB0aGlzLmNhY2hlLmdldCh1cmwpO1xuICB9XG5cbiAgc2V0Q2FjaGUodXJsOiBzdHJpbmcsIGRhdGE6IGFueSkge1xuICAgIHJldHVybiB0aGlzLmNhY2hlLnNldCh1cmwsIGRhdGEpO1xuICB9XG5cbiAgZGVsZXRlQ2FjaGUodXJsOiBzdHJpbmcpIHtcbiAgICB0aGlzLmNhY2hlLmRlbGV0ZSh1cmwpO1xuICB9XG59XG4iXX0=