/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChildren, forwardRef, Input, QueryList } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { TaminFieldRadioButtonComponent } from '../tamin-field-radio-button/tamin-field-radio-button.component';
export class TaminFieldRadioButtonGroupComponent {
    constructor() {
        this.onTouched = (/**
         * @return {?}
         */
        () => {
        });
        this.onChange = (/**
         * @param {?} value
         * @return {?}
         */
        (value) => {
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.radioButtons.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => {
                item.name = this.formControlName;
                item.change.subscribe((/**
                 * @param {?} value
                 * @return {?}
                 */
                value => {
                    this.onChange(value);
                }));
            }));
        }));
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this.onChange = fn;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    writeValue(obj) {
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.radioButtons.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => {
                if (item.value === obj) {
                    item.setSelected();
                }
            }));
        }));
    }
}
TaminFieldRadioButtonGroupComponent.decorators = [
    { type: Component, args: [{
                selector: 'tamin-field-radio-button-group',
                template: "<ng-container>\n  <ng-content></ng-content>\n</ng-container>\n<span #inputElement></span>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => TaminFieldRadioButtonGroupComponent)),
                        multi: true
                    }
                ],
                styles: [""]
            }] }
];
/** @nocollapse */
TaminFieldRadioButtonGroupComponent.ctorParameters = () => [];
TaminFieldRadioButtonGroupComponent.propDecorators = {
    radioButtons: [{ type: ContentChildren, args: [TaminFieldRadioButtonComponent,] }],
    formControlName: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    TaminFieldRadioButtonGroupComponent.prototype.radioButtons;
    /** @type {?} */
    TaminFieldRadioButtonGroupComponent.prototype.onChange;
    /** @type {?} */
    TaminFieldRadioButtonGroupComponent.prototype.onTouched;
    /** @type {?} */
    TaminFieldRadioButtonGroupComponent.prototype.formControlName;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tZmllbGQtcmFkaW8tYnV0dG9uLWdyb3VwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RhbWluLWZyYW1ld29yay8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2ZpZWxkcy90YW1pbi1maWVsZC1yYWRpby1idXR0b24tZ3JvdXAvdGFtaW4tZmllbGQtcmFkaW8tYnV0dG9uLWdyb3VwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxlQUFlLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBVSxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDL0YsT0FBTyxFQUF1QixpQkFBaUIsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3ZFLE9BQU8sRUFBQyw4QkFBOEIsRUFBQyxNQUFNLGdFQUFnRSxDQUFDO0FBYzlHLE1BQU0sT0FBTyxtQ0FBbUM7SUFPOUM7UUFDRSxJQUFJLENBQUMsU0FBUzs7O1FBQUcsR0FBRyxFQUFFO1FBQ3RCLENBQUMsQ0FBQSxDQUFDO1FBQ0YsSUFBSSxDQUFDLFFBQVE7Ozs7UUFBRyxDQUFDLEtBQWEsRUFBRSxFQUFFO1FBQ2xDLENBQUMsQ0FBQSxDQUFDO0lBQ0osQ0FBQzs7OztJQUVELFFBQVE7UUFDTixVQUFVOzs7UUFBQyxHQUFHLEVBQUU7WUFDZCxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU87Ozs7WUFBQyxJQUFJLENBQUMsRUFBRTtnQkFDL0IsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDO2dCQUNqQyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVM7Ozs7Z0JBQUMsS0FBSyxDQUFDLEVBQUU7b0JBQzVCLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ3ZCLENBQUMsRUFBQyxDQUFDO1lBQ0wsQ0FBQyxFQUFDLENBQUM7UUFDTCxDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7Ozs7O0lBRUQsZ0JBQWdCLENBQUMsRUFBTztRQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUNyQixDQUFDOzs7OztJQUVELGlCQUFpQixDQUFDLEVBQU87UUFDdkIsSUFBSSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7SUFDdEIsQ0FBQzs7Ozs7SUFFRCxVQUFVLENBQUMsR0FBUTtRQUNqQixVQUFVOzs7UUFBQyxHQUFHLEVBQUU7WUFDZCxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU87Ozs7WUFBQyxJQUFJLENBQUMsRUFBRTtnQkFDL0IsSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLEdBQUcsRUFBRTtvQkFDdEIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO2lCQUNwQjtZQUNILENBQUMsRUFBQyxDQUFDO1FBQ0wsQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDOzs7WUFyREYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQ0FBZ0M7Z0JBQzFDLHVHQUE4RDtnQkFFOUQsU0FBUyxFQUFFO29CQUNUO3dCQUNFLE9BQU8sRUFBRSxpQkFBaUI7d0JBQzFCLFdBQVcsRUFBRSxVQUFVOzs7d0JBQUMsR0FBRyxFQUFFLENBQUMsbUNBQW1DLEVBQUM7d0JBQ2xFLEtBQUssRUFBRSxJQUFJO3FCQUNaO2lCQUNGOzthQUNGOzs7OzsyQkFFRSxlQUFlLFNBQUMsOEJBQThCOzhCQUk5QyxLQUFLOzs7O0lBSk4sMkRBQ3dEOztJQUN4RCx1REFBYzs7SUFDZCx3REFBZTs7SUFDZiw4REFBd0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgQ29udGVudENoaWxkcmVuLCBmb3J3YXJkUmVmLCBJbnB1dCwgT25Jbml0LCBRdWVyeUxpc3R9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtDb250cm9sVmFsdWVBY2Nlc3NvciwgTkdfVkFMVUVfQUNDRVNTT1J9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7VGFtaW5GaWVsZFJhZGlvQnV0dG9uQ29tcG9uZW50fSBmcm9tICcuLi90YW1pbi1maWVsZC1yYWRpby1idXR0b24vdGFtaW4tZmllbGQtcmFkaW8tYnV0dG9uLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhbWluLWZpZWxkLXJhZGlvLWJ1dHRvbi1ncm91cCcsXG4gIHRlbXBsYXRlVXJsOiAnLi90YW1pbi1maWVsZC1yYWRpby1idXR0b24tZ3JvdXAuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90YW1pbi1maWVsZC1yYWRpby1idXR0b24tZ3JvdXAuY29tcG9uZW50LmNzcyddLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFRhbWluRmllbGRSYWRpb0J1dHRvbkdyb3VwQ29tcG9uZW50KSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFRhbWluRmllbGRSYWRpb0J1dHRvbkdyb3VwQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gIEBDb250ZW50Q2hpbGRyZW4oVGFtaW5GaWVsZFJhZGlvQnV0dG9uQ29tcG9uZW50KVxuICByYWRpb0J1dHRvbnM6IFF1ZXJ5TGlzdDxUYW1pbkZpZWxkUmFkaW9CdXR0b25Db21wb25lbnQ+O1xuICBvbkNoYW5nZTogYW55O1xuICBvblRvdWNoZWQ6IGFueTtcbiAgQElucHV0KCkgcHVibGljIGZvcm1Db250cm9sTmFtZTogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMub25Ub3VjaGVkID0gKCkgPT4ge1xuICAgIH07XG4gICAgdGhpcy5vbkNoYW5nZSA9ICh2YWx1ZTogc3RyaW5nKSA9PiB7XG4gICAgfTtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5yYWRpb0J1dHRvbnMuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgaXRlbS5uYW1lID0gdGhpcy5mb3JtQ29udHJvbE5hbWU7XG4gICAgICAgIGl0ZW0uY2hhbmdlLnN1YnNjcmliZSh2YWx1ZSA9PiB7XG4gICAgICAgICAgdGhpcy5vbkNoYW5nZSh2YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICByZWdpc3Rlck9uQ2hhbmdlKGZuOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLm9uQ2hhbmdlID0gZm47XG4gIH1cblxuICByZWdpc3Rlck9uVG91Y2hlZChmbjogYW55KTogdm9pZCB7XG4gICAgdGhpcy5vblRvdWNoZWQgPSBmbjtcbiAgfVxuXG4gIHdyaXRlVmFsdWUob2JqOiBhbnkpOiB2b2lkIHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMucmFkaW9CdXR0b25zLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgIGlmIChpdGVtLnZhbHVlID09PSBvYmopIHtcbiAgICAgICAgICBpdGVtLnNldFNlbGVjdGVkKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59XG4iXX0=