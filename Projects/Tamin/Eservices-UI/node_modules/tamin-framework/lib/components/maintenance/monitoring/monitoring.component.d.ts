import { EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { GenericRestService } from '../../../services/generic-rest-service/generic-rest.service';
export declare class MonitoringComponent implements OnInit, OnDestroy {
    private genericRestService;
    serviceUrls: string[];
    refreshInterval: number;
    id: string;
    type: 'service' | 'database';
    title: string;
    normalWaitingTime: number;
    warningWaitingTime: number;
    dangerWaitingTime: number;
    timeout: number;
    viewType: 'full' | 'compact';
    started: EventEmitter<void>;
    stopped: EventEmitter<void>;
    lastStatus: 'normal' | 'warning' | 'danger';
    alive: boolean;
    serviceTotalRowsCollected: Map<string, number>;
    serviceWaitingTimes: Map<string, number>;
    serviceStartTimes: Map<string, number>;
    dbWaitingTimes: Map<string, number>;
    dbStartTimes: Map<string, number>;
    statusColor: string;
    dbChartLabels: string[];
    dbChartData: any[];
    dbChartType: string;
    dbChartOptions: {};
    serviceChartLabels: string[];
    serviceChartData: any[];
    serviceChartType: string;
    private _subscription;
    constructor(genericRestService: GenericRestService<any>);
    startTimer(): void;
    stopTimer(): void;
    ngOnInit(): void;
    refreshData(): void;
    refreshServiceChart(): void;
    ngOnDestroy(): void;
    serviceChartClicked(e: any): void;
    serviceChartHovered(e: any): void;
    dbChartClicked(e: any): void;
    dbChartHovered(e: any): void;
}
