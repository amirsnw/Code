/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
export class TaminFieldRadioButtonComponent {
    constructor() {
        this.change = new EventEmitter();
    }
    /**
     * @return {?}
     */
    get name() {
        return this._name;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set name(value) {
        setTimeout((/**
         * @return {?}
         */
        () => {
            this._name = value;
        }));
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    setSelected() {
        this.inputElement.nativeElement.checked = true;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onChangeRadio(event) {
        if (this.inputElement.nativeElement.checked) {
            this.change.emit(this.value);
        }
    }
}
TaminFieldRadioButtonComponent.decorators = [
    { type: Component, args: [{
                selector: 'tamin-field-radio-button',
                template: "<input #inputElement\n       [attr.id]=\"name + '__' + value\"\n       type=\"radio\"\n       [attr.name]=\"name\"\n       [attr.value]=\"value\" (change)=\"onChangeRadio($event)\">\n<label [attr.for]=\"name + '__' + value\" [ngClass]=\"{'radio-seleted': inputElement.checked}\">\n  <i style=\"font-size: 1.3em\" [ngClass]=\"{'icon-circle-empty': !inputElement.checked, 'icon-dot-circled': inputElement.checked}\"></i>\n  <ng-content></ng-content>\n</label>\n\n",
                styles: [".radio-button{cursor:pointer}input[type=radio]{display:none}.radio-seleted{color:#00f;font-weight:700}label{cursor:pointer;color:#000}"]
            }] }
];
TaminFieldRadioButtonComponent.propDecorators = {
    inputElement: [{ type: ViewChild, args: ['inputElement',] }],
    value: [{ type: Input }],
    change: [{ type: Output }],
    name: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    TaminFieldRadioButtonComponent.prototype.inputElement;
    /** @type {?} */
    TaminFieldRadioButtonComponent.prototype.value;
    /** @type {?} */
    TaminFieldRadioButtonComponent.prototype.change;
    /**
     * @type {?}
     * @private
     */
    TaminFieldRadioButtonComponent.prototype._name;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFtaW4tZmllbGQtcmFkaW8tYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RhbWluLWZyYW1ld29yay8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2ZpZWxkcy90YW1pbi1maWVsZC1yYWRpby1idXR0b24vdGFtaW4tZmllbGQtcmFkaW8tYnV0dG9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxVQUFVLEVBQUUsWUFBWSxFQUV4QixLQUFLLEVBQ0csTUFBTSxFQUNkLFNBQVMsRUFDVixNQUFNLGVBQWUsQ0FBQztBQVF2QixNQUFNLE9BQU8sOEJBQThCO0lBTDNDO1FBU1ksV0FBTSxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7SUEwQmhELENBQUM7Ozs7SUF4QkMsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7Ozs7O0lBRUQsSUFBYSxJQUFJLENBQUMsS0FBYTtRQUM3QixVQUFVOzs7UUFBQyxHQUFHLEVBQUU7WUFDZCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNyQixDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7Ozs7SUFFRCxRQUFRO0lBQ1IsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0lBQ2pELENBQUM7Ozs7O0lBSUQsYUFBYSxDQUFDLEtBQVk7UUFDeEIsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEVBQUU7WUFDM0MsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQzlCO0lBQ0gsQ0FBQzs7O1lBbENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsMEJBQTBCO2dCQUNwQyx5ZEFBd0Q7O2FBRXpEOzs7MkJBR0UsU0FBUyxTQUFDLGNBQWM7b0JBQ3hCLEtBQUs7cUJBQ0wsTUFBTTttQkFNTixLQUFLOzs7O0lBUk4sc0RBQW9EOztJQUNwRCwrQ0FBdUI7O0lBQ3ZCLGdEQUE4Qzs7Ozs7SUFDOUMsK0NBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsXG4gIGZvcndhcmRSZWYsXG4gIElucHV0LFxuICBPbkluaXQsIE91dHB1dCxcbiAgVmlld0NoaWxkXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtDb250cm9sVmFsdWVBY2Nlc3NvciwgTkdfVkFMVUVfQUNDRVNTT1J9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGFtaW4tZmllbGQtcmFkaW8tYnV0dG9uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RhbWluLWZpZWxkLXJhZGlvLWJ1dHRvbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3RhbWluLWZpZWxkLXJhZGlvLWJ1dHRvbi5jb21wb25lbnQuY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIFRhbWluRmllbGRSYWRpb0J1dHRvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQFZpZXdDaGlsZCgnaW5wdXRFbGVtZW50JykgaW5wdXRFbGVtZW50OiBFbGVtZW50UmVmO1xuICBASW5wdXQoKSB2YWx1ZTogc3RyaW5nO1xuICBAT3V0cHV0KCkgY2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XG4gIHByaXZhdGUgX25hbWU6IHN0cmluZztcbiAgZ2V0IG5hbWUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fbmFtZTtcbiAgfVxuXG4gIEBJbnB1dCgpIHNldCBuYW1lKHZhbHVlOiBzdHJpbmcpIHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMuX25hbWUgPSB2YWx1ZTtcbiAgICB9KTtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICB9XG5cbiAgc2V0U2VsZWN0ZWQoKSB7XG4gICAgdGhpcy5pbnB1dEVsZW1lbnQubmF0aXZlRWxlbWVudC5jaGVja2VkID0gdHJ1ZTtcbiAgfVxuXG5cblxuICBvbkNoYW5nZVJhZGlvKGV2ZW50OiBFdmVudCkge1xuICAgIGlmICh0aGlzLmlucHV0RWxlbWVudC5uYXRpdmVFbGVtZW50LmNoZWNrZWQpIHtcbiAgICAgIHRoaXMuY2hhbmdlLmVtaXQodGhpcy52YWx1ZSk7XG4gICAgfVxuICB9XG59XG4iXX0=