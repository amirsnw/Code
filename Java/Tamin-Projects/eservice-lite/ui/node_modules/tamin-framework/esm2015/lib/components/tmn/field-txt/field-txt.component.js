/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, forwardRef, Input, Output, ViewChild } from '@angular/core';
import { ControlContainer, NG_VALUE_ACCESSOR } from '@angular/forms';
export class FieldTxtComponent {
    /**
     * @param {?} controlContainer
     */
    constructor(controlContainer) {
        this.controlContainer = controlContainer;
        this.value = '';
        this.maxLength = Number.MAX_SAFE_INTEGER;
        this.blur = new EventEmitter();
        this.onChange = (/**
         * @param {?} _
         * @return {?}
         */
        (_) => {
        });
        this.onTouched = (/**
         * @return {?}
         */
        () => {
            this.blur.emit();
        });
    }
    /**
     * @return {?}
     */
    updateChanges() {
        this.onChange(this.value);
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this.onChange = fn;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    writeValue(obj) {
        this.value = obj;
        this.updateChanges();
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.control = this.controlContainer.control.get(this.formControlName);
    }
}
FieldTxtComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'tmn-field-txt',
                template: `<input
    type="text"
    [(ngModel)]="value"
    (ngModelChange)="updateChanges()"
    class="tamin-form-control-input"
    (blur)="onTouched()"
    [disabled]="control?.disabled"
    [class.tamin-form-control-valid]="control?.touched && control?.valid"
    [class.tamin-form-control-invalid]="control?.touched && !control?.valid"
    [attr.maxLength]="maxLength"
    [attr.placeholder]="placeHolder"
    #element>`,
                providers: [{
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => FieldTxtComponent)),
                        multi: true
                    }],
                styles: [`:host {
      width: 100%;
    }`]
            }] }
];
/** @nocollapse */
FieldTxtComponent.ctorParameters = () => [
    { type: ControlContainer }
];
FieldTxtComponent.propDecorators = {
    element: [{ type: ViewChild, args: ['element',] }],
    maxLength: [{ type: Input }],
    formControlName: [{ type: Input }],
    placeHolder: [{ type: Input }],
    blur: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    FieldTxtComponent.prototype.value;
    /** @type {?} */
    FieldTxtComponent.prototype.control;
    /** @type {?} */
    FieldTxtComponent.prototype.element;
    /** @type {?} */
    FieldTxtComponent.prototype.maxLength;
    /** @type {?} */
    FieldTxtComponent.prototype.formControlName;
    /** @type {?} */
    FieldTxtComponent.prototype.placeHolder;
    /** @type {?} */
    FieldTxtComponent.prototype.blur;
    /** @type {?} */
    FieldTxtComponent.prototype.onChange;
    /** @type {?} */
    FieldTxtComponent.prototype.onTouched;
    /**
     * @type {?}
     * @private
     */
    FieldTxtComponent.prototype.controlContainer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmllbGQtdHh0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RhbWluLWZyYW1ld29yay8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3Rtbi9maWVsZC10eHQvZmllbGQtdHh0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUVMLFNBQVMsRUFDVCxVQUFVLEVBQ1YsWUFBWSxFQUNaLFVBQVUsRUFDVixLQUFLLEVBQ0wsTUFBTSxFQUNOLFNBQVMsRUFDVixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBRUwsZ0JBQWdCLEVBRWhCLGlCQUFpQixFQUNsQixNQUFNLGdCQUFnQixDQUFDO0FBNkJ4QixNQUFNLE9BQU8saUJBQWlCOzs7O0lBZ0I1QixZQUFvQixnQkFBa0M7UUFBbEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQWZ0RCxVQUFLLEdBQUcsRUFBRSxDQUFDO1FBR0YsY0FBUyxHQUFHLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztRQUduQyxTQUFJLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUVwQyxhQUFROzs7O1FBQXFCLENBQUMsQ0FBTSxFQUFFLEVBQUU7UUFDeEMsQ0FBQyxFQUFBO1FBRUQsY0FBUzs7O1FBQWUsR0FBRyxFQUFFO1lBQzNCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDbkIsQ0FBQyxFQUFBO0lBSUQsQ0FBQzs7OztJQUVELGFBQWE7UUFDWCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM1QixDQUFDOzs7OztJQUVELGdCQUFnQixDQUFDLEVBQU87UUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7SUFDckIsQ0FBQzs7Ozs7SUFFRCxpQkFBaUIsQ0FBQyxFQUFPO1FBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO0lBQ3RCLENBQUM7Ozs7O0lBRUQsVUFBVSxDQUFDLEdBQVE7UUFDakIsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUM7UUFDakIsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7Ozs7SUFFRCxrQkFBa0I7UUFDaEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDekUsQ0FBQzs7O1lBakVGLFNBQVMsU0FBQzs7Z0JBRVQsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Y0FXRTtnQkFNWixTQUFTLEVBQUUsQ0FBQzt3QkFDVixPQUFPLEVBQUUsaUJBQWlCO3dCQUMxQixXQUFXLEVBQUUsVUFBVTs7O3dCQUFDLEdBQUcsRUFBRSxDQUFDLGlCQUFpQixFQUFDO3dCQUNoRCxLQUFLLEVBQUUsSUFBSTtxQkFDWixDQUFDO3lCQVJBOztNQUVFO2FBT0w7Ozs7WUEvQkMsZ0JBQWdCOzs7c0JBbUNmLFNBQVMsU0FBQyxTQUFTO3dCQUNuQixLQUFLOzhCQUNMLEtBQUs7MEJBQ0wsS0FBSzttQkFDTCxNQUFNOzs7O0lBTlAsa0NBQVc7O0lBQ1gsb0NBQXlCOztJQUN6QixvQ0FBMEM7O0lBQzFDLHNDQUE2Qzs7SUFDN0MsNENBQWlDOztJQUNqQyx3Q0FBNkI7O0lBQzdCLGlDQUFvQzs7SUFFcEMscUNBQ0M7O0lBRUQsc0NBRUM7Ozs7O0lBRVcsNkNBQTBDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQWZ0ZXJDb250ZW50SW5pdCxcbiAgQ29tcG9uZW50LFxuICBFbGVtZW50UmVmLFxuICBFdmVudEVtaXR0ZXIsXG4gIGZvcndhcmRSZWYsXG4gIElucHV0LFxuICBPdXRwdXQsXG4gIFZpZXdDaGlsZFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIEFic3RyYWN0Q29udHJvbCxcbiAgQ29udHJvbENvbnRhaW5lcixcbiAgQ29udHJvbFZhbHVlQWNjZXNzb3IsXG4gIE5HX1ZBTFVFX0FDQ0VTU09SXG59IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7SVRhbWluRmllbGR9IGZyb20gJy4uL0lUYW1pbkZpZWxkJztcblxuQENvbXBvbmVudCh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpjb21wb25lbnQtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICd0bW4tZmllbGQtdHh0JyxcbiAgdGVtcGxhdGU6IGA8aW5wdXRcbiAgICB0eXBlPVwidGV4dFwiXG4gICAgWyhuZ01vZGVsKV09XCJ2YWx1ZVwiXG4gICAgKG5nTW9kZWxDaGFuZ2UpPVwidXBkYXRlQ2hhbmdlcygpXCJcbiAgICBjbGFzcz1cInRhbWluLWZvcm0tY29udHJvbC1pbnB1dFwiXG4gICAgKGJsdXIpPVwib25Ub3VjaGVkKClcIlxuICAgIFtkaXNhYmxlZF09XCJjb250cm9sPy5kaXNhYmxlZFwiXG4gICAgW2NsYXNzLnRhbWluLWZvcm0tY29udHJvbC12YWxpZF09XCJjb250cm9sPy50b3VjaGVkICYmIGNvbnRyb2w/LnZhbGlkXCJcbiAgICBbY2xhc3MudGFtaW4tZm9ybS1jb250cm9sLWludmFsaWRdPVwiY29udHJvbD8udG91Y2hlZCAmJiAhY29udHJvbD8udmFsaWRcIlxuICAgIFthdHRyLm1heExlbmd0aF09XCJtYXhMZW5ndGhcIlxuICAgIFthdHRyLnBsYWNlaG9sZGVyXT1cInBsYWNlSG9sZGVyXCJcbiAgICAjZWxlbWVudD5gLFxuICBzdHlsZXM6IFtcbiAgICBgOmhvc3Qge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfWBcbiAgXSxcbiAgcHJvdmlkZXJzOiBbe1xuICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IEZpZWxkVHh0Q29tcG9uZW50KSxcbiAgICBtdWx0aTogdHJ1ZVxuICB9XVxufSlcbmV4cG9ydCBjbGFzcyBGaWVsZFR4dENvbXBvbmVudCBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBJVGFtaW5GaWVsZCwgQWZ0ZXJDb250ZW50SW5pdCB7XG4gIHZhbHVlID0gJyc7XG4gIGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbDtcbiAgQFZpZXdDaGlsZCgnZWxlbWVudCcpIGVsZW1lbnQ6IEVsZW1lbnRSZWY7XG4gIEBJbnB1dCgpIG1heExlbmd0aCA9IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSO1xuICBASW5wdXQoKSBmb3JtQ29udHJvbE5hbWU6IHN0cmluZztcbiAgQElucHV0KCkgcGxhY2VIb2xkZXI6IHN0cmluZztcbiAgQE91dHB1dCgpIGJsdXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgb25DaGFuZ2U6IChfOiBhbnkpID0+IHZvaWQgPSAoXzogYW55KSA9PiB7XG4gIH1cblxuICBvblRvdWNoZWQ6ICgpID0+IHZvaWQgPSAoKSA9PiB7XG4gICAgdGhpcy5ibHVyLmVtaXQoKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY29udHJvbENvbnRhaW5lcjogQ29udHJvbENvbnRhaW5lcikge1xuXG4gIH1cblxuICB1cGRhdGVDaGFuZ2VzKCkge1xuICAgIHRoaXMub25DaGFuZ2UodGhpcy52YWx1ZSk7XG4gIH1cblxuICByZWdpc3Rlck9uQ2hhbmdlKGZuOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLm9uQ2hhbmdlID0gZm47XG4gIH1cblxuICByZWdpc3Rlck9uVG91Y2hlZChmbjogYW55KTogdm9pZCB7XG4gICAgdGhpcy5vblRvdWNoZWQgPSBmbjtcbiAgfVxuXG4gIHdyaXRlVmFsdWUob2JqOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLnZhbHVlID0gb2JqO1xuICAgIHRoaXMudXBkYXRlQ2hhbmdlcygpO1xuICB9XG5cbiAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQge1xuICAgIHRoaXMuY29udHJvbCA9IHRoaXMuY29udHJvbENvbnRhaW5lci5jb250cm9sLmdldCh0aGlzLmZvcm1Db250cm9sTmFtZSk7XG4gIH1cbn1cbiJdfQ==